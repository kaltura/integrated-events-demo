"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaUiConf = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaUiConfObjType_1 = require("./KalturaUiConfObjType");
var KalturaUiConfCreationMode_1 = require("./KalturaUiConfCreationMode");
var KalturaUiConfV2Redirect_1 = require("./KalturaUiConfV2Redirect");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaUiConf = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaUiConf, _super);
    function KalturaUiConf(data) {
        return _super.call(this, data) || this;
    }
    KalturaUiConf.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaUiConf' },
            id: { type: 'n', readOnly: true },
            name: { type: 's' },
            description: { type: 's' },
            partnerId: { type: 'n', readOnly: true },
            objType: { type: 'en', subTypeConstructor: KalturaUiConfObjType_1.KalturaUiConfObjType, subType: 'KalturaUiConfObjType' },
            objTypeAsString: { type: 's', readOnly: true },
            width: { type: 'n' },
            height: { type: 'n' },
            htmlParams: { type: 's' },
            swfUrl: { type: 's' },
            confFilePath: { type: 's', readOnly: true },
            confFile: { type: 's' },
            confFileFeatures: { type: 's' },
            config: { type: 's' },
            confVars: { type: 's' },
            useCdn: { type: 'b' },
            tags: { type: 's' },
            swfUrlVersion: { type: 's' },
            createdAt: { type: 'd', readOnly: true },
            updatedAt: { type: 'd', readOnly: true },
            creationMode: { type: 'en', subTypeConstructor: KalturaUiConfCreationMode_1.KalturaUiConfCreationMode, subType: 'KalturaUiConfCreationMode' },
            html5Url: { type: 's' },
            version: { type: 's', readOnly: true },
            partnerTags: { type: 's' },
            v2Redirect: { type: 'o', subTypeConstructor: KalturaUiConfV2Redirect_1.KalturaUiConfV2Redirect, subType: 'KalturaUiConfV2Redirect' }
        });
        return result;
    };
    return KalturaUiConf;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaUiConf = KalturaUiConf;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaUiConf', KalturaUiConf);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhVWlDb25mLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsK0RBQThEO0FBQzlELHlFQUF3RTtBQUN4RSxxRUFBb0U7QUFDcEUsOERBQWtGO0FBd0JsRjtJQUFtQyx5Q0FBaUI7SUE0QmhELHVCQUFZLElBQXlCO2VBRWpDLGtCQUFNLElBQUksQ0FBQztJQUNmLENBQUM7SUFFUyxvQ0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxlQUFlLEVBQUU7WUFDbEUsRUFBRSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQ3BDLElBQUksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDckIsV0FBVyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM1QixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDM0MsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywyQ0FBb0IsRUFBRSxPQUFPLEVBQUcsc0JBQXNCLEVBQUU7WUFDdEcsZUFBZSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQ2pELEtBQUssRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdEIsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN2QixVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzNCLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdkIsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQzlDLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsZ0JBQWdCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ2pDLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdkIsUUFBUSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN6QixNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3ZCLElBQUksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDckIsYUFBYSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM5QixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDM0MsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQzNDLFlBQVksRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcscURBQXlCLEVBQUUsT0FBTyxFQUFHLDJCQUEyQixFQUFFO1lBQ3JILFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQ3pDLFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDNUIsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxpREFBdUIsRUFBRSxPQUFPLEVBQUcseUJBQXlCLEVBQUU7U0FDckcsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLG9CQUFDO0FBQUQsQ0FyRUEsQUFxRUMsQ0FyRWtDLHVDQUFpQixHQXFFbkQ7QUFyRVksc0NBQWE7QUF1RTFCLDJDQUFtQixDQUFDLFlBQVksQ0FBQyxlQUFlLEVBQUMsYUFBYSxDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFVaUNvbmYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhVWlDb25mT2JqVHlwZSB9IGZyb20gJy4vS2FsdHVyYVVpQ29uZk9ialR5cGUnO1xuaW1wb3J0IHsgS2FsdHVyYVVpQ29uZkNyZWF0aW9uTW9kZSB9IGZyb20gJy4vS2FsdHVyYVVpQ29uZkNyZWF0aW9uTW9kZSc7XG5pbXBvcnQgeyBLYWx0dXJhVWlDb25mVjJSZWRpcmVjdCB9IGZyb20gJy4vS2FsdHVyYVVpQ29uZlYyUmVkaXJlY3QnO1xuaW1wb3J0IHsgS2FsdHVyYU9iamVjdEJhc2UsIEthbHR1cmFPYmplY3RCYXNlQXJncyB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFVaUNvbmZBcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlQXJncyB7XG4gICAgbmFtZT8gOiBzdHJpbmc7XG5cdGRlc2NyaXB0aW9uPyA6IHN0cmluZztcblx0b2JqVHlwZT8gOiBLYWx0dXJhVWlDb25mT2JqVHlwZTtcblx0d2lkdGg/IDogbnVtYmVyO1xuXHRoZWlnaHQ/IDogbnVtYmVyO1xuXHRodG1sUGFyYW1zPyA6IHN0cmluZztcblx0c3dmVXJsPyA6IHN0cmluZztcblx0Y29uZkZpbGU/IDogc3RyaW5nO1xuXHRjb25mRmlsZUZlYXR1cmVzPyA6IHN0cmluZztcblx0Y29uZmlnPyA6IHN0cmluZztcblx0Y29uZlZhcnM/IDogc3RyaW5nO1xuXHR1c2VDZG4/IDogYm9vbGVhbjtcblx0dGFncz8gOiBzdHJpbmc7XG5cdHN3ZlVybFZlcnNpb24/IDogc3RyaW5nO1xuXHRjcmVhdGlvbk1vZGU/IDogS2FsdHVyYVVpQ29uZkNyZWF0aW9uTW9kZTtcblx0aHRtbDVVcmw/IDogc3RyaW5nO1xuXHRwYXJ0bmVyVGFncz8gOiBzdHJpbmc7XG5cdHYyUmVkaXJlY3Q/IDogS2FsdHVyYVVpQ29uZlYyUmVkaXJlY3Q7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFVaUNvbmYgZXh0ZW5kcyBLYWx0dXJhT2JqZWN0QmFzZSB7XG5cbiAgICByZWFkb25seSBpZCA6IG51bWJlcjtcblx0bmFtZSA6IHN0cmluZztcblx0ZGVzY3JpcHRpb24gOiBzdHJpbmc7XG5cdHJlYWRvbmx5IHBhcnRuZXJJZCA6IG51bWJlcjtcblx0b2JqVHlwZSA6IEthbHR1cmFVaUNvbmZPYmpUeXBlO1xuXHRyZWFkb25seSBvYmpUeXBlQXNTdHJpbmcgOiBzdHJpbmc7XG5cdHdpZHRoIDogbnVtYmVyO1xuXHRoZWlnaHQgOiBudW1iZXI7XG5cdGh0bWxQYXJhbXMgOiBzdHJpbmc7XG5cdHN3ZlVybCA6IHN0cmluZztcblx0cmVhZG9ubHkgY29uZkZpbGVQYXRoIDogc3RyaW5nO1xuXHRjb25mRmlsZSA6IHN0cmluZztcblx0Y29uZkZpbGVGZWF0dXJlcyA6IHN0cmluZztcblx0Y29uZmlnIDogc3RyaW5nO1xuXHRjb25mVmFycyA6IHN0cmluZztcblx0dXNlQ2RuIDogYm9vbGVhbjtcblx0dGFncyA6IHN0cmluZztcblx0c3dmVXJsVmVyc2lvbiA6IHN0cmluZztcblx0cmVhZG9ubHkgY3JlYXRlZEF0IDogRGF0ZTtcblx0cmVhZG9ubHkgdXBkYXRlZEF0IDogRGF0ZTtcblx0Y3JlYXRpb25Nb2RlIDogS2FsdHVyYVVpQ29uZkNyZWF0aW9uTW9kZTtcblx0aHRtbDVVcmwgOiBzdHJpbmc7XG5cdHJlYWRvbmx5IHZlcnNpb24gOiBzdHJpbmc7XG5cdHBhcnRuZXJUYWdzIDogc3RyaW5nO1xuXHR2MlJlZGlyZWN0IDogS2FsdHVyYVVpQ29uZlYyUmVkaXJlY3Q7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFVaUNvbmZBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYVVpQ29uZicgfSxcblx0XHRcdFx0aWQgOiB7IHR5cGUgOiAnbicsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRuYW1lIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGRlc2NyaXB0aW9uIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHBhcnRuZXJJZCA6IHsgdHlwZSA6ICduJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdG9ialR5cGUgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhVWlDb25mT2JqVHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhVWlDb25mT2JqVHlwZScgfSxcblx0XHRcdFx0b2JqVHlwZUFzU3RyaW5nIDogeyB0eXBlIDogJ3MnLCByZWFkT25seSA6IHRydWUgfSxcblx0XHRcdFx0d2lkdGggOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0aGVpZ2h0IDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGh0bWxQYXJhbXMgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c3dmVXJsIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNvbmZGaWxlUGF0aCA6IHsgdHlwZSA6ICdzJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdGNvbmZGaWxlIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNvbmZGaWxlRmVhdHVyZXMgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Y29uZmlnIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNvbmZWYXJzIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHVzZUNkbiA6IHsgdHlwZSA6ICdiJyB9LFxuXHRcdFx0XHR0YWdzIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHN3ZlVybFZlcnNpb24gOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Y3JlYXRlZEF0IDogeyB0eXBlIDogJ2QnLCByZWFkT25seSA6IHRydWUgfSxcblx0XHRcdFx0dXBkYXRlZEF0IDogeyB0eXBlIDogJ2QnLCByZWFkT25seSA6IHRydWUgfSxcblx0XHRcdFx0Y3JlYXRpb25Nb2RlIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVVpQ29uZkNyZWF0aW9uTW9kZSwgc3ViVHlwZSA6ICdLYWx0dXJhVWlDb25mQ3JlYXRpb25Nb2RlJyB9LFxuXHRcdFx0XHRodG1sNVVybCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHR2ZXJzaW9uIDogeyB0eXBlIDogJ3MnLCByZWFkT25seSA6IHRydWUgfSxcblx0XHRcdFx0cGFydG5lclRhZ3MgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0djJSZWRpcmVjdCA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVVpQ29uZlYyUmVkaXJlY3QsIHN1YlR5cGUgOiAnS2FsdHVyYVVpQ29uZlYyUmVkaXJlY3QnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhVWlDb25mJyxLYWx0dXJhVWlDb25mKTtcbiJdfQ==
