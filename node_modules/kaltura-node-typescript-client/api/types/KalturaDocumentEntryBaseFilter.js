"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaDocumentEntryBaseFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaDocumentType_1 = require("./KalturaDocumentType");
var KalturaBaseEntryFilter_1 = require("./KalturaBaseEntryFilter");
var KalturaDocumentEntryBaseFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaDocumentEntryBaseFilter, _super);
    function KalturaDocumentEntryBaseFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaDocumentEntryBaseFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaDocumentEntryBaseFilter' },
            documentTypeEqual: { type: 'en', subTypeConstructor: KalturaDocumentType_1.KalturaDocumentType, subType: 'KalturaDocumentType' },
            documentTypeIn: { type: 's' },
            assetParamsIdsMatchOr: { type: 's' },
            assetParamsIdsMatchAnd: { type: 's' }
        });
        return result;
    };
    return KalturaDocumentEntryBaseFilter;
}(KalturaBaseEntryFilter_1.KalturaBaseEntryFilter));
exports.KalturaDocumentEntryBaseFilter = KalturaDocumentEntryBaseFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaDocumentEntryBaseFilter', KalturaDocumentEntryBaseFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRG9jdW1lbnRFbnRyeUJhc2VGaWx0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCw2REFBNEQ7QUFDNUQsbUVBQThGO0FBVTlGO0lBQW9ELDBEQUFzQjtJQU90RSx3Q0FBWSxJQUEwQztlQUVsRCxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMscURBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsZ0NBQWdDLEVBQUU7WUFDbkYsaUJBQWlCLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLHlDQUFtQixFQUFFLE9BQU8sRUFBRyxxQkFBcUIsRUFBRTtZQUM5RyxjQUFjLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQy9CLHFCQUFxQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN0QyxzQkFBc0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDOUIsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHFDQUFDO0FBQUQsQ0EzQkEsQUEyQkMsQ0EzQm1ELCtDQUFzQixHQTJCekU7QUEzQlksd0VBQThCO0FBNkIzQywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsZ0NBQWdDLEVBQUMsOEJBQThCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYURvY3VtZW50RW50cnlCYXNlRmlsdGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYURvY3VtZW50VHlwZSB9IGZyb20gJy4vS2FsdHVyYURvY3VtZW50VHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhQmFzZUVudHJ5RmlsdGVyLCBLYWx0dXJhQmFzZUVudHJ5RmlsdGVyQXJncyB9IGZyb20gJy4vS2FsdHVyYUJhc2VFbnRyeUZpbHRlcic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYURvY3VtZW50RW50cnlCYXNlRmlsdGVyQXJncyAgZXh0ZW5kcyBLYWx0dXJhQmFzZUVudHJ5RmlsdGVyQXJncyB7XG4gICAgZG9jdW1lbnRUeXBlRXF1YWw/IDogS2FsdHVyYURvY3VtZW50VHlwZTtcblx0ZG9jdW1lbnRUeXBlSW4/IDogc3RyaW5nO1xuXHRhc3NldFBhcmFtc0lkc01hdGNoT3I/IDogc3RyaW5nO1xuXHRhc3NldFBhcmFtc0lkc01hdGNoQW5kPyA6IHN0cmluZztcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYURvY3VtZW50RW50cnlCYXNlRmlsdGVyIGV4dGVuZHMgS2FsdHVyYUJhc2VFbnRyeUZpbHRlciB7XG5cbiAgICBkb2N1bWVudFR5cGVFcXVhbCA6IEthbHR1cmFEb2N1bWVudFR5cGU7XG5cdGRvY3VtZW50VHlwZUluIDogc3RyaW5nO1xuXHRhc3NldFBhcmFtc0lkc01hdGNoT3IgOiBzdHJpbmc7XG5cdGFzc2V0UGFyYW1zSWRzTWF0Y2hBbmQgOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFEb2N1bWVudEVudHJ5QmFzZUZpbHRlckFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhRG9jdW1lbnRFbnRyeUJhc2VGaWx0ZXInIH0sXG5cdFx0XHRcdGRvY3VtZW50VHlwZUVxdWFsIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYURvY3VtZW50VHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhRG9jdW1lbnRUeXBlJyB9LFxuXHRcdFx0XHRkb2N1bWVudFR5cGVJbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRhc3NldFBhcmFtc0lkc01hdGNoT3IgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0YXNzZXRQYXJhbXNJZHNNYXRjaEFuZCA6IHsgdHlwZSA6ICdzJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYURvY3VtZW50RW50cnlCYXNlRmlsdGVyJyxLYWx0dXJhRG9jdW1lbnRFbnRyeUJhc2VGaWx0ZXIpO1xuIl19
