"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ResponseProfileUpdateStatusAction = void 0;
var tslib_1 = require("tslib");
var KalturaResponseProfile_1 = require("./KalturaResponseProfile");
var KalturaResponseProfileStatus_1 = require("./KalturaResponseProfileStatus");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'responseProfile' action 'updateStatus'.
 *
 * Usage: Update response profile status by id
 *
 * Server response type:         KalturaResponseProfile
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var ResponseProfileUpdateStatusAction = /** @class */ (function (_super) {
    tslib_1.__extends(ResponseProfileUpdateStatusAction, _super);
    function ResponseProfileUpdateStatusAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaResponseProfile', responseConstructor: KalturaResponseProfile_1.KalturaResponseProfile }) || this;
    }
    ResponseProfileUpdateStatusAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'responseprofile' },
            action: { type: 'c', default: 'updateStatus' },
            id: { type: 'n' },
            status: { type: 'en', subTypeConstructor: KalturaResponseProfileStatus_1.KalturaResponseProfileStatus, subType: 'KalturaResponseProfileStatus' }
        });
        return result;
    };
    return ResponseProfileUpdateStatusAction;
}(kaltura_request_1.KalturaRequest));
exports.ResponseProfileUpdateStatusAction = ResponseProfileUpdateStatusAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9SZXNwb25zZVByb2ZpbGVVcGRhdGVTdGF0dXNBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLG1FQUFrRTtBQUVsRSwrRUFBOEU7QUFDOUUsc0RBQXdFO0FBT3hFOzs7Ozs7Ozs7R0FTRztBQUNIO0lBQXVELDZEQUFzQztJQUt6RiwyQ0FBWSxJQUE0QztlQUVwRCxrQkFBTSxJQUFJLEVBQUUsRUFBQyxZQUFZLEVBQUcsR0FBRyxFQUFFLGVBQWUsRUFBRyx3QkFBd0IsRUFBRSxtQkFBbUIsRUFBRywrQ0FBc0IsRUFBRyxDQUFDO0lBQ2pJLENBQUM7SUFFUyx3REFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxpQkFBaUIsRUFBRTtZQUNqRSxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxjQUFjLEVBQUU7WUFDakQsRUFBRSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNuQixNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLDJEQUE0QixFQUFFLE9BQU8sRUFBRyw4QkFBOEIsRUFBRTtTQUM1RyxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsd0NBQUM7QUFBRCxDQXhCQSxBQXdCQyxDQXhCc0QsZ0NBQWMsR0F3QnBFO0FBeEJZLDhFQUFpQyIsImZpbGUiOiJhcGkvdHlwZXMvUmVzcG9uc2VQcm9maWxlVXBkYXRlU3RhdHVzQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFSZXNwb25zZVByb2ZpbGUgfSBmcm9tICcuL0thbHR1cmFSZXNwb25zZVByb2ZpbGUnO1xuXG5pbXBvcnQgeyBLYWx0dXJhUmVzcG9uc2VQcm9maWxlU3RhdHVzIH0gZnJvbSAnLi9LYWx0dXJhUmVzcG9uc2VQcm9maWxlU3RhdHVzJztcbmltcG9ydCB7IEthbHR1cmFSZXF1ZXN0LCBLYWx0dXJhUmVxdWVzdEFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlc3BvbnNlUHJvZmlsZVVwZGF0ZVN0YXR1c0FjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBpZCA6IG51bWJlcjtcblx0c3RhdHVzIDogS2FsdHVyYVJlc3BvbnNlUHJvZmlsZVN0YXR1cztcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ3Jlc3BvbnNlUHJvZmlsZScgYWN0aW9uICd1cGRhdGVTdGF0dXMnLlxuICpcbiAqIFVzYWdlOiBVcGRhdGUgcmVzcG9uc2UgcHJvZmlsZSBzdGF0dXMgYnkgaWRcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhUmVzcG9uc2VQcm9maWxlXG4gKiBTZXJ2ZXIgZmFpbHVyZSByZXNwb25zZSB0eXBlOiBLYWx0dXJhQVBJRXhjZXB0aW9uXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIEthbHR1cmFSZXF1ZXN0XG4gKi9cbmV4cG9ydCBjbGFzcyBSZXNwb25zZVByb2ZpbGVVcGRhdGVTdGF0dXNBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdDxLYWx0dXJhUmVzcG9uc2VQcm9maWxlPiB7XG5cbiAgICBpZCA6IG51bWJlcjtcblx0c3RhdHVzIDogS2FsdHVyYVJlc3BvbnNlUHJvZmlsZVN0YXR1cztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBSZXNwb25zZVByb2ZpbGVVcGRhdGVTdGF0dXNBY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdvJywgcmVzcG9uc2VTdWJUeXBlIDogJ0thbHR1cmFSZXNwb25zZVByb2ZpbGUnLCByZXNwb25zZUNvbnN0cnVjdG9yIDogS2FsdHVyYVJlc3BvbnNlUHJvZmlsZSAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAncmVzcG9uc2Vwcm9maWxlJyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAndXBkYXRlU3RhdHVzJyB9LFxuXHRcdFx0XHRpZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRzdGF0dXMgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhUmVzcG9uc2VQcm9maWxlU3RhdHVzLCBzdWJUeXBlIDogJ0thbHR1cmFSZXNwb25zZVByb2ZpbGVTdGF0dXMnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
