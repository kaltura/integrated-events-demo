"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaBatchHistoryData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaBatchHistoryData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaBatchHistoryData, _super);
    function KalturaBatchHistoryData(data) {
        return _super.call(this, data) || this;
    }
    KalturaBatchHistoryData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaBatchHistoryData' },
            schedulerId: { type: 'n' },
            workerId: { type: 'n' },
            batchIndex: { type: 'n' },
            timeStamp: { type: 'n' },
            message: { type: 's' },
            errType: { type: 'n' },
            errNumber: { type: 'n' },
            hostName: { type: 's' },
            sessionId: { type: 's' },
            schedulerName: { type: 's' }
        });
        return result;
    };
    return KalturaBatchHistoryData;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaBatchHistoryData = KalturaBatchHistoryData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaBatchHistoryData', KalturaBatchHistoryData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQmF0Y2hIaXN0b3J5RGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELDhEQUFrRjtBQWdCbEY7SUFBNkMsbURBQWlCO0lBYTFELGlDQUFZLElBQW1DO2VBRTNDLGtCQUFNLElBQUksQ0FBQztJQUNmLENBQUM7SUFFUyw4Q0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyx5QkFBeUIsRUFBRTtZQUM1RSxXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzVCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMzQixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzFCLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDeEIsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzFCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMxQixhQUFhLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ3JCLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCw4QkFBQztBQUFELENBdkNBLEFBdUNDLENBdkM0Qyx1Q0FBaUIsR0F1QzdEO0FBdkNZLDBEQUF1QjtBQXlDcEMsMkNBQW1CLENBQUMsWUFBWSxDQUFDLHlCQUF5QixFQUFDLHVCQUF1QixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFCYXRjaEhpc3RvcnlEYXRhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYU9iamVjdEJhc2UsIEthbHR1cmFPYmplY3RCYXNlQXJncyB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFCYXRjaEhpc3RvcnlEYXRhQXJncyAgZXh0ZW5kcyBLYWx0dXJhT2JqZWN0QmFzZUFyZ3Mge1xuICAgIHNjaGVkdWxlcklkPyA6IG51bWJlcjtcblx0d29ya2VySWQ/IDogbnVtYmVyO1xuXHRiYXRjaEluZGV4PyA6IG51bWJlcjtcblx0dGltZVN0YW1wPyA6IG51bWJlcjtcblx0bWVzc2FnZT8gOiBzdHJpbmc7XG5cdGVyclR5cGU/IDogbnVtYmVyO1xuXHRlcnJOdW1iZXI/IDogbnVtYmVyO1xuXHRob3N0TmFtZT8gOiBzdHJpbmc7XG5cdHNlc3Npb25JZD8gOiBzdHJpbmc7XG5cdHNjaGVkdWxlck5hbWU/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhQmF0Y2hIaXN0b3J5RGF0YSBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlIHtcblxuICAgIHNjaGVkdWxlcklkIDogbnVtYmVyO1xuXHR3b3JrZXJJZCA6IG51bWJlcjtcblx0YmF0Y2hJbmRleCA6IG51bWJlcjtcblx0dGltZVN0YW1wIDogbnVtYmVyO1xuXHRtZXNzYWdlIDogc3RyaW5nO1xuXHRlcnJUeXBlIDogbnVtYmVyO1xuXHRlcnJOdW1iZXIgOiBudW1iZXI7XG5cdGhvc3ROYW1lIDogc3RyaW5nO1xuXHRzZXNzaW9uSWQgOiBzdHJpbmc7XG5cdHNjaGVkdWxlck5hbWUgOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFCYXRjaEhpc3RvcnlEYXRhQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFCYXRjaEhpc3RvcnlEYXRhJyB9LFxuXHRcdFx0XHRzY2hlZHVsZXJJZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHR3b3JrZXJJZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRiYXRjaEluZGV4IDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdHRpbWVTdGFtcCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRtZXNzYWdlIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGVyclR5cGUgOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0ZXJyTnVtYmVyIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGhvc3ROYW1lIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHNlc3Npb25JZCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzY2hlZHVsZXJOYW1lIDogeyB0eXBlIDogJ3MnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhQmF0Y2hIaXN0b3J5RGF0YScsS2FsdHVyYUJhdGNoSGlzdG9yeURhdGEpO1xuIl19
