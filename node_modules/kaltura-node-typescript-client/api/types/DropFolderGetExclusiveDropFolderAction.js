"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DropFolderGetExclusiveDropFolderAction = void 0;
var tslib_1 = require("tslib");
var KalturaDropFolder_1 = require("./KalturaDropFolder");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'dropFolder' action 'getExclusiveDropFolder'.
 *
 * Usage: getExclusive KalturaDropFolder object
 *
 * Server response type:         KalturaDropFolder
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var DropFolderGetExclusiveDropFolderAction = /** @class */ (function (_super) {
    tslib_1.__extends(DropFolderGetExclusiveDropFolderAction, _super);
    function DropFolderGetExclusiveDropFolderAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaDropFolder', responseConstructor: KalturaDropFolder_1.KalturaDropFolder }) || this;
    }
    DropFolderGetExclusiveDropFolderAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'dropfolder_dropfolder' },
            action: { type: 'c', default: 'getExclusiveDropFolder' },
            tag: { type: 's' },
            maxTime: { type: 'n' }
        });
        return result;
    };
    return DropFolderGetExclusiveDropFolderAction;
}(kaltura_request_1.KalturaRequest));
exports.DropFolderGetExclusiveDropFolderAction = DropFolderGetExclusiveDropFolderAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9Ecm9wRm9sZGVyR2V0RXhjbHVzaXZlRHJvcEZvbGRlckFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEseURBQXdEO0FBRXhELHNEQUF3RTtBQU94RTs7Ozs7Ozs7O0dBU0c7QUFDSDtJQUE0RCxrRUFBaUM7SUFLekYsZ0RBQVksSUFBaUQ7ZUFFekQsa0JBQU0sSUFBSSxFQUFFLEVBQUMsWUFBWSxFQUFHLEdBQUcsRUFBRSxlQUFlLEVBQUcsbUJBQW1CLEVBQUUsbUJBQW1CLEVBQUcscUNBQWlCLEVBQUcsQ0FBQztJQUN2SCxDQUFDO0lBRVMsNkRBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsdUJBQXVCLEVBQUU7WUFDdkUsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsd0JBQXdCLEVBQUU7WUFDM0QsR0FBRyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNwQixPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ2YsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDZDQUFDO0FBQUQsQ0F4QkEsQUF3QkMsQ0F4QjJELGdDQUFjLEdBd0J6RTtBQXhCWSx3RkFBc0MiLCJmaWxlIjoiYXBpL3R5cGVzL0Ryb3BGb2xkZXJHZXRFeGNsdXNpdmVEcm9wRm9sZGVyQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFEcm9wRm9sZGVyIH0gZnJvbSAnLi9LYWx0dXJhRHJvcEZvbGRlcic7XG5cbmltcG9ydCB7IEthbHR1cmFSZXF1ZXN0LCBLYWx0dXJhUmVxdWVzdEFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIERyb3BGb2xkZXJHZXRFeGNsdXNpdmVEcm9wRm9sZGVyQWN0aW9uQXJncyAgZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdEFyZ3Mge1xuICAgIHRhZyA6IHN0cmluZztcblx0bWF4VGltZSA6IG51bWJlcjtcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ2Ryb3BGb2xkZXInIGFjdGlvbiAnZ2V0RXhjbHVzaXZlRHJvcEZvbGRlcicuXG4gKlxuICogVXNhZ2U6IGdldEV4Y2x1c2l2ZSBLYWx0dXJhRHJvcEZvbGRlciBvYmplY3RcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhRHJvcEZvbGRlclxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgRHJvcEZvbGRlckdldEV4Y2x1c2l2ZURyb3BGb2xkZXJBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdDxLYWx0dXJhRHJvcEZvbGRlcj4ge1xuXG4gICAgdGFnIDogc3RyaW5nO1xuXHRtYXhUaW1lIDogbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YSA6IERyb3BGb2xkZXJHZXRFeGNsdXNpdmVEcm9wRm9sZGVyQWN0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEsIHtyZXNwb25zZVR5cGUgOiAnbycsIHJlc3BvbnNlU3ViVHlwZSA6ICdLYWx0dXJhRHJvcEZvbGRlcicsIHJlc3BvbnNlQ29uc3RydWN0b3IgOiBLYWx0dXJhRHJvcEZvbGRlciAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnZHJvcGZvbGRlcl9kcm9wZm9sZGVyJyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnZ2V0RXhjbHVzaXZlRHJvcEZvbGRlcicgfSxcblx0XHRcdFx0dGFnIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdG1heFRpbWUgOiB7IHR5cGUgOiAnbicgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuIl19
