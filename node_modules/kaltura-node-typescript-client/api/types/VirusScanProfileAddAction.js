"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VirusScanProfileAddAction = void 0;
var tslib_1 = require("tslib");
var KalturaVirusScanProfile_1 = require("./KalturaVirusScanProfile");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'virusScanProfile' action 'add'.
 *
 * Usage: Allows you to add an virus scan profile object and virus scan profile content associated with Kaltura object
 *
 * Server response type:         KalturaVirusScanProfile
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var VirusScanProfileAddAction = /** @class */ (function (_super) {
    tslib_1.__extends(VirusScanProfileAddAction, _super);
    function VirusScanProfileAddAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaVirusScanProfile', responseConstructor: KalturaVirusScanProfile_1.KalturaVirusScanProfile }) || this;
    }
    VirusScanProfileAddAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'virusscan_virusscanprofile' },
            action: { type: 'c', default: 'add' },
            virusScanProfile: { type: 'o', subTypeConstructor: KalturaVirusScanProfile_1.KalturaVirusScanProfile, subType: 'KalturaVirusScanProfile' }
        });
        return result;
    };
    return VirusScanProfileAddAction;
}(kaltura_request_1.KalturaRequest));
exports.VirusScanProfileAddAction = VirusScanProfileAddAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9WaXJ1c1NjYW5Qcm9maWxlQWRkQWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxxRUFBb0U7QUFFcEUsc0RBQXdFO0FBTXhFOzs7Ozs7Ozs7R0FTRztBQUNIO0lBQStDLHFEQUF1QztJQUlsRixtQ0FBWSxJQUFvQztlQUU1QyxrQkFBTSxJQUFJLEVBQUUsRUFBQyxZQUFZLEVBQUcsR0FBRyxFQUFFLGVBQWUsRUFBRyx5QkFBeUIsRUFBRSxtQkFBbUIsRUFBRyxpREFBdUIsRUFBRyxDQUFDO0lBQ25JLENBQUM7SUFFUyxnREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyw0QkFBNEIsRUFBRTtZQUM1RSxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxLQUFLLEVBQUU7WUFDeEMsZ0JBQWdCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLGlEQUF1QixFQUFFLE9BQU8sRUFBRyx5QkFBeUIsRUFBRTtTQUMzRyxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsZ0NBQUM7QUFBRCxDQXRCQSxBQXNCQyxDQXRCOEMsZ0NBQWMsR0FzQjVEO0FBdEJZLDhEQUF5QiIsImZpbGUiOiJhcGkvdHlwZXMvVmlydXNTY2FuUHJvZmlsZUFkZEFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVmlydXNTY2FuUHJvZmlsZSB9IGZyb20gJy4vS2FsdHVyYVZpcnVzU2NhblByb2ZpbGUnO1xuXG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBWaXJ1c1NjYW5Qcm9maWxlQWRkQWN0aW9uQXJncyAgZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdEFyZ3Mge1xuICAgIHZpcnVzU2NhblByb2ZpbGUgOiBLYWx0dXJhVmlydXNTY2FuUHJvZmlsZTtcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ3ZpcnVzU2NhblByb2ZpbGUnIGFjdGlvbiAnYWRkJy5cbiAqXG4gKiBVc2FnZTogQWxsb3dzIHlvdSB0byBhZGQgYW4gdmlydXMgc2NhbiBwcm9maWxlIG9iamVjdCBhbmQgdmlydXMgc2NhbiBwcm9maWxlIGNvbnRlbnQgYXNzb2NpYXRlZCB3aXRoIEthbHR1cmEgb2JqZWN0XG4gKlxuICogU2VydmVyIHJlc3BvbnNlIHR5cGU6ICAgICAgICAgS2FsdHVyYVZpcnVzU2NhblByb2ZpbGVcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIFZpcnVzU2NhblByb2ZpbGVBZGRBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdDxLYWx0dXJhVmlydXNTY2FuUHJvZmlsZT4ge1xuXG4gICAgdmlydXNTY2FuUHJvZmlsZSA6IEthbHR1cmFWaXJ1c1NjYW5Qcm9maWxlO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YSA6IFZpcnVzU2NhblByb2ZpbGVBZGRBY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdvJywgcmVzcG9uc2VTdWJUeXBlIDogJ0thbHR1cmFWaXJ1c1NjYW5Qcm9maWxlJywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IEthbHR1cmFWaXJ1c1NjYW5Qcm9maWxlICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICd2aXJ1c3NjYW5fdmlydXNzY2FucHJvZmlsZScgfSxcblx0XHRcdFx0YWN0aW9uIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ2FkZCcgfSxcblx0XHRcdFx0dmlydXNTY2FuUHJvZmlsZSA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVZpcnVzU2NhblByb2ZpbGUsIHN1YlR5cGUgOiAnS2FsdHVyYVZpcnVzU2NhblByb2ZpbGUnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
