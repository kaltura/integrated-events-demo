"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConversionProfileGetDefaultAction = void 0;
var tslib_1 = require("tslib");
var KalturaConversionProfile_1 = require("./KalturaConversionProfile");
var KalturaConversionProfileType_1 = require("./KalturaConversionProfileType");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'conversionProfile' action 'getDefault'.
 *
 * Usage: Get the partner's default conversion profile
 *
 * Server response type:         KalturaConversionProfile
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var ConversionProfileGetDefaultAction = /** @class */ (function (_super) {
    tslib_1.__extends(ConversionProfileGetDefaultAction, _super);
    function ConversionProfileGetDefaultAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaConversionProfile', responseConstructor: KalturaConversionProfile_1.KalturaConversionProfile }) || this;
    }
    ConversionProfileGetDefaultAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'conversionprofile' },
            action: { type: 'c', default: 'getDefault' },
            type: { type: 'es', subTypeConstructor: KalturaConversionProfileType_1.KalturaConversionProfileType, subType: 'KalturaConversionProfileType' }
        });
        return result;
    };
    return ConversionProfileGetDefaultAction;
}(kaltura_request_1.KalturaRequest));
exports.ConversionProfileGetDefaultAction = ConversionProfileGetDefaultAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9Db252ZXJzaW9uUHJvZmlsZUdldERlZmF1bHRBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLHVFQUFzRTtBQUV0RSwrRUFBOEU7QUFDOUUsc0RBQXdFO0FBTXhFOzs7Ozs7Ozs7R0FTRztBQUNIO0lBQXVELDZEQUF3QztJQUkzRiwyQ0FBWSxJQUE2QztlQUVyRCxrQkFBTSxJQUFJLEVBQUUsRUFBQyxZQUFZLEVBQUcsR0FBRyxFQUFFLGVBQWUsRUFBRywwQkFBMEIsRUFBRSxtQkFBbUIsRUFBRyxtREFBd0IsRUFBRyxDQUFDO0lBQ3JJLENBQUM7SUFFUyx3REFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxtQkFBbUIsRUFBRTtZQUNuRSxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxZQUFZLEVBQUU7WUFDL0MsSUFBSSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywyREFBNEIsRUFBRSxPQUFPLEVBQUcsOEJBQThCLEVBQUU7U0FDMUcsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHdDQUFDO0FBQUQsQ0F0QkEsQUFzQkMsQ0F0QnNELGdDQUFjLEdBc0JwRTtBQXRCWSw4RUFBaUMiLCJmaWxlIjoiYXBpL3R5cGVzL0NvbnZlcnNpb25Qcm9maWxlR2V0RGVmYXVsdEFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhQ29udmVyc2lvblByb2ZpbGUgfSBmcm9tICcuL0thbHR1cmFDb252ZXJzaW9uUHJvZmlsZSc7XG5cbmltcG9ydCB7IEthbHR1cmFDb252ZXJzaW9uUHJvZmlsZVR5cGUgfSBmcm9tICcuL0thbHR1cmFDb252ZXJzaW9uUHJvZmlsZVR5cGUnO1xuaW1wb3J0IHsgS2FsdHVyYVJlcXVlc3QsIEthbHR1cmFSZXF1ZXN0QXJncyB9IGZyb20gJy4uL2thbHR1cmEtcmVxdWVzdCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ29udmVyc2lvblByb2ZpbGVHZXREZWZhdWx0QWN0aW9uQXJncyAgZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdEFyZ3Mge1xuICAgIHR5cGU/IDogS2FsdHVyYUNvbnZlcnNpb25Qcm9maWxlVHlwZTtcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ2NvbnZlcnNpb25Qcm9maWxlJyBhY3Rpb24gJ2dldERlZmF1bHQnLlxuICpcbiAqIFVzYWdlOiBHZXQgdGhlIHBhcnRuZXIncyBkZWZhdWx0IGNvbnZlcnNpb24gcHJvZmlsZVxuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIEthbHR1cmFDb252ZXJzaW9uUHJvZmlsZVxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgQ29udmVyc2lvblByb2ZpbGVHZXREZWZhdWx0QWN0aW9uIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3Q8S2FsdHVyYUNvbnZlcnNpb25Qcm9maWxlPiB7XG5cbiAgICB0eXBlIDogS2FsdHVyYUNvbnZlcnNpb25Qcm9maWxlVHlwZTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogQ29udmVyc2lvblByb2ZpbGVHZXREZWZhdWx0QWN0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEsIHtyZXNwb25zZVR5cGUgOiAnbycsIHJlc3BvbnNlU3ViVHlwZSA6ICdLYWx0dXJhQ29udmVyc2lvblByb2ZpbGUnLCByZXNwb25zZUNvbnN0cnVjdG9yIDogS2FsdHVyYUNvbnZlcnNpb25Qcm9maWxlICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdjb252ZXJzaW9ucHJvZmlsZScgfSxcblx0XHRcdFx0YWN0aW9uIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ2dldERlZmF1bHQnIH0sXG5cdFx0XHRcdHR5cGUgOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQ29udmVyc2lvblByb2ZpbGVUeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFDb252ZXJzaW9uUHJvZmlsZVR5cGUnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
