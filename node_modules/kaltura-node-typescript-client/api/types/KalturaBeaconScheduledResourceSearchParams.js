"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaBeaconScheduledResourceSearchParams = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaBeaconScheduledResourceOperator_1 = require("./KalturaBeaconScheduledResourceOperator");
var KalturaBeaconSearchScheduledResourceOrderBy_1 = require("./KalturaBeaconSearchScheduledResourceOrderBy");
var KalturaBeaconSearchParams_1 = require("./KalturaBeaconSearchParams");
var KalturaBeaconScheduledResourceSearchParams = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaBeaconScheduledResourceSearchParams, _super);
    function KalturaBeaconScheduledResourceSearchParams(data) {
        return _super.call(this, data) || this;
    }
    KalturaBeaconScheduledResourceSearchParams.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaBeaconScheduledResourceSearchParams' },
            searchOperator: { type: 'o', subTypeConstructor: KalturaBeaconScheduledResourceOperator_1.KalturaBeaconScheduledResourceOperator, subType: 'KalturaBeaconScheduledResourceOperator' },
            orderBy: { type: 'o', subTypeConstructor: KalturaBeaconSearchScheduledResourceOrderBy_1.KalturaBeaconSearchScheduledResourceOrderBy, subType: 'KalturaBeaconSearchScheduledResourceOrderBy' }
        });
        return result;
    };
    return KalturaBeaconScheduledResourceSearchParams;
}(KalturaBeaconSearchParams_1.KalturaBeaconSearchParams));
exports.KalturaBeaconScheduledResourceSearchParams = KalturaBeaconScheduledResourceSearchParams;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaBeaconScheduledResourceSearchParams', KalturaBeaconScheduledResourceSearchParams);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQmVhY29uU2NoZWR1bGVkUmVzb3VyY2VTZWFyY2hQYXJhbXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxtR0FBa0c7QUFDbEcsNkdBQTRHO0FBQzVHLHlFQUF1RztBQVF2RztJQUFnRSxzRUFBeUI7SUFLckYsb0RBQVksSUFBc0Q7ZUFFOUQsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLGlFQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDRDQUE0QyxFQUFFO1lBQy9GLGNBQWMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsK0VBQXNDLEVBQUUsT0FBTyxFQUFHLHdDQUF3QyxFQUFFO1lBQ2hKLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcseUZBQTJDLEVBQUUsT0FBTyxFQUFHLDZDQUE2QyxFQUFFO1NBQzFJLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxpREFBQztBQUFELENBdkJBLEFBdUJDLENBdkIrRCxxREFBeUIsR0F1QnhGO0FBdkJZLGdHQUEwQztBQXlCdkQsMkNBQW1CLENBQUMsWUFBWSxDQUFDLDRDQUE0QyxFQUFDLDBDQUEwQyxDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFCZWFjb25TY2hlZHVsZWRSZXNvdXJjZVNlYXJjaFBhcmFtcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFCZWFjb25TY2hlZHVsZWRSZXNvdXJjZU9wZXJhdG9yIH0gZnJvbSAnLi9LYWx0dXJhQmVhY29uU2NoZWR1bGVkUmVzb3VyY2VPcGVyYXRvcic7XG5pbXBvcnQgeyBLYWx0dXJhQmVhY29uU2VhcmNoU2NoZWR1bGVkUmVzb3VyY2VPcmRlckJ5IH0gZnJvbSAnLi9LYWx0dXJhQmVhY29uU2VhcmNoU2NoZWR1bGVkUmVzb3VyY2VPcmRlckJ5JztcbmltcG9ydCB7IEthbHR1cmFCZWFjb25TZWFyY2hQYXJhbXMsIEthbHR1cmFCZWFjb25TZWFyY2hQYXJhbXNBcmdzIH0gZnJvbSAnLi9LYWx0dXJhQmVhY29uU2VhcmNoUGFyYW1zJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhQmVhY29uU2NoZWR1bGVkUmVzb3VyY2VTZWFyY2hQYXJhbXNBcmdzICBleHRlbmRzIEthbHR1cmFCZWFjb25TZWFyY2hQYXJhbXNBcmdzIHtcbiAgICBzZWFyY2hPcGVyYXRvcj8gOiBLYWx0dXJhQmVhY29uU2NoZWR1bGVkUmVzb3VyY2VPcGVyYXRvcjtcblx0b3JkZXJCeT8gOiBLYWx0dXJhQmVhY29uU2VhcmNoU2NoZWR1bGVkUmVzb3VyY2VPcmRlckJ5O1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhQmVhY29uU2NoZWR1bGVkUmVzb3VyY2VTZWFyY2hQYXJhbXMgZXh0ZW5kcyBLYWx0dXJhQmVhY29uU2VhcmNoUGFyYW1zIHtcblxuICAgIHNlYXJjaE9wZXJhdG9yIDogS2FsdHVyYUJlYWNvblNjaGVkdWxlZFJlc291cmNlT3BlcmF0b3I7XG5cdG9yZGVyQnkgOiBLYWx0dXJhQmVhY29uU2VhcmNoU2NoZWR1bGVkUmVzb3VyY2VPcmRlckJ5O1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhQmVhY29uU2NoZWR1bGVkUmVzb3VyY2VTZWFyY2hQYXJhbXNBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYUJlYWNvblNjaGVkdWxlZFJlc291cmNlU2VhcmNoUGFyYW1zJyB9LFxuXHRcdFx0XHRzZWFyY2hPcGVyYXRvciA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUJlYWNvblNjaGVkdWxlZFJlc291cmNlT3BlcmF0b3IsIHN1YlR5cGUgOiAnS2FsdHVyYUJlYWNvblNjaGVkdWxlZFJlc291cmNlT3BlcmF0b3InIH0sXG5cdFx0XHRcdG9yZGVyQnkgOiB7IHR5cGUgOiAnbycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFCZWFjb25TZWFyY2hTY2hlZHVsZWRSZXNvdXJjZU9yZGVyQnksIHN1YlR5cGUgOiAnS2FsdHVyYUJlYWNvblNlYXJjaFNjaGVkdWxlZFJlc291cmNlT3JkZXJCeScgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFCZWFjb25TY2hlZHVsZWRSZXNvdXJjZVNlYXJjaFBhcmFtcycsS2FsdHVyYUJlYWNvblNjaGVkdWxlZFJlc291cmNlU2VhcmNoUGFyYW1zKTtcbiJdfQ==
