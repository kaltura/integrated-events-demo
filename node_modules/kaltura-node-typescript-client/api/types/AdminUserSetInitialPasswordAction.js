"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AdminUserSetInitialPasswordAction = void 0;
var tslib_1 = require("tslib");
var KalturaAuthentication_1 = require("./KalturaAuthentication");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'adminUser' action 'setInitialPassword'.
 *
 * Usage: Set initial users password
 *
 * Server response type:         KalturaAuthentication
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var AdminUserSetInitialPasswordAction = /** @class */ (function (_super) {
    tslib_1.__extends(AdminUserSetInitialPasswordAction, _super);
    function AdminUserSetInitialPasswordAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaAuthentication', responseConstructor: KalturaAuthentication_1.KalturaAuthentication }) || this;
    }
    AdminUserSetInitialPasswordAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'adminuser' },
            action: { type: 'c', default: 'setInitialPassword' },
            hashKey: { type: 's' },
            newPassword: { type: 's' }
        });
        return result;
    };
    return AdminUserSetInitialPasswordAction;
}(kaltura_request_1.KalturaRequest));
exports.AdminUserSetInitialPasswordAction = AdminUserSetInitialPasswordAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9BZG1pblVzZXJTZXRJbml0aWFsUGFzc3dvcmRBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGlFQUFnRTtBQUVoRSxzREFBd0U7QUFPeEU7Ozs7Ozs7OztHQVNHO0FBQ0g7SUFBdUQsNkRBQXFDO0lBS3hGLDJDQUFZLElBQTRDO2VBRXBELGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLHVCQUF1QixFQUFFLG1CQUFtQixFQUFHLDZDQUFxQixFQUFHLENBQUM7SUFDL0gsQ0FBQztJQUVTLHdEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLFdBQVcsRUFBRTtZQUMzRCxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxvQkFBb0IsRUFBRTtZQUN2RCxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hCLFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDbkIsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHdDQUFDO0FBQUQsQ0F4QkEsQUF3QkMsQ0F4QnNELGdDQUFjLEdBd0JwRTtBQXhCWSw4RUFBaUMiLCJmaWxlIjoiYXBpL3R5cGVzL0FkbWluVXNlclNldEluaXRpYWxQYXNzd29yZEFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhQXV0aGVudGljYXRpb24gfSBmcm9tICcuL0thbHR1cmFBdXRoZW50aWNhdGlvbic7XG5cbmltcG9ydCB7IEthbHR1cmFSZXF1ZXN0LCBLYWx0dXJhUmVxdWVzdEFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEFkbWluVXNlclNldEluaXRpYWxQYXNzd29yZEFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBoYXNoS2V5IDogc3RyaW5nO1xuXHRuZXdQYXNzd29yZCA6IHN0cmluZztcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ2FkbWluVXNlcicgYWN0aW9uICdzZXRJbml0aWFsUGFzc3dvcmQnLlxuICpcbiAqIFVzYWdlOiBTZXQgaW5pdGlhbCB1c2VycyBwYXNzd29yZFxuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIEthbHR1cmFBdXRoZW50aWNhdGlvblxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgQWRtaW5Vc2VyU2V0SW5pdGlhbFBhc3N3b3JkQWN0aW9uIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3Q8S2FsdHVyYUF1dGhlbnRpY2F0aW9uPiB7XG5cbiAgICBoYXNoS2V5IDogc3RyaW5nO1xuXHRuZXdQYXNzd29yZCA6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBBZG1pblVzZXJTZXRJbml0aWFsUGFzc3dvcmRBY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdvJywgcmVzcG9uc2VTdWJUeXBlIDogJ0thbHR1cmFBdXRoZW50aWNhdGlvbicsIHJlc3BvbnNlQ29uc3RydWN0b3IgOiBLYWx0dXJhQXV0aGVudGljYXRpb24gIH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ2FkbWludXNlcicgfSxcblx0XHRcdFx0YWN0aW9uIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ3NldEluaXRpYWxQYXNzd29yZCcgfSxcblx0XHRcdFx0aGFzaEtleSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRuZXdQYXNzd29yZCA6IHsgdHlwZSA6ICdzJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG4iXX0=
