"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MetadataProfileUpdateDefinitionFromFileAction = void 0;
var tslib_1 = require("tslib");
var KalturaMetadataProfile_1 = require("./KalturaMetadataProfile");
var kaltura_upload_request_1 = require("../kaltura-upload-request");
/**
 * Build request payload for service 'metadataProfile' action 'updateDefinitionFromFile'.
 *
 * Usage: Update an existing metadata object definition file
 *
 * Server response type:         KalturaMetadataProfile
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaUploadRequest
 */
var MetadataProfileUpdateDefinitionFromFileAction = /** @class */ (function (_super) {
    tslib_1.__extends(MetadataProfileUpdateDefinitionFromFileAction, _super);
    function MetadataProfileUpdateDefinitionFromFileAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaMetadataProfile', responseConstructor: KalturaMetadataProfile_1.KalturaMetadataProfile }) || this;
    }
    MetadataProfileUpdateDefinitionFromFileAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'metadata_metadataprofile' },
            action: { type: 'c', default: 'updateDefinitionFromFile' },
            id: { type: 'n' },
            xsdFile: { type: 'f' }
        });
        return result;
    };
    return MetadataProfileUpdateDefinitionFromFileAction;
}(kaltura_upload_request_1.KalturaUploadRequest));
exports.MetadataProfileUpdateDefinitionFromFileAction = MetadataProfileUpdateDefinitionFromFileAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9NZXRhZGF0YVByb2ZpbGVVcGRhdGVEZWZpbml0aW9uRnJvbUZpbGVBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLG1FQUFrRTtBQUVsRSxvRUFBMkY7QUFPM0Y7Ozs7Ozs7OztHQVNHO0FBQ0g7SUFBbUUseUVBQTRDO0lBSzNHLHVEQUFZLElBQXdEO2VBRWhFLGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLHdCQUF3QixFQUFFLG1CQUFtQixFQUFHLCtDQUFzQixFQUFHLENBQUM7SUFDakksQ0FBQztJQUVTLG9FQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDBCQUEwQixFQUFFO1lBQzFFLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDBCQUEwQixFQUFFO1lBQzdELEVBQUUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDbkIsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtTQUNmLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxvREFBQztBQUFELENBeEJBLEFBd0JDLENBeEJrRSw2Q0FBb0IsR0F3QnRGO0FBeEJZLHNHQUE2QyIsImZpbGUiOiJhcGkvdHlwZXMvTWV0YWRhdGFQcm9maWxlVXBkYXRlRGVmaW5pdGlvbkZyb21GaWxlQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFNZXRhZGF0YVByb2ZpbGUgfSBmcm9tICcuL0thbHR1cmFNZXRhZGF0YVByb2ZpbGUnO1xuXG5pbXBvcnQgeyBLYWx0dXJhVXBsb2FkUmVxdWVzdCwgS2FsdHVyYVVwbG9hZFJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS11cGxvYWQtcmVxdWVzdCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTWV0YWRhdGFQcm9maWxlVXBkYXRlRGVmaW5pdGlvbkZyb21GaWxlQWN0aW9uQXJncyAgZXh0ZW5kcyBLYWx0dXJhVXBsb2FkUmVxdWVzdEFyZ3Mge1xuICAgIGlkIDogbnVtYmVyO1xuXHR4c2RGaWxlIDogRmlsZTtcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ21ldGFkYXRhUHJvZmlsZScgYWN0aW9uICd1cGRhdGVEZWZpbml0aW9uRnJvbUZpbGUnLlxuICpcbiAqIFVzYWdlOiBVcGRhdGUgYW4gZXhpc3RpbmcgbWV0YWRhdGEgb2JqZWN0IGRlZmluaXRpb24gZmlsZVxuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIEthbHR1cmFNZXRhZGF0YVByb2ZpbGVcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVVwbG9hZFJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIE1ldGFkYXRhUHJvZmlsZVVwZGF0ZURlZmluaXRpb25Gcm9tRmlsZUFjdGlvbiBleHRlbmRzIEthbHR1cmFVcGxvYWRSZXF1ZXN0PEthbHR1cmFNZXRhZGF0YVByb2ZpbGU+IHtcblxuICAgIGlkIDogbnVtYmVyO1xuXHR4c2RGaWxlIDogRmlsZTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBNZXRhZGF0YVByb2ZpbGVVcGRhdGVEZWZpbml0aW9uRnJvbUZpbGVBY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdvJywgcmVzcG9uc2VTdWJUeXBlIDogJ0thbHR1cmFNZXRhZGF0YVByb2ZpbGUnLCByZXNwb25zZUNvbnN0cnVjdG9yIDogS2FsdHVyYU1ldGFkYXRhUHJvZmlsZSAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnbWV0YWRhdGFfbWV0YWRhdGFwcm9maWxlJyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAndXBkYXRlRGVmaW5pdGlvbkZyb21GaWxlJyB9LFxuXHRcdFx0XHRpZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHR4c2RGaWxlIDogeyB0eXBlIDogJ2YnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
