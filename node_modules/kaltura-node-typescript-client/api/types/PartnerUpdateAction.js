"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PartnerUpdateAction = void 0;
var tslib_1 = require("tslib");
var KalturaPartner_1 = require("./KalturaPartner");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'partner' action 'update'.
 *
 * Usage: Update details and settings of an existing partner
 *
 * Server response type:         KalturaPartner
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var PartnerUpdateAction = /** @class */ (function (_super) {
    tslib_1.__extends(PartnerUpdateAction, _super);
    function PartnerUpdateAction(data) {
        var _this = _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaPartner', responseConstructor: KalturaPartner_1.KalturaPartner }) || this;
        if (typeof _this.allowEmpty === 'undefined')
            _this.allowEmpty = false;
        return _this;
    }
    PartnerUpdateAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'partner' },
            action: { type: 'c', default: 'update' },
            partner: { type: 'o', subTypeConstructor: KalturaPartner_1.KalturaPartner, subType: 'KalturaPartner' },
            allowEmpty: { type: 'b' }
        });
        return result;
    };
    return PartnerUpdateAction;
}(kaltura_request_1.KalturaRequest));
exports.PartnerUpdateAction = PartnerUpdateAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9QYXJ0bmVyVXBkYXRlQWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxtREFBa0Q7QUFFbEQsc0RBQXdFO0FBT3hFOzs7Ozs7Ozs7R0FTRztBQUNIO0lBQXlDLCtDQUE4QjtJQUtuRSw2QkFBWSxJQUE4QjtRQUExQyxZQUVJLGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLGdCQUFnQixFQUFFLG1CQUFtQixFQUFHLCtCQUFjLEVBQUcsQ0FBQyxTQUVoSDtRQURHLElBQUksT0FBTyxLQUFJLENBQUMsVUFBVSxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsVUFBVSxHQUFHLEtBQUssQ0FBQzs7SUFDeEUsQ0FBQztJQUVTLDBDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLFNBQVMsRUFBRTtZQUN6RCxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxRQUFRLEVBQUU7WUFDM0MsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRywrQkFBYyxFQUFFLE9BQU8sRUFBRyxnQkFBZ0IsRUFBRTtZQUN6RixVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ2xCLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCwwQkFBQztBQUFELENBekJBLEFBeUJDLENBekJ3QyxnQ0FBYyxHQXlCdEQ7QUF6Qlksa0RBQW1CIiwiZmlsZSI6ImFwaS90eXBlcy9QYXJ0bmVyVXBkYXRlQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFQYXJ0bmVyIH0gZnJvbSAnLi9LYWx0dXJhUGFydG5lcic7XG5cbmltcG9ydCB7IEthbHR1cmFSZXF1ZXN0LCBLYWx0dXJhUmVxdWVzdEFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFBhcnRuZXJVcGRhdGVBY3Rpb25BcmdzICBleHRlbmRzIEthbHR1cmFSZXF1ZXN0QXJncyB7XG4gICAgcGFydG5lciA6IEthbHR1cmFQYXJ0bmVyO1xuXHRhbGxvd0VtcHR5PyA6IGJvb2xlYW47XG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICdwYXJ0bmVyJyBhY3Rpb24gJ3VwZGF0ZScuXG4gKlxuICogVXNhZ2U6IFVwZGF0ZSBkZXRhaWxzIGFuZCBzZXR0aW5ncyBvZiBhbiBleGlzdGluZyBwYXJ0bmVyXG4gKlxuICogU2VydmVyIHJlc3BvbnNlIHR5cGU6ICAgICAgICAgS2FsdHVyYVBhcnRuZXJcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIFBhcnRuZXJVcGRhdGVBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdDxLYWx0dXJhUGFydG5lcj4ge1xuXG4gICAgcGFydG5lciA6IEthbHR1cmFQYXJ0bmVyO1xuXHRhbGxvd0VtcHR5IDogYm9vbGVhbjtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBQYXJ0bmVyVXBkYXRlQWN0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEsIHtyZXNwb25zZVR5cGUgOiAnbycsIHJlc3BvbnNlU3ViVHlwZSA6ICdLYWx0dXJhUGFydG5lcicsIHJlc3BvbnNlQ29uc3RydWN0b3IgOiBLYWx0dXJhUGFydG5lciAgfSk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5hbGxvd0VtcHR5ID09PSAndW5kZWZpbmVkJykgdGhpcy5hbGxvd0VtcHR5ID0gZmFsc2U7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAncGFydG5lcicgfSxcblx0XHRcdFx0YWN0aW9uIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ3VwZGF0ZScgfSxcblx0XHRcdFx0cGFydG5lciA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVBhcnRuZXIsIHN1YlR5cGUgOiAnS2FsdHVyYVBhcnRuZXInIH0sXG5cdFx0XHRcdGFsbG93RW1wdHkgOiB7IHR5cGUgOiAnYicgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuIl19
