"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaMediaEntryBaseFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaMediaType_1 = require("./KalturaMediaType");
var KalturaSourceType_1 = require("./KalturaSourceType");
var KalturaPlayableEntryFilter_1 = require("./KalturaPlayableEntryFilter");
var KalturaMediaEntryBaseFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaMediaEntryBaseFilter, _super);
    function KalturaMediaEntryBaseFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaMediaEntryBaseFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaMediaEntryBaseFilter' },
            mediaTypeEqual: { type: 'en', subTypeConstructor: KalturaMediaType_1.KalturaMediaType, subType: 'KalturaMediaType' },
            mediaTypeIn: { type: 's' },
            sourceTypeEqual: { type: 'es', subTypeConstructor: KalturaSourceType_1.KalturaSourceType, subType: 'KalturaSourceType' },
            sourceTypeNotEqual: { type: 'es', subTypeConstructor: KalturaSourceType_1.KalturaSourceType, subType: 'KalturaSourceType' },
            sourceTypeIn: { type: 's' },
            sourceTypeNotIn: { type: 's' },
            mediaDateGreaterThanOrEqual: { type: 'd' },
            mediaDateLessThanOrEqual: { type: 'd' },
            flavorParamsIdsMatchOr: { type: 's' },
            flavorParamsIdsMatchAnd: { type: 's' }
        });
        return result;
    };
    return KalturaMediaEntryBaseFilter;
}(KalturaPlayableEntryFilter_1.KalturaPlayableEntryFilter));
exports.KalturaMediaEntryBaseFilter = KalturaMediaEntryBaseFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaMediaEntryBaseFilter', KalturaMediaEntryBaseFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhTWVkaWFFbnRyeUJhc2VGaWx0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCx1REFBc0Q7QUFDdEQseURBQXdEO0FBQ3hELDJFQUEwRztBQWdCMUc7SUFBaUQsdURBQTBCO0lBYXZFLHFDQUFZLElBQXVDO2VBRS9DLGtCQUFNLElBQUksQ0FBQztJQUNmLENBQUM7SUFFUyxrREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyw2QkFBNkIsRUFBRTtZQUNoRixjQUFjLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLG1DQUFnQixFQUFFLE9BQU8sRUFBRyxrQkFBa0IsRUFBRTtZQUNyRyxXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzVCLGVBQWUsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcscUNBQWlCLEVBQUUsT0FBTyxFQUFHLG1CQUFtQixFQUFFO1lBQ3hHLGtCQUFrQixFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyxxQ0FBaUIsRUFBRSxPQUFPLEVBQUcsbUJBQW1CLEVBQUU7WUFDM0csWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM3QixlQUFlLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ2hDLDJCQUEyQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM1Qyx3QkFBd0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekMsc0JBQXNCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3ZDLHVCQUF1QixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtTQUMvQixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsa0NBQUM7QUFBRCxDQXZDQSxBQXVDQyxDQXZDZ0QsdURBQTBCLEdBdUMxRTtBQXZDWSxrRUFBMkI7QUF5Q3hDLDJDQUFtQixDQUFDLFlBQVksQ0FBQyw2QkFBNkIsRUFBQywyQkFBMkIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhTWVkaWFFbnRyeUJhc2VGaWx0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhTWVkaWFUeXBlIH0gZnJvbSAnLi9LYWx0dXJhTWVkaWFUeXBlJztcbmltcG9ydCB7IEthbHR1cmFTb3VyY2VUeXBlIH0gZnJvbSAnLi9LYWx0dXJhU291cmNlVHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhUGxheWFibGVFbnRyeUZpbHRlciwgS2FsdHVyYVBsYXlhYmxlRW50cnlGaWx0ZXJBcmdzIH0gZnJvbSAnLi9LYWx0dXJhUGxheWFibGVFbnRyeUZpbHRlcic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYU1lZGlhRW50cnlCYXNlRmlsdGVyQXJncyAgZXh0ZW5kcyBLYWx0dXJhUGxheWFibGVFbnRyeUZpbHRlckFyZ3Mge1xuICAgIG1lZGlhVHlwZUVxdWFsPyA6IEthbHR1cmFNZWRpYVR5cGU7XG5cdG1lZGlhVHlwZUluPyA6IHN0cmluZztcblx0c291cmNlVHlwZUVxdWFsPyA6IEthbHR1cmFTb3VyY2VUeXBlO1xuXHRzb3VyY2VUeXBlTm90RXF1YWw/IDogS2FsdHVyYVNvdXJjZVR5cGU7XG5cdHNvdXJjZVR5cGVJbj8gOiBzdHJpbmc7XG5cdHNvdXJjZVR5cGVOb3RJbj8gOiBzdHJpbmc7XG5cdG1lZGlhRGF0ZUdyZWF0ZXJUaGFuT3JFcXVhbD8gOiBEYXRlO1xuXHRtZWRpYURhdGVMZXNzVGhhbk9yRXF1YWw/IDogRGF0ZTtcblx0Zmxhdm9yUGFyYW1zSWRzTWF0Y2hPcj8gOiBzdHJpbmc7XG5cdGZsYXZvclBhcmFtc0lkc01hdGNoQW5kPyA6IHN0cmluZztcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYU1lZGlhRW50cnlCYXNlRmlsdGVyIGV4dGVuZHMgS2FsdHVyYVBsYXlhYmxlRW50cnlGaWx0ZXIge1xuXG4gICAgbWVkaWFUeXBlRXF1YWwgOiBLYWx0dXJhTWVkaWFUeXBlO1xuXHRtZWRpYVR5cGVJbiA6IHN0cmluZztcblx0c291cmNlVHlwZUVxdWFsIDogS2FsdHVyYVNvdXJjZVR5cGU7XG5cdHNvdXJjZVR5cGVOb3RFcXVhbCA6IEthbHR1cmFTb3VyY2VUeXBlO1xuXHRzb3VyY2VUeXBlSW4gOiBzdHJpbmc7XG5cdHNvdXJjZVR5cGVOb3RJbiA6IHN0cmluZztcblx0bWVkaWFEYXRlR3JlYXRlclRoYW5PckVxdWFsIDogRGF0ZTtcblx0bWVkaWFEYXRlTGVzc1RoYW5PckVxdWFsIDogRGF0ZTtcblx0Zmxhdm9yUGFyYW1zSWRzTWF0Y2hPciA6IHN0cmluZztcblx0Zmxhdm9yUGFyYW1zSWRzTWF0Y2hBbmQgOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFNZWRpYUVudHJ5QmFzZUZpbHRlckFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhTWVkaWFFbnRyeUJhc2VGaWx0ZXInIH0sXG5cdFx0XHRcdG1lZGlhVHlwZUVxdWFsIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYU1lZGlhVHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhTWVkaWFUeXBlJyB9LFxuXHRcdFx0XHRtZWRpYVR5cGVJbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzb3VyY2VUeXBlRXF1YWwgOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhU291cmNlVHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhU291cmNlVHlwZScgfSxcblx0XHRcdFx0c291cmNlVHlwZU5vdEVxdWFsIDogeyB0eXBlIDogJ2VzJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVNvdXJjZVR5cGUsIHN1YlR5cGUgOiAnS2FsdHVyYVNvdXJjZVR5cGUnIH0sXG5cdFx0XHRcdHNvdXJjZVR5cGVJbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzb3VyY2VUeXBlTm90SW4gOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0bWVkaWFEYXRlR3JlYXRlclRoYW5PckVxdWFsIDogeyB0eXBlIDogJ2QnIH0sXG5cdFx0XHRcdG1lZGlhRGF0ZUxlc3NUaGFuT3JFcXVhbCA6IHsgdHlwZSA6ICdkJyB9LFxuXHRcdFx0XHRmbGF2b3JQYXJhbXNJZHNNYXRjaE9yIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGZsYXZvclBhcmFtc0lkc01hdGNoQW5kIDogeyB0eXBlIDogJ3MnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhTWVkaWFFbnRyeUJhc2VGaWx0ZXInLEthbHR1cmFNZWRpYUVudHJ5QmFzZUZpbHRlcik7XG4iXX0=
