"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReachProfileUpdateStatusAction = void 0;
var tslib_1 = require("tslib");
var KalturaReachProfile_1 = require("./KalturaReachProfile");
var KalturaReachProfileStatus_1 = require("./KalturaReachProfileStatus");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'reachProfile' action 'updateStatus'.
 *
 * Usage: Update reach profile status by id
 *
 * Server response type:         KalturaReachProfile
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var ReachProfileUpdateStatusAction = /** @class */ (function (_super) {
    tslib_1.__extends(ReachProfileUpdateStatusAction, _super);
    function ReachProfileUpdateStatusAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaReachProfile', responseConstructor: KalturaReachProfile_1.KalturaReachProfile }) || this;
    }
    ReachProfileUpdateStatusAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'reach_reachprofile' },
            action: { type: 'c', default: 'updateStatus' },
            id: { type: 'n' },
            status: { type: 'en', subTypeConstructor: KalturaReachProfileStatus_1.KalturaReachProfileStatus, subType: 'KalturaReachProfileStatus' }
        });
        return result;
    };
    return ReachProfileUpdateStatusAction;
}(kaltura_request_1.KalturaRequest));
exports.ReachProfileUpdateStatusAction = ReachProfileUpdateStatusAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9SZWFjaFByb2ZpbGVVcGRhdGVTdGF0dXNBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLDZEQUE0RDtBQUU1RCx5RUFBd0U7QUFDeEUsc0RBQXdFO0FBT3hFOzs7Ozs7Ozs7R0FTRztBQUNIO0lBQW9ELDBEQUFtQztJQUtuRix3Q0FBWSxJQUF5QztlQUVqRCxrQkFBTSxJQUFJLEVBQUUsRUFBQyxZQUFZLEVBQUcsR0FBRyxFQUFFLGVBQWUsRUFBRyxxQkFBcUIsRUFBRSxtQkFBbUIsRUFBRyx5Q0FBbUIsRUFBRyxDQUFDO0lBQzNILENBQUM7SUFFUyxxREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxvQkFBb0IsRUFBRTtZQUNwRSxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxjQUFjLEVBQUU7WUFDakQsRUFBRSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNuQixNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLHFEQUF5QixFQUFFLE9BQU8sRUFBRywyQkFBMkIsRUFBRTtTQUN0RyxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wscUNBQUM7QUFBRCxDQXhCQSxBQXdCQyxDQXhCbUQsZ0NBQWMsR0F3QmpFO0FBeEJZLHdFQUE4QiIsImZpbGUiOiJhcGkvdHlwZXMvUmVhY2hQcm9maWxlVXBkYXRlU3RhdHVzQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFSZWFjaFByb2ZpbGUgfSBmcm9tICcuL0thbHR1cmFSZWFjaFByb2ZpbGUnO1xuXG5pbXBvcnQgeyBLYWx0dXJhUmVhY2hQcm9maWxlU3RhdHVzIH0gZnJvbSAnLi9LYWx0dXJhUmVhY2hQcm9maWxlU3RhdHVzJztcbmltcG9ydCB7IEthbHR1cmFSZXF1ZXN0LCBLYWx0dXJhUmVxdWVzdEFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlYWNoUHJvZmlsZVVwZGF0ZVN0YXR1c0FjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBpZCA6IG51bWJlcjtcblx0c3RhdHVzIDogS2FsdHVyYVJlYWNoUHJvZmlsZVN0YXR1cztcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ3JlYWNoUHJvZmlsZScgYWN0aW9uICd1cGRhdGVTdGF0dXMnLlxuICpcbiAqIFVzYWdlOiBVcGRhdGUgcmVhY2ggcHJvZmlsZSBzdGF0dXMgYnkgaWRcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhUmVhY2hQcm9maWxlXG4gKiBTZXJ2ZXIgZmFpbHVyZSByZXNwb25zZSB0eXBlOiBLYWx0dXJhQVBJRXhjZXB0aW9uXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIEthbHR1cmFSZXF1ZXN0XG4gKi9cbmV4cG9ydCBjbGFzcyBSZWFjaFByb2ZpbGVVcGRhdGVTdGF0dXNBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdDxLYWx0dXJhUmVhY2hQcm9maWxlPiB7XG5cbiAgICBpZCA6IG51bWJlcjtcblx0c3RhdHVzIDogS2FsdHVyYVJlYWNoUHJvZmlsZVN0YXR1cztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBSZWFjaFByb2ZpbGVVcGRhdGVTdGF0dXNBY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdvJywgcmVzcG9uc2VTdWJUeXBlIDogJ0thbHR1cmFSZWFjaFByb2ZpbGUnLCByZXNwb25zZUNvbnN0cnVjdG9yIDogS2FsdHVyYVJlYWNoUHJvZmlsZSAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAncmVhY2hfcmVhY2hwcm9maWxlJyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAndXBkYXRlU3RhdHVzJyB9LFxuXHRcdFx0XHRpZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRzdGF0dXMgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhUmVhY2hQcm9maWxlU3RhdHVzLCBzdWJUeXBlIDogJ0thbHR1cmFSZWFjaFByb2ZpbGVTdGF0dXMnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
