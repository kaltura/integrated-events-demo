"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaGenericDistributionJobProviderData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaGenericDistributionProviderParser_1 = require("./KalturaGenericDistributionProviderParser");
var KalturaDistributionJobProviderData_1 = require("./KalturaDistributionJobProviderData");
var KalturaGenericDistributionJobProviderData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaGenericDistributionJobProviderData, _super);
    function KalturaGenericDistributionJobProviderData(data) {
        return _super.call(this, data) || this;
    }
    KalturaGenericDistributionJobProviderData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaGenericDistributionJobProviderData' },
            xml: { type: 's' },
            resultParseData: { type: 's' },
            resultParserType: { type: 'en', subTypeConstructor: KalturaGenericDistributionProviderParser_1.KalturaGenericDistributionProviderParser, subType: 'KalturaGenericDistributionProviderParser' }
        });
        return result;
    };
    return KalturaGenericDistributionJobProviderData;
}(KalturaDistributionJobProviderData_1.KalturaDistributionJobProviderData));
exports.KalturaGenericDistributionJobProviderData = KalturaGenericDistributionJobProviderData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaGenericDistributionJobProviderData', KalturaGenericDistributionJobProviderData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhR2VuZXJpY0Rpc3RyaWJ1dGlvbkpvYlByb3ZpZGVyRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELHVHQUFzRztBQUN0RywyRkFBa0k7QUFTbEk7SUFBK0QscUVBQWtDO0lBTTdGLG1EQUFZLElBQXFEO2VBRTdELGtCQUFNLElBQUksQ0FBQztJQUNmLENBQUM7SUFFUyxnRUFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRywyQ0FBMkMsRUFBRTtZQUM5RixHQUFHLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3BCLGVBQWUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDaEMsZ0JBQWdCLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLG1GQUF3QyxFQUFFLE9BQU8sRUFBRywwQ0FBMEMsRUFBRTtTQUM5SSxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsZ0RBQUM7QUFBRCxDQXpCQSxBQXlCQyxDQXpCOEQsdUVBQWtDLEdBeUJoRztBQXpCWSw4RkFBeUM7QUEyQnRELDJDQUFtQixDQUFDLFlBQVksQ0FBQywyQ0FBMkMsRUFBQyx5Q0FBeUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhR2VuZXJpY0Rpc3RyaWJ1dGlvbkpvYlByb3ZpZGVyRGF0YS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFHZW5lcmljRGlzdHJpYnV0aW9uUHJvdmlkZXJQYXJzZXIgfSBmcm9tICcuL0thbHR1cmFHZW5lcmljRGlzdHJpYnV0aW9uUHJvdmlkZXJQYXJzZXInO1xuaW1wb3J0IHsgS2FsdHVyYURpc3RyaWJ1dGlvbkpvYlByb3ZpZGVyRGF0YSwgS2FsdHVyYURpc3RyaWJ1dGlvbkpvYlByb3ZpZGVyRGF0YUFyZ3MgfSBmcm9tICcuL0thbHR1cmFEaXN0cmlidXRpb25Kb2JQcm92aWRlckRhdGEnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFHZW5lcmljRGlzdHJpYnV0aW9uSm9iUHJvdmlkZXJEYXRhQXJncyAgZXh0ZW5kcyBLYWx0dXJhRGlzdHJpYnV0aW9uSm9iUHJvdmlkZXJEYXRhQXJncyB7XG4gICAgeG1sPyA6IHN0cmluZztcblx0cmVzdWx0UGFyc2VEYXRhPyA6IHN0cmluZztcblx0cmVzdWx0UGFyc2VyVHlwZT8gOiBLYWx0dXJhR2VuZXJpY0Rpc3RyaWJ1dGlvblByb3ZpZGVyUGFyc2VyO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhR2VuZXJpY0Rpc3RyaWJ1dGlvbkpvYlByb3ZpZGVyRGF0YSBleHRlbmRzIEthbHR1cmFEaXN0cmlidXRpb25Kb2JQcm92aWRlckRhdGEge1xuXG4gICAgeG1sIDogc3RyaW5nO1xuXHRyZXN1bHRQYXJzZURhdGEgOiBzdHJpbmc7XG5cdHJlc3VsdFBhcnNlclR5cGUgOiBLYWx0dXJhR2VuZXJpY0Rpc3RyaWJ1dGlvblByb3ZpZGVyUGFyc2VyO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhR2VuZXJpY0Rpc3RyaWJ1dGlvbkpvYlByb3ZpZGVyRGF0YUFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhR2VuZXJpY0Rpc3RyaWJ1dGlvbkpvYlByb3ZpZGVyRGF0YScgfSxcblx0XHRcdFx0eG1sIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHJlc3VsdFBhcnNlRGF0YSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRyZXN1bHRQYXJzZXJUeXBlIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUdlbmVyaWNEaXN0cmlidXRpb25Qcm92aWRlclBhcnNlciwgc3ViVHlwZSA6ICdLYWx0dXJhR2VuZXJpY0Rpc3RyaWJ1dGlvblByb3ZpZGVyUGFyc2VyJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUdlbmVyaWNEaXN0cmlidXRpb25Kb2JQcm92aWRlckRhdGEnLEthbHR1cmFHZW5lcmljRGlzdHJpYnV0aW9uSm9iUHJvdmlkZXJEYXRhKTtcbiJdfQ==
