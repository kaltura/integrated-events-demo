"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaStatsKmcEvent = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaStatsKmcEventType_1 = require("./KalturaStatsKmcEventType");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaStatsKmcEvent = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaStatsKmcEvent, _super);
    function KalturaStatsKmcEvent(data) {
        return _super.call(this, data) || this;
    }
    KalturaStatsKmcEvent.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaStatsKmcEvent' },
            clientVer: { type: 's' },
            kmcEventActionPath: { type: 's' },
            kmcEventType: { type: 'en', subTypeConstructor: KalturaStatsKmcEventType_1.KalturaStatsKmcEventType, subType: 'KalturaStatsKmcEventType' },
            eventTimestamp: { type: 'n' },
            sessionId: { type: 's' },
            partnerId: { type: 'n' },
            entryId: { type: 's' },
            widgetId: { type: 's' },
            uiconfId: { type: 'n' },
            userId: { type: 's' },
            userIp: { type: 's', readOnly: true }
        });
        return result;
    };
    return KalturaStatsKmcEvent;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaStatsKmcEvent = KalturaStatsKmcEvent;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaStatsKmcEvent', KalturaStatsKmcEvent);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhU3RhdHNLbWNFdmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELHVFQUFzRTtBQUN0RSw4REFBa0Y7QUFnQmxGO0lBQTBDLGdEQUFpQjtJQWN2RCw4QkFBWSxJQUFnQztlQUV4QyxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMsMkNBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsc0JBQXNCLEVBQUU7WUFDekUsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMxQixrQkFBa0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDbkMsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyxtREFBd0IsRUFBRSxPQUFPLEVBQUcsMEJBQTBCLEVBQUU7WUFDbkgsY0FBYyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMvQixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzFCLFNBQVMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDMUIsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3pCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN2QixNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7U0FDL0IsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDJCQUFDO0FBQUQsQ0F6Q0EsQUF5Q0MsQ0F6Q3lDLHVDQUFpQixHQXlDMUQ7QUF6Q1ksb0RBQW9CO0FBMkNqQywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsc0JBQXNCLEVBQUMsb0JBQW9CLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYVN0YXRzS21jRXZlbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhU3RhdHNLbWNFdmVudFR5cGUgfSBmcm9tICcuL0thbHR1cmFTdGF0c0ttY0V2ZW50VHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0QmFzZSwgS2FsdHVyYU9iamVjdEJhc2VBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYVN0YXRzS21jRXZlbnRBcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlQXJncyB7XG4gICAgY2xpZW50VmVyPyA6IHN0cmluZztcblx0a21jRXZlbnRBY3Rpb25QYXRoPyA6IHN0cmluZztcblx0a21jRXZlbnRUeXBlPyA6IEthbHR1cmFTdGF0c0ttY0V2ZW50VHlwZTtcblx0ZXZlbnRUaW1lc3RhbXA/IDogbnVtYmVyO1xuXHRzZXNzaW9uSWQ/IDogc3RyaW5nO1xuXHRwYXJ0bmVySWQ/IDogbnVtYmVyO1xuXHRlbnRyeUlkPyA6IHN0cmluZztcblx0d2lkZ2V0SWQ/IDogc3RyaW5nO1xuXHR1aWNvbmZJZD8gOiBudW1iZXI7XG5cdHVzZXJJZD8gOiBzdHJpbmc7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFTdGF0c0ttY0V2ZW50IGV4dGVuZHMgS2FsdHVyYU9iamVjdEJhc2Uge1xuXG4gICAgY2xpZW50VmVyIDogc3RyaW5nO1xuXHRrbWNFdmVudEFjdGlvblBhdGggOiBzdHJpbmc7XG5cdGttY0V2ZW50VHlwZSA6IEthbHR1cmFTdGF0c0ttY0V2ZW50VHlwZTtcblx0ZXZlbnRUaW1lc3RhbXAgOiBudW1iZXI7XG5cdHNlc3Npb25JZCA6IHN0cmluZztcblx0cGFydG5lcklkIDogbnVtYmVyO1xuXHRlbnRyeUlkIDogc3RyaW5nO1xuXHR3aWRnZXRJZCA6IHN0cmluZztcblx0dWljb25mSWQgOiBudW1iZXI7XG5cdHVzZXJJZCA6IHN0cmluZztcblx0cmVhZG9ubHkgdXNlcklwIDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhU3RhdHNLbWNFdmVudEFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhU3RhdHNLbWNFdmVudCcgfSxcblx0XHRcdFx0Y2xpZW50VmVyIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGttY0V2ZW50QWN0aW9uUGF0aCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRrbWNFdmVudFR5cGUgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhU3RhdHNLbWNFdmVudFR5cGUsIHN1YlR5cGUgOiAnS2FsdHVyYVN0YXRzS21jRXZlbnRUeXBlJyB9LFxuXHRcdFx0XHRldmVudFRpbWVzdGFtcCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRzZXNzaW9uSWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0cGFydG5lcklkIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGVudHJ5SWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0d2lkZ2V0SWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0dWljb25mSWQgOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0dXNlcklkIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHVzZXJJcCA6IHsgdHlwZSA6ICdzJywgcmVhZE9ubHkgOiB0cnVlIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhU3RhdHNLbWNFdmVudCcsS2FsdHVyYVN0YXRzS21jRXZlbnQpO1xuIl19
