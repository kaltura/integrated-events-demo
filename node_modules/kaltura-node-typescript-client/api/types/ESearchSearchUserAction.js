"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ESearchSearchUserAction = void 0;
var tslib_1 = require("tslib");
var KalturaESearchUserResponse_1 = require("./KalturaESearchUserResponse");
var KalturaESearchUserParams_1 = require("./KalturaESearchUserParams");
var KalturaPager_1 = require("./KalturaPager");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'eSearch' action 'searchUser'.
 *
 *
 *
 * Server response type:         KalturaESearchUserResponse
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var ESearchSearchUserAction = /** @class */ (function (_super) {
    tslib_1.__extends(ESearchSearchUserAction, _super);
    function ESearchSearchUserAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaESearchUserResponse', responseConstructor: KalturaESearchUserResponse_1.KalturaESearchUserResponse }) || this;
    }
    ESearchSearchUserAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'elasticsearch_esearch' },
            action: { type: 'c', default: 'searchUser' },
            searchParams: { type: 'o', subTypeConstructor: KalturaESearchUserParams_1.KalturaESearchUserParams, subType: 'KalturaESearchUserParams' },
            pager: { type: 'o', subTypeConstructor: KalturaPager_1.KalturaPager, subType: 'KalturaPager' }
        });
        return result;
    };
    return ESearchSearchUserAction;
}(kaltura_request_1.KalturaRequest));
exports.ESearchSearchUserAction = ESearchSearchUserAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9FU2VhcmNoU2VhcmNoVXNlckFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsMkVBQTBFO0FBRTFFLHVFQUFzRTtBQUN0RSwrQ0FBOEM7QUFDOUMsc0RBQXdFO0FBT3hFOzs7Ozs7Ozs7R0FTRztBQUNIO0lBQTZDLG1EQUEwQztJQUtuRixpQ0FBWSxJQUFrQztlQUUxQyxrQkFBTSxJQUFJLEVBQUUsRUFBQyxZQUFZLEVBQUcsR0FBRyxFQUFFLGVBQWUsRUFBRyw0QkFBNEIsRUFBRSxtQkFBbUIsRUFBRyx1REFBMEIsRUFBRyxDQUFDO0lBQ3pJLENBQUM7SUFFUyw4Q0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyx1QkFBdUIsRUFBRTtZQUN2RSxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxZQUFZLEVBQUU7WUFDL0MsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxtREFBd0IsRUFBRSxPQUFPLEVBQUcsMEJBQTBCLEVBQUU7WUFDbEgsS0FBSyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRywyQkFBWSxFQUFFLE9BQU8sRUFBRyxjQUFjLEVBQUU7U0FDMUUsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDhCQUFDO0FBQUQsQ0F4QkEsQUF3QkMsQ0F4QjRDLGdDQUFjLEdBd0IxRDtBQXhCWSwwREFBdUIiLCJmaWxlIjoiYXBpL3R5cGVzL0VTZWFyY2hTZWFyY2hVc2VyQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFFU2VhcmNoVXNlclJlc3BvbnNlIH0gZnJvbSAnLi9LYWx0dXJhRVNlYXJjaFVzZXJSZXNwb25zZSc7XG5cbmltcG9ydCB7IEthbHR1cmFFU2VhcmNoVXNlclBhcmFtcyB9IGZyb20gJy4vS2FsdHVyYUVTZWFyY2hVc2VyUGFyYW1zJztcbmltcG9ydCB7IEthbHR1cmFQYWdlciB9IGZyb20gJy4vS2FsdHVyYVBhZ2VyJztcbmltcG9ydCB7IEthbHR1cmFSZXF1ZXN0LCBLYWx0dXJhUmVxdWVzdEFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEVTZWFyY2hTZWFyY2hVc2VyQWN0aW9uQXJncyAgZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdEFyZ3Mge1xuICAgIHNlYXJjaFBhcmFtcyA6IEthbHR1cmFFU2VhcmNoVXNlclBhcmFtcztcblx0cGFnZXI/IDogS2FsdHVyYVBhZ2VyO1xufVxuXG4vKipcbiAqIEJ1aWxkIHJlcXVlc3QgcGF5bG9hZCBmb3Igc2VydmljZSAnZVNlYXJjaCcgYWN0aW9uICdzZWFyY2hVc2VyJy5cbiAqXG4gKiBcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhRVNlYXJjaFVzZXJSZXNwb25zZVxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgRVNlYXJjaFNlYXJjaFVzZXJBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdDxLYWx0dXJhRVNlYXJjaFVzZXJSZXNwb25zZT4ge1xuXG4gICAgc2VhcmNoUGFyYW1zIDogS2FsdHVyYUVTZWFyY2hVc2VyUGFyYW1zO1xuXHRwYWdlciA6IEthbHR1cmFQYWdlcjtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBFU2VhcmNoU2VhcmNoVXNlckFjdGlvbkFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhLCB7cmVzcG9uc2VUeXBlIDogJ28nLCByZXNwb25zZVN1YlR5cGUgOiAnS2FsdHVyYUVTZWFyY2hVc2VyUmVzcG9uc2UnLCByZXNwb25zZUNvbnN0cnVjdG9yIDogS2FsdHVyYUVTZWFyY2hVc2VyUmVzcG9uc2UgIH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ2VsYXN0aWNzZWFyY2hfZXNlYXJjaCcgfSxcblx0XHRcdFx0YWN0aW9uIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ3NlYXJjaFVzZXInIH0sXG5cdFx0XHRcdHNlYXJjaFBhcmFtcyA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUVTZWFyY2hVc2VyUGFyYW1zLCBzdWJUeXBlIDogJ0thbHR1cmFFU2VhcmNoVXNlclBhcmFtcycgfSxcblx0XHRcdFx0cGFnZXIgOiB7IHR5cGUgOiAnbycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFQYWdlciwgc3ViVHlwZSA6ICdLYWx0dXJhUGFnZXInIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
