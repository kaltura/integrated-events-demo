"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaBulkUploadScheduleEventCsvJobData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaBulkUploadCsvVersion_1 = require("./KalturaBulkUploadCsvVersion");
var KalturaString_1 = require("./KalturaString");
var KalturaBulkUploadScheduleEventJobData_1 = require("./KalturaBulkUploadScheduleEventJobData");
var KalturaBulkUploadScheduleEventCsvJobData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaBulkUploadScheduleEventCsvJobData, _super);
    function KalturaBulkUploadScheduleEventCsvJobData(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.columns === 'undefined')
            _this.columns = [];
        return _this;
    }
    KalturaBulkUploadScheduleEventCsvJobData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaBulkUploadScheduleEventCsvJobData' },
            csvVersion: { type: 'en', readOnly: true, subTypeConstructor: KalturaBulkUploadCsvVersion_1.KalturaBulkUploadCsvVersion, subType: 'KalturaBulkUploadCsvVersion' },
            columns: { type: 'a', subTypeConstructor: KalturaString_1.KalturaString, subType: 'KalturaString' }
        });
        return result;
    };
    return KalturaBulkUploadScheduleEventCsvJobData;
}(KalturaBulkUploadScheduleEventJobData_1.KalturaBulkUploadScheduleEventJobData));
exports.KalturaBulkUploadScheduleEventCsvJobData = KalturaBulkUploadScheduleEventCsvJobData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaBulkUploadScheduleEventCsvJobData', KalturaBulkUploadScheduleEventCsvJobData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQnVsa1VwbG9hZFNjaGVkdWxlRXZlbnRDc3ZKb2JEYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsNkVBQTRFO0FBQzVFLGlEQUFnRDtBQUNoRCxpR0FBMkk7QUFPM0k7SUFBOEQsb0VBQXFDO0lBSy9GLGtEQUFZLElBQW9EO1FBQWhFLFlBRUksa0JBQU0sSUFBSSxDQUFDLFNBRWQ7UUFERyxJQUFJLE9BQU8sS0FBSSxDQUFDLE9BQU8sS0FBSyxXQUFXO1lBQUUsS0FBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7O0lBQy9ELENBQUM7SUFFUywrREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRywwQ0FBMEMsRUFBRTtZQUM3RixVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcseURBQTJCLEVBQUUsT0FBTyxFQUFHLDZCQUE2QixFQUFFO1lBQ3hJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsNkJBQWEsRUFBRSxPQUFPLEVBQUcsZUFBZSxFQUFFO1NBQzlFLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCwrQ0FBQztBQUFELENBeEJBLEFBd0JDLENBeEI2RCw2RUFBcUMsR0F3QmxHO0FBeEJZLDRGQUF3QztBQTBCckQsMkNBQW1CLENBQUMsWUFBWSxDQUFDLDBDQUEwQyxFQUFDLHdDQUF3QyxDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFCdWxrVXBsb2FkU2NoZWR1bGVFdmVudENzdkpvYkRhdGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhQnVsa1VwbG9hZENzdlZlcnNpb24gfSBmcm9tICcuL0thbHR1cmFCdWxrVXBsb2FkQ3N2VmVyc2lvbic7XG5pbXBvcnQgeyBLYWx0dXJhU3RyaW5nIH0gZnJvbSAnLi9LYWx0dXJhU3RyaW5nJztcbmltcG9ydCB7IEthbHR1cmFCdWxrVXBsb2FkU2NoZWR1bGVFdmVudEpvYkRhdGEsIEthbHR1cmFCdWxrVXBsb2FkU2NoZWR1bGVFdmVudEpvYkRhdGFBcmdzIH0gZnJvbSAnLi9LYWx0dXJhQnVsa1VwbG9hZFNjaGVkdWxlRXZlbnRKb2JEYXRhJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhQnVsa1VwbG9hZFNjaGVkdWxlRXZlbnRDc3ZKb2JEYXRhQXJncyAgZXh0ZW5kcyBLYWx0dXJhQnVsa1VwbG9hZFNjaGVkdWxlRXZlbnRKb2JEYXRhQXJncyB7XG4gICAgY29sdW1ucz8gOiBLYWx0dXJhU3RyaW5nW107XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFCdWxrVXBsb2FkU2NoZWR1bGVFdmVudENzdkpvYkRhdGEgZXh0ZW5kcyBLYWx0dXJhQnVsa1VwbG9hZFNjaGVkdWxlRXZlbnRKb2JEYXRhIHtcblxuICAgIHJlYWRvbmx5IGNzdlZlcnNpb24gOiBLYWx0dXJhQnVsa1VwbG9hZENzdlZlcnNpb247XG5cdGNvbHVtbnMgOiBLYWx0dXJhU3RyaW5nW107XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFCdWxrVXBsb2FkU2NoZWR1bGVFdmVudENzdkpvYkRhdGFBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5jb2x1bW5zID09PSAndW5kZWZpbmVkJykgdGhpcy5jb2x1bW5zID0gW107XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYUJ1bGtVcGxvYWRTY2hlZHVsZUV2ZW50Q3N2Sm9iRGF0YScgfSxcblx0XHRcdFx0Y3N2VmVyc2lvbiA6IHsgdHlwZSA6ICdlbicsIHJlYWRPbmx5IDogdHJ1ZSwgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUJ1bGtVcGxvYWRDc3ZWZXJzaW9uLCBzdWJUeXBlIDogJ0thbHR1cmFCdWxrVXBsb2FkQ3N2VmVyc2lvbicgfSxcblx0XHRcdFx0Y29sdW1ucyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVN0cmluZywgc3ViVHlwZSA6ICdLYWx0dXJhU3RyaW5nJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUJ1bGtVcGxvYWRTY2hlZHVsZUV2ZW50Q3N2Sm9iRGF0YScsS2FsdHVyYUJ1bGtVcGxvYWRTY2hlZHVsZUV2ZW50Q3N2Sm9iRGF0YSk7XG4iXX0=
