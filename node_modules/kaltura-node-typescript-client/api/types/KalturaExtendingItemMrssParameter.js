"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaExtendingItemMrssParameter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaObjectIdentifier_1 = require("./KalturaObjectIdentifier");
var KalturaMrssExtensionMode_1 = require("./KalturaMrssExtensionMode");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaExtendingItemMrssParameter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaExtendingItemMrssParameter, _super);
    function KalturaExtendingItemMrssParameter(data) {
        return _super.call(this, data) || this;
    }
    KalturaExtendingItemMrssParameter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaExtendingItemMrssParameter' },
            xpath: { type: 's' },
            identifier: { type: 'o', subTypeConstructor: KalturaObjectIdentifier_1.KalturaObjectIdentifier, subType: 'KalturaObjectIdentifier' },
            extensionMode: { type: 'en', subTypeConstructor: KalturaMrssExtensionMode_1.KalturaMrssExtensionMode, subType: 'KalturaMrssExtensionMode' }
        });
        return result;
    };
    return KalturaExtendingItemMrssParameter;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaExtendingItemMrssParameter = KalturaExtendingItemMrssParameter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaExtendingItemMrssParameter', KalturaExtendingItemMrssParameter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRXh0ZW5kaW5nSXRlbU1yc3NQYXJhbWV0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxxRUFBb0U7QUFDcEUsdUVBQXNFO0FBQ3RFLDhEQUFrRjtBQVNsRjtJQUF1RCw2REFBaUI7SUFNcEUsMkNBQVksSUFBNkM7ZUFFckQsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLHdEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLG1DQUFtQyxFQUFFO1lBQ3RGLEtBQUssRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdEIsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxpREFBdUIsRUFBRSxPQUFPLEVBQUcseUJBQXlCLEVBQUU7WUFDOUcsYUFBYSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyxtREFBd0IsRUFBRSxPQUFPLEVBQUcsMEJBQTBCLEVBQUU7U0FDM0csQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHdDQUFDO0FBQUQsQ0F6QkEsQUF5QkMsQ0F6QnNELHVDQUFpQixHQXlCdkU7QUF6QlksOEVBQWlDO0FBMkI5QywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsbUNBQW1DLEVBQUMsaUNBQWlDLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYUV4dGVuZGluZ0l0ZW1NcnNzUGFyYW1ldGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYU9iamVjdElkZW50aWZpZXIgfSBmcm9tICcuL0thbHR1cmFPYmplY3RJZGVudGlmaWVyJztcbmltcG9ydCB7IEthbHR1cmFNcnNzRXh0ZW5zaW9uTW9kZSB9IGZyb20gJy4vS2FsdHVyYU1yc3NFeHRlbnNpb25Nb2RlJztcbmltcG9ydCB7IEthbHR1cmFPYmplY3RCYXNlLCBLYWx0dXJhT2JqZWN0QmFzZUFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhRXh0ZW5kaW5nSXRlbU1yc3NQYXJhbWV0ZXJBcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlQXJncyB7XG4gICAgeHBhdGg/IDogc3RyaW5nO1xuXHRpZGVudGlmaWVyPyA6IEthbHR1cmFPYmplY3RJZGVudGlmaWVyO1xuXHRleHRlbnNpb25Nb2RlPyA6IEthbHR1cmFNcnNzRXh0ZW5zaW9uTW9kZTtcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYUV4dGVuZGluZ0l0ZW1NcnNzUGFyYW1ldGVyIGV4dGVuZHMgS2FsdHVyYU9iamVjdEJhc2Uge1xuXG4gICAgeHBhdGggOiBzdHJpbmc7XG5cdGlkZW50aWZpZXIgOiBLYWx0dXJhT2JqZWN0SWRlbnRpZmllcjtcblx0ZXh0ZW5zaW9uTW9kZSA6IEthbHR1cmFNcnNzRXh0ZW5zaW9uTW9kZTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUV4dGVuZGluZ0l0ZW1NcnNzUGFyYW1ldGVyQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFFeHRlbmRpbmdJdGVtTXJzc1BhcmFtZXRlcicgfSxcblx0XHRcdFx0eHBhdGggOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0aWRlbnRpZmllciA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYU9iamVjdElkZW50aWZpZXIsIHN1YlR5cGUgOiAnS2FsdHVyYU9iamVjdElkZW50aWZpZXInIH0sXG5cdFx0XHRcdGV4dGVuc2lvbk1vZGUgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhTXJzc0V4dGVuc2lvbk1vZGUsIHN1YlR5cGUgOiAnS2FsdHVyYU1yc3NFeHRlbnNpb25Nb2RlJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUV4dGVuZGluZ0l0ZW1NcnNzUGFyYW1ldGVyJyxLYWx0dXJhRXh0ZW5kaW5nSXRlbU1yc3NQYXJhbWV0ZXIpO1xuIl19
