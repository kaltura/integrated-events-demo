"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SchemaServeAction = void 0;
var tslib_1 = require("tslib");
var KalturaSchemaType_1 = require("./KalturaSchemaType");
var kaltura_file_request_1 = require("../kaltura-file-request");
/**
 * Build request payload for service 'schema' action 'serve'.
 *
 * Usage: Serves the requested XSD according to the type and name
 *
 * Server response type:         { url: string }
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaFileRequest
 */
var SchemaServeAction = /** @class */ (function (_super) {
    tslib_1.__extends(SchemaServeAction, _super);
    function SchemaServeAction(data) {
        return _super.call(this, data) || this;
    }
    SchemaServeAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'schema' },
            action: { type: 'c', default: 'serve' },
            type: { type: 'es', subTypeConstructor: KalturaSchemaType_1.KalturaSchemaType, subType: 'KalturaSchemaType' }
        });
        return result;
    };
    return SchemaServeAction;
}(kaltura_file_request_1.KalturaFileRequest));
exports.SchemaServeAction = SchemaServeAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9TY2hlbWFTZXJ2ZUFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBSUEseURBQXdEO0FBQ3hELGdFQUFxRjtBQU1yRjs7Ozs7Ozs7O0dBU0c7QUFDSDtJQUF1Qyw2Q0FBa0I7SUFJckQsMkJBQVksSUFBNEI7ZUFFcEMsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLHdDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLFFBQVEsRUFBRTtZQUN4RCxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxPQUFPLEVBQUU7WUFDMUMsSUFBSSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyxxQ0FBaUIsRUFBRSxPQUFPLEVBQUcsbUJBQW1CLEVBQUU7U0FDcEYsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHdCQUFDO0FBQUQsQ0F0QkEsQUFzQkMsQ0F0QnNDLHlDQUFrQixHQXNCeEQ7QUF0QlksOENBQWlCIiwiZmlsZSI6ImFwaS90eXBlcy9TY2hlbWFTZXJ2ZUFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5cblxuaW1wb3J0IHsgS2FsdHVyYVNjaGVtYVR5cGUgfSBmcm9tICcuL0thbHR1cmFTY2hlbWFUeXBlJztcbmltcG9ydCB7IEthbHR1cmFGaWxlUmVxdWVzdCwgS2FsdHVyYUZpbGVSZXF1ZXN0QXJncyB9IGZyb20gJy4uL2thbHR1cmEtZmlsZS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBTY2hlbWFTZXJ2ZUFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYUZpbGVSZXF1ZXN0QXJncyB7XG4gICAgdHlwZSA6IEthbHR1cmFTY2hlbWFUeXBlO1xufVxuXG4vKipcbiAqIEJ1aWxkIHJlcXVlc3QgcGF5bG9hZCBmb3Igc2VydmljZSAnc2NoZW1hJyBhY3Rpb24gJ3NlcnZlJy5cbiAqXG4gKiBVc2FnZTogU2VydmVzIHRoZSByZXF1ZXN0ZWQgWFNEIGFjY29yZGluZyB0byB0aGUgdHlwZSBhbmQgbmFtZVxuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIHsgdXJsOiBzdHJpbmcgfVxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhRmlsZVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIFNjaGVtYVNlcnZlQWN0aW9uIGV4dGVuZHMgS2FsdHVyYUZpbGVSZXF1ZXN0IHtcblxuICAgIHR5cGUgOiBLYWx0dXJhU2NoZW1hVHlwZTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBTY2hlbWFTZXJ2ZUFjdGlvbkFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdzY2hlbWEnIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdzZXJ2ZScgfSxcblx0XHRcdFx0dHlwZSA6IHsgdHlwZSA6ICdlcycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFTY2hlbWFUeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFTY2hlbWFUeXBlJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG4iXX0=
