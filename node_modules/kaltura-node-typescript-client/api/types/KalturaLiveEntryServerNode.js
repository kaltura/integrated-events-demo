"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaLiveEntryServerNode = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaLiveStreamParams_1 = require("./KalturaLiveStreamParams");
var KalturaLiveEntryServerNodeRecordingInfo_1 = require("./KalturaLiveEntryServerNodeRecordingInfo");
var KalturaViewMode_1 = require("./KalturaViewMode");
var KalturaEntryServerNode_1 = require("./KalturaEntryServerNode");
var KalturaLiveEntryServerNode = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaLiveEntryServerNode, _super);
    function KalturaLiveEntryServerNode(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.streams === 'undefined')
            _this.streams = [];
        if (typeof _this.recordingInfo === 'undefined')
            _this.recordingInfo = [];
        return _this;
    }
    KalturaLiveEntryServerNode.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaLiveEntryServerNode' },
            streams: { type: 'a', subTypeConstructor: KalturaLiveStreamParams_1.KalturaLiveStreamParams, subType: 'KalturaLiveStreamParams' },
            recordingInfo: { type: 'a', subTypeConstructor: KalturaLiveEntryServerNodeRecordingInfo_1.KalturaLiveEntryServerNodeRecordingInfo, subType: 'KalturaLiveEntryServerNodeRecordingInfo' },
            isPlayableUser: { type: 'b' },
            viewMode: { type: 'en', subTypeConstructor: KalturaViewMode_1.KalturaViewMode, subType: 'KalturaViewMode' },
            featuresUpdatedAt: { type: 'd' },
            viewModeUpdatedAt: { type: 'd' }
        });
        return result;
    };
    return KalturaLiveEntryServerNode;
}(KalturaEntryServerNode_1.KalturaEntryServerNode));
exports.KalturaLiveEntryServerNode = KalturaLiveEntryServerNode;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaLiveEntryServerNode', KalturaLiveEntryServerNode);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhTGl2ZUVudHJ5U2VydmVyTm9kZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELHFFQUFvRTtBQUNwRSxxR0FBb0c7QUFDcEcscURBQW9EO0FBQ3BELG1FQUE4RjtBQVk5RjtJQUFnRCxzREFBc0I7SUFTbEUsb0NBQVksSUFBc0M7UUFBbEQsWUFFSSxrQkFBTSxJQUFJLENBQUMsU0FHZDtRQUZHLElBQUksT0FBTyxLQUFJLENBQUMsT0FBTyxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUNqRSxJQUFJLE9BQU8sS0FBSSxDQUFDLGFBQWEsS0FBSyxXQUFXO1lBQUUsS0FBSSxDQUFDLGFBQWEsR0FBRyxFQUFFLENBQUM7O0lBQ3JFLENBQUM7SUFFUyxpREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyw0QkFBNEIsRUFBRTtZQUMvRSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLGlEQUF1QixFQUFFLE9BQU8sRUFBRyx5QkFBeUIsRUFBRTtZQUMzRyxhQUFhLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLGlGQUF1QyxFQUFFLE9BQU8sRUFBRyx5Q0FBeUMsRUFBRTtZQUNqSixjQUFjLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQy9CLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsaUNBQWUsRUFBRSxPQUFPLEVBQUcsaUJBQWlCLEVBQUU7WUFDN0YsaUJBQWlCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ2xDLGlCQUFpQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtTQUN6QixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsaUNBQUM7QUFBRCxDQWpDQSxBQWlDQyxDQWpDK0MsK0NBQXNCLEdBaUNyRTtBQWpDWSxnRUFBMEI7QUFtQ3ZDLDJDQUFtQixDQUFDLFlBQVksQ0FBQyw0QkFBNEIsRUFBQywwQkFBMEIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhTGl2ZUVudHJ5U2VydmVyTm9kZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFMaXZlU3RyZWFtUGFyYW1zIH0gZnJvbSAnLi9LYWx0dXJhTGl2ZVN0cmVhbVBhcmFtcyc7XG5pbXBvcnQgeyBLYWx0dXJhTGl2ZUVudHJ5U2VydmVyTm9kZVJlY29yZGluZ0luZm8gfSBmcm9tICcuL0thbHR1cmFMaXZlRW50cnlTZXJ2ZXJOb2RlUmVjb3JkaW5nSW5mbyc7XG5pbXBvcnQgeyBLYWx0dXJhVmlld01vZGUgfSBmcm9tICcuL0thbHR1cmFWaWV3TW9kZSc7XG5pbXBvcnQgeyBLYWx0dXJhRW50cnlTZXJ2ZXJOb2RlLCBLYWx0dXJhRW50cnlTZXJ2ZXJOb2RlQXJncyB9IGZyb20gJy4vS2FsdHVyYUVudHJ5U2VydmVyTm9kZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYUxpdmVFbnRyeVNlcnZlck5vZGVBcmdzICBleHRlbmRzIEthbHR1cmFFbnRyeVNlcnZlck5vZGVBcmdzIHtcbiAgICBzdHJlYW1zPyA6IEthbHR1cmFMaXZlU3RyZWFtUGFyYW1zW107XG5cdHJlY29yZGluZ0luZm8/IDogS2FsdHVyYUxpdmVFbnRyeVNlcnZlck5vZGVSZWNvcmRpbmdJbmZvW107XG5cdGlzUGxheWFibGVVc2VyPyA6IGJvb2xlYW47XG5cdHZpZXdNb2RlPyA6IEthbHR1cmFWaWV3TW9kZTtcblx0ZmVhdHVyZXNVcGRhdGVkQXQ/IDogRGF0ZTtcblx0dmlld01vZGVVcGRhdGVkQXQ/IDogRGF0ZTtcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYUxpdmVFbnRyeVNlcnZlck5vZGUgZXh0ZW5kcyBLYWx0dXJhRW50cnlTZXJ2ZXJOb2RlIHtcblxuICAgIHN0cmVhbXMgOiBLYWx0dXJhTGl2ZVN0cmVhbVBhcmFtc1tdO1xuXHRyZWNvcmRpbmdJbmZvIDogS2FsdHVyYUxpdmVFbnRyeVNlcnZlck5vZGVSZWNvcmRpbmdJbmZvW107XG5cdGlzUGxheWFibGVVc2VyIDogYm9vbGVhbjtcblx0dmlld01vZGUgOiBLYWx0dXJhVmlld01vZGU7XG5cdGZlYXR1cmVzVXBkYXRlZEF0IDogRGF0ZTtcblx0dmlld01vZGVVcGRhdGVkQXQgOiBEYXRlO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhTGl2ZUVudHJ5U2VydmVyTm9kZUFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnN0cmVhbXMgPT09ICd1bmRlZmluZWQnKSB0aGlzLnN0cmVhbXMgPSBbXTtcblx0XHRpZiAodHlwZW9mIHRoaXMucmVjb3JkaW5nSW5mbyA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMucmVjb3JkaW5nSW5mbyA9IFtdO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFMaXZlRW50cnlTZXJ2ZXJOb2RlJyB9LFxuXHRcdFx0XHRzdHJlYW1zIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhTGl2ZVN0cmVhbVBhcmFtcywgc3ViVHlwZSA6ICdLYWx0dXJhTGl2ZVN0cmVhbVBhcmFtcycgfSxcblx0XHRcdFx0cmVjb3JkaW5nSW5mbyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUxpdmVFbnRyeVNlcnZlck5vZGVSZWNvcmRpbmdJbmZvLCBzdWJUeXBlIDogJ0thbHR1cmFMaXZlRW50cnlTZXJ2ZXJOb2RlUmVjb3JkaW5nSW5mbycgfSxcblx0XHRcdFx0aXNQbGF5YWJsZVVzZXIgOiB7IHR5cGUgOiAnYicgfSxcblx0XHRcdFx0dmlld01vZGUgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhVmlld01vZGUsIHN1YlR5cGUgOiAnS2FsdHVyYVZpZXdNb2RlJyB9LFxuXHRcdFx0XHRmZWF0dXJlc1VwZGF0ZWRBdCA6IHsgdHlwZSA6ICdkJyB9LFxuXHRcdFx0XHR2aWV3TW9kZVVwZGF0ZWRBdCA6IHsgdHlwZSA6ICdkJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUxpdmVFbnRyeVNlcnZlck5vZGUnLEthbHR1cmFMaXZlRW50cnlTZXJ2ZXJOb2RlKTtcbiJdfQ==
