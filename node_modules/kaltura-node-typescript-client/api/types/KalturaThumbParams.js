"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaThumbParams = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaThumbCropType_1 = require("./KalturaThumbCropType");
var KalturaContainerFormat_1 = require("./KalturaContainerFormat");
var KalturaAssetParams_1 = require("./KalturaAssetParams");
var KalturaThumbParams = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaThumbParams, _super);
    function KalturaThumbParams(data) {
        return _super.call(this, data) || this;
    }
    KalturaThumbParams.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaThumbParams' },
            cropType: { type: 'en', subTypeConstructor: KalturaThumbCropType_1.KalturaThumbCropType, subType: 'KalturaThumbCropType' },
            quality: { type: 'n' },
            cropX: { type: 'n' },
            cropY: { type: 'n' },
            cropWidth: { type: 'n' },
            cropHeight: { type: 'n' },
            videoOffset: { type: 'n' },
            width: { type: 'n' },
            height: { type: 'n' },
            scaleWidth: { type: 'n' },
            scaleHeight: { type: 'n' },
            backgroundColor: { type: 's' },
            sourceParamsId: { type: 'n' },
            format: { type: 'es', subTypeConstructor: KalturaContainerFormat_1.KalturaContainerFormat, subType: 'KalturaContainerFormat' },
            density: { type: 'n' },
            stripProfiles: { type: 'b' },
            videoOffsetInPercentage: { type: 'n' },
            interval: { type: 'n' }
        });
        return result;
    };
    return KalturaThumbParams;
}(KalturaAssetParams_1.KalturaAssetParams));
exports.KalturaThumbParams = KalturaThumbParams;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaThumbParams', KalturaThumbParams);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhVGh1bWJQYXJhbXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCwrREFBOEQ7QUFDOUQsbUVBQWtFO0FBQ2xFLDJEQUFrRjtBQXdCbEY7SUFBd0MsOENBQWtCO0lBcUJ0RCw0QkFBWSxJQUE4QjtlQUV0QyxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMseUNBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsb0JBQW9CLEVBQUU7WUFDdkUsUUFBUSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywyQ0FBb0IsRUFBRSxPQUFPLEVBQUcsc0JBQXNCLEVBQUU7WUFDdkcsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixLQUFLLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3RCLEtBQUssRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdEIsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMxQixVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzNCLFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDNUIsS0FBSyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN0QixNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3ZCLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDM0IsV0FBVyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM1QixlQUFlLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ2hDLGNBQWMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDL0IsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywrQ0FBc0IsRUFBRSxPQUFPLEVBQUcsd0JBQXdCLEVBQUU7WUFDekcsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixhQUFhLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzlCLHVCQUF1QixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QyxRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ2hCLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCx5QkFBQztBQUFELENBdkRBLEFBdURDLENBdkR1Qyx1Q0FBa0IsR0F1RHpEO0FBdkRZLGdEQUFrQjtBQXlEL0IsMkNBQW1CLENBQUMsWUFBWSxDQUFDLG9CQUFvQixFQUFDLGtCQUFrQixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFUaHVtYlBhcmFtcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFUaHVtYkNyb3BUeXBlIH0gZnJvbSAnLi9LYWx0dXJhVGh1bWJDcm9wVHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhQ29udGFpbmVyRm9ybWF0IH0gZnJvbSAnLi9LYWx0dXJhQ29udGFpbmVyRm9ybWF0JztcbmltcG9ydCB7IEthbHR1cmFBc3NldFBhcmFtcywgS2FsdHVyYUFzc2V0UGFyYW1zQXJncyB9IGZyb20gJy4vS2FsdHVyYUFzc2V0UGFyYW1zJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhVGh1bWJQYXJhbXNBcmdzICBleHRlbmRzIEthbHR1cmFBc3NldFBhcmFtc0FyZ3Mge1xuICAgIGNyb3BUeXBlPyA6IEthbHR1cmFUaHVtYkNyb3BUeXBlO1xuXHRxdWFsaXR5PyA6IG51bWJlcjtcblx0Y3JvcFg/IDogbnVtYmVyO1xuXHRjcm9wWT8gOiBudW1iZXI7XG5cdGNyb3BXaWR0aD8gOiBudW1iZXI7XG5cdGNyb3BIZWlnaHQ/IDogbnVtYmVyO1xuXHR2aWRlb09mZnNldD8gOiBudW1iZXI7XG5cdHdpZHRoPyA6IG51bWJlcjtcblx0aGVpZ2h0PyA6IG51bWJlcjtcblx0c2NhbGVXaWR0aD8gOiBudW1iZXI7XG5cdHNjYWxlSGVpZ2h0PyA6IG51bWJlcjtcblx0YmFja2dyb3VuZENvbG9yPyA6IHN0cmluZztcblx0c291cmNlUGFyYW1zSWQ/IDogbnVtYmVyO1xuXHRmb3JtYXQ/IDogS2FsdHVyYUNvbnRhaW5lckZvcm1hdDtcblx0ZGVuc2l0eT8gOiBudW1iZXI7XG5cdHN0cmlwUHJvZmlsZXM/IDogYm9vbGVhbjtcblx0dmlkZW9PZmZzZXRJblBlcmNlbnRhZ2U/IDogbnVtYmVyO1xuXHRpbnRlcnZhbD8gOiBudW1iZXI7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFUaHVtYlBhcmFtcyBleHRlbmRzIEthbHR1cmFBc3NldFBhcmFtcyB7XG5cbiAgICBjcm9wVHlwZSA6IEthbHR1cmFUaHVtYkNyb3BUeXBlO1xuXHRxdWFsaXR5IDogbnVtYmVyO1xuXHRjcm9wWCA6IG51bWJlcjtcblx0Y3JvcFkgOiBudW1iZXI7XG5cdGNyb3BXaWR0aCA6IG51bWJlcjtcblx0Y3JvcEhlaWdodCA6IG51bWJlcjtcblx0dmlkZW9PZmZzZXQgOiBudW1iZXI7XG5cdHdpZHRoIDogbnVtYmVyO1xuXHRoZWlnaHQgOiBudW1iZXI7XG5cdHNjYWxlV2lkdGggOiBudW1iZXI7XG5cdHNjYWxlSGVpZ2h0IDogbnVtYmVyO1xuXHRiYWNrZ3JvdW5kQ29sb3IgOiBzdHJpbmc7XG5cdHNvdXJjZVBhcmFtc0lkIDogbnVtYmVyO1xuXHRmb3JtYXQgOiBLYWx0dXJhQ29udGFpbmVyRm9ybWF0O1xuXHRkZW5zaXR5IDogbnVtYmVyO1xuXHRzdHJpcFByb2ZpbGVzIDogYm9vbGVhbjtcblx0dmlkZW9PZmZzZXRJblBlcmNlbnRhZ2UgOiBudW1iZXI7XG5cdGludGVydmFsIDogbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhVGh1bWJQYXJhbXNBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYVRodW1iUGFyYW1zJyB9LFxuXHRcdFx0XHRjcm9wVHlwZSA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFUaHVtYkNyb3BUeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFUaHVtYkNyb3BUeXBlJyB9LFxuXHRcdFx0XHRxdWFsaXR5IDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGNyb3BYIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGNyb3BZIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGNyb3BXaWR0aCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRjcm9wSGVpZ2h0IDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdHZpZGVvT2Zmc2V0IDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdHdpZHRoIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGhlaWdodCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRzY2FsZVdpZHRoIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdHNjYWxlSGVpZ2h0IDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGJhY2tncm91bmRDb2xvciA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzb3VyY2VQYXJhbXNJZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRmb3JtYXQgOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQ29udGFpbmVyRm9ybWF0LCBzdWJUeXBlIDogJ0thbHR1cmFDb250YWluZXJGb3JtYXQnIH0sXG5cdFx0XHRcdGRlbnNpdHkgOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0c3RyaXBQcm9maWxlcyA6IHsgdHlwZSA6ICdiJyB9LFxuXHRcdFx0XHR2aWRlb09mZnNldEluUGVyY2VudGFnZSA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRpbnRlcnZhbCA6IHsgdHlwZSA6ICduJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYVRodW1iUGFyYW1zJyxLYWx0dXJhVGh1bWJQYXJhbXMpO1xuIl19
