"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaBaseEntryFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaNullableBoolean_1 = require("./KalturaNullableBoolean");
var KalturaBaseEntryBaseFilter_1 = require("./KalturaBaseEntryBaseFilter");
var KalturaBaseEntryFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaBaseEntryFilter, _super);
    function KalturaBaseEntryFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaBaseEntryFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaBaseEntryFilter' },
            freeText: { type: 's' },
            excludedFreeTextGroups: { type: 's' },
            descriptionLike: { type: 's' },
            isRoot: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            categoriesFullNameIn: { type: 's' },
            categoryAncestorIdIn: { type: 's' },
            redirectFromEntryId: { type: 's' },
            conversionProfileIdEqual: { type: 'n' }
        });
        return result;
    };
    return KalturaBaseEntryFilter;
}(KalturaBaseEntryBaseFilter_1.KalturaBaseEntryBaseFilter));
exports.KalturaBaseEntryFilter = KalturaBaseEntryFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaBaseEntryFilter', KalturaBaseEntryFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQmFzZUVudHJ5RmlsdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsbUVBQWtFO0FBQ2xFLDJFQUEwRztBQWMxRztJQUE0QyxrREFBMEI7SUFXbEUsZ0NBQVksSUFBa0M7ZUFFMUMsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLDZDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHdCQUF3QixFQUFFO1lBQzNFLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsc0JBQXNCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3ZDLGVBQWUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDaEMsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywrQ0FBc0IsRUFBRSxPQUFPLEVBQUcsd0JBQXdCLEVBQUU7WUFDekcsb0JBQW9CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3JDLG9CQUFvQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNyQyxtQkFBbUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDcEMsd0JBQXdCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ2hDLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCw2QkFBQztBQUFELENBbkNBLEFBbUNDLENBbkMyQyx1REFBMEIsR0FtQ3JFO0FBbkNZLHdEQUFzQjtBQXFDbkMsMkNBQW1CLENBQUMsWUFBWSxDQUFDLHdCQUF3QixFQUFDLHNCQUFzQixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFCYXNlRW50cnlGaWx0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhTnVsbGFibGVCb29sZWFuIH0gZnJvbSAnLi9LYWx0dXJhTnVsbGFibGVCb29sZWFuJztcbmltcG9ydCB7IEthbHR1cmFCYXNlRW50cnlCYXNlRmlsdGVyLCBLYWx0dXJhQmFzZUVudHJ5QmFzZUZpbHRlckFyZ3MgfSBmcm9tICcuL0thbHR1cmFCYXNlRW50cnlCYXNlRmlsdGVyJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhQmFzZUVudHJ5RmlsdGVyQXJncyAgZXh0ZW5kcyBLYWx0dXJhQmFzZUVudHJ5QmFzZUZpbHRlckFyZ3Mge1xuICAgIGZyZWVUZXh0PyA6IHN0cmluZztcblx0ZXhjbHVkZWRGcmVlVGV4dEdyb3Vwcz8gOiBzdHJpbmc7XG5cdGRlc2NyaXB0aW9uTGlrZT8gOiBzdHJpbmc7XG5cdGlzUm9vdD8gOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuO1xuXHRjYXRlZ29yaWVzRnVsbE5hbWVJbj8gOiBzdHJpbmc7XG5cdGNhdGVnb3J5QW5jZXN0b3JJZEluPyA6IHN0cmluZztcblx0cmVkaXJlY3RGcm9tRW50cnlJZD8gOiBzdHJpbmc7XG5cdGNvbnZlcnNpb25Qcm9maWxlSWRFcXVhbD8gOiBudW1iZXI7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFCYXNlRW50cnlGaWx0ZXIgZXh0ZW5kcyBLYWx0dXJhQmFzZUVudHJ5QmFzZUZpbHRlciB7XG5cbiAgICBmcmVlVGV4dCA6IHN0cmluZztcblx0ZXhjbHVkZWRGcmVlVGV4dEdyb3VwcyA6IHN0cmluZztcblx0ZGVzY3JpcHRpb25MaWtlIDogc3RyaW5nO1xuXHRpc1Jvb3QgOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuO1xuXHRjYXRlZ29yaWVzRnVsbE5hbWVJbiA6IHN0cmluZztcblx0Y2F0ZWdvcnlBbmNlc3RvcklkSW4gOiBzdHJpbmc7XG5cdHJlZGlyZWN0RnJvbUVudHJ5SWQgOiBzdHJpbmc7XG5cdGNvbnZlcnNpb25Qcm9maWxlSWRFcXVhbCA6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUJhc2VFbnRyeUZpbHRlckFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhQmFzZUVudHJ5RmlsdGVyJyB9LFxuXHRcdFx0XHRmcmVlVGV4dCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRleGNsdWRlZEZyZWVUZXh0R3JvdXBzIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGRlc2NyaXB0aW9uTGlrZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRpc1Jvb3QgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuLCBzdWJUeXBlIDogJ0thbHR1cmFOdWxsYWJsZUJvb2xlYW4nIH0sXG5cdFx0XHRcdGNhdGVnb3JpZXNGdWxsTmFtZUluIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNhdGVnb3J5QW5jZXN0b3JJZEluIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHJlZGlyZWN0RnJvbUVudHJ5SWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Y29udmVyc2lvblByb2ZpbGVJZEVxdWFsIDogeyB0eXBlIDogJ24nIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhQmFzZUVudHJ5RmlsdGVyJyxLYWx0dXJhQmFzZUVudHJ5RmlsdGVyKTtcbiJdfQ==
