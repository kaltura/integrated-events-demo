"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaConvartableJobData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaSourceFileSyncDescriptor_1 = require("./KalturaSourceFileSyncDescriptor");
var KalturaFlavorParamsOutput_1 = require("./KalturaFlavorParamsOutput");
var KalturaKeyValue_1 = require("./KalturaKeyValue");
var KalturaJobData_1 = require("./KalturaJobData");
var KalturaConvartableJobData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaConvartableJobData, _super);
    function KalturaConvartableJobData(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.srcFileSyncs === 'undefined')
            _this.srcFileSyncs = [];
        if (typeof _this.pluginData === 'undefined')
            _this.pluginData = [];
        return _this;
    }
    KalturaConvartableJobData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaConvartableJobData' },
            srcFileSyncLocalPath: { type: 's' },
            actualSrcFileSyncLocalPath: { type: 's' },
            srcFileSyncRemoteUrl: { type: 's' },
            srcFileSyncs: { type: 'a', subTypeConstructor: KalturaSourceFileSyncDescriptor_1.KalturaSourceFileSyncDescriptor, subType: 'KalturaSourceFileSyncDescriptor' },
            engineVersion: { type: 'n' },
            flavorParamsOutputId: { type: 'n' },
            flavorParamsOutput: { type: 'o', subTypeConstructor: KalturaFlavorParamsOutput_1.KalturaFlavorParamsOutput, subType: 'KalturaFlavorParamsOutput' },
            mediaInfoId: { type: 'n' },
            currentOperationSet: { type: 'n' },
            currentOperationIndex: { type: 'n' },
            pluginData: { type: 'a', subTypeConstructor: KalturaKeyValue_1.KalturaKeyValue, subType: 'KalturaKeyValue' }
        });
        return result;
    };
    return KalturaConvartableJobData;
}(KalturaJobData_1.KalturaJobData));
exports.KalturaConvartableJobData = KalturaConvartableJobData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaConvartableJobData', KalturaConvartableJobData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQ29udmFydGFibGVKb2JEYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QscUZBQW9GO0FBQ3BGLHlFQUF3RTtBQUN4RSxxREFBb0Q7QUFDcEQsbURBQXNFO0FBaUJ0RTtJQUErQyxxREFBYztJQWN6RCxtQ0FBWSxJQUFxQztRQUFqRCxZQUVJLGtCQUFNLElBQUksQ0FBQyxTQUdkO1FBRkcsSUFBSSxPQUFPLEtBQUksQ0FBQyxZQUFZLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1FBQzNFLElBQUksT0FBTyxLQUFJLENBQUMsVUFBVSxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsVUFBVSxHQUFHLEVBQUUsQ0FBQzs7SUFDL0QsQ0FBQztJQUVTLGdEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDJCQUEyQixFQUFFO1lBQzlFLG9CQUFvQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNyQywwQkFBMEIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDM0Msb0JBQW9CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3JDLFlBQVksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsaUVBQStCLEVBQUUsT0FBTyxFQUFHLGlDQUFpQyxFQUFFO1lBQ2hJLGFBQWEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDOUIsb0JBQW9CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3JDLGtCQUFrQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxxREFBeUIsRUFBRSxPQUFPLEVBQUcsMkJBQTJCLEVBQUU7WUFDMUgsV0FBVyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM1QixtQkFBbUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDcEMscUJBQXFCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3RDLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsaUNBQWUsRUFBRSxPQUFPLEVBQUcsaUJBQWlCLEVBQUU7U0FDckYsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLGdDQUFDO0FBQUQsQ0EzQ0EsQUEyQ0MsQ0EzQzhDLCtCQUFjLEdBMkM1RDtBQTNDWSw4REFBeUI7QUE2Q3RDLDJDQUFtQixDQUFDLFlBQVksQ0FBQywyQkFBMkIsRUFBQyx5QkFBeUIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhQ29udmFydGFibGVKb2JEYXRhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYVNvdXJjZUZpbGVTeW5jRGVzY3JpcHRvciB9IGZyb20gJy4vS2FsdHVyYVNvdXJjZUZpbGVTeW5jRGVzY3JpcHRvcic7XG5pbXBvcnQgeyBLYWx0dXJhRmxhdm9yUGFyYW1zT3V0cHV0IH0gZnJvbSAnLi9LYWx0dXJhRmxhdm9yUGFyYW1zT3V0cHV0JztcbmltcG9ydCB7IEthbHR1cmFLZXlWYWx1ZSB9IGZyb20gJy4vS2FsdHVyYUtleVZhbHVlJztcbmltcG9ydCB7IEthbHR1cmFKb2JEYXRhLCBLYWx0dXJhSm9iRGF0YUFyZ3MgfSBmcm9tICcuL0thbHR1cmFKb2JEYXRhJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhQ29udmFydGFibGVKb2JEYXRhQXJncyAgZXh0ZW5kcyBLYWx0dXJhSm9iRGF0YUFyZ3Mge1xuICAgIHNyY0ZpbGVTeW5jTG9jYWxQYXRoPyA6IHN0cmluZztcblx0YWN0dWFsU3JjRmlsZVN5bmNMb2NhbFBhdGg/IDogc3RyaW5nO1xuXHRzcmNGaWxlU3luY1JlbW90ZVVybD8gOiBzdHJpbmc7XG5cdHNyY0ZpbGVTeW5jcz8gOiBLYWx0dXJhU291cmNlRmlsZVN5bmNEZXNjcmlwdG9yW107XG5cdGVuZ2luZVZlcnNpb24/IDogbnVtYmVyO1xuXHRmbGF2b3JQYXJhbXNPdXRwdXRJZD8gOiBudW1iZXI7XG5cdGZsYXZvclBhcmFtc091dHB1dD8gOiBLYWx0dXJhRmxhdm9yUGFyYW1zT3V0cHV0O1xuXHRtZWRpYUluZm9JZD8gOiBudW1iZXI7XG5cdGN1cnJlbnRPcGVyYXRpb25TZXQ/IDogbnVtYmVyO1xuXHRjdXJyZW50T3BlcmF0aW9uSW5kZXg/IDogbnVtYmVyO1xuXHRwbHVnaW5EYXRhPyA6IEthbHR1cmFLZXlWYWx1ZVtdO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhQ29udmFydGFibGVKb2JEYXRhIGV4dGVuZHMgS2FsdHVyYUpvYkRhdGEge1xuXG4gICAgc3JjRmlsZVN5bmNMb2NhbFBhdGggOiBzdHJpbmc7XG5cdGFjdHVhbFNyY0ZpbGVTeW5jTG9jYWxQYXRoIDogc3RyaW5nO1xuXHRzcmNGaWxlU3luY1JlbW90ZVVybCA6IHN0cmluZztcblx0c3JjRmlsZVN5bmNzIDogS2FsdHVyYVNvdXJjZUZpbGVTeW5jRGVzY3JpcHRvcltdO1xuXHRlbmdpbmVWZXJzaW9uIDogbnVtYmVyO1xuXHRmbGF2b3JQYXJhbXNPdXRwdXRJZCA6IG51bWJlcjtcblx0Zmxhdm9yUGFyYW1zT3V0cHV0IDogS2FsdHVyYUZsYXZvclBhcmFtc091dHB1dDtcblx0bWVkaWFJbmZvSWQgOiBudW1iZXI7XG5cdGN1cnJlbnRPcGVyYXRpb25TZXQgOiBudW1iZXI7XG5cdGN1cnJlbnRPcGVyYXRpb25JbmRleCA6IG51bWJlcjtcblx0cGx1Z2luRGF0YSA6IEthbHR1cmFLZXlWYWx1ZVtdO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhQ29udmFydGFibGVKb2JEYXRhQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuc3JjRmlsZVN5bmNzID09PSAndW5kZWZpbmVkJykgdGhpcy5zcmNGaWxlU3luY3MgPSBbXTtcblx0XHRpZiAodHlwZW9mIHRoaXMucGx1Z2luRGF0YSA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMucGx1Z2luRGF0YSA9IFtdO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFDb252YXJ0YWJsZUpvYkRhdGEnIH0sXG5cdFx0XHRcdHNyY0ZpbGVTeW5jTG9jYWxQYXRoIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGFjdHVhbFNyY0ZpbGVTeW5jTG9jYWxQYXRoIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHNyY0ZpbGVTeW5jUmVtb3RlVXJsIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHNyY0ZpbGVTeW5jcyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVNvdXJjZUZpbGVTeW5jRGVzY3JpcHRvciwgc3ViVHlwZSA6ICdLYWx0dXJhU291cmNlRmlsZVN5bmNEZXNjcmlwdG9yJyB9LFxuXHRcdFx0XHRlbmdpbmVWZXJzaW9uIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGZsYXZvclBhcmFtc091dHB1dElkIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGZsYXZvclBhcmFtc091dHB1dCA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUZsYXZvclBhcmFtc091dHB1dCwgc3ViVHlwZSA6ICdLYWx0dXJhRmxhdm9yUGFyYW1zT3V0cHV0JyB9LFxuXHRcdFx0XHRtZWRpYUluZm9JZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRjdXJyZW50T3BlcmF0aW9uU2V0IDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGN1cnJlbnRPcGVyYXRpb25JbmRleCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRwbHVnaW5EYXRhIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhS2V5VmFsdWUsIHN1YlR5cGUgOiAnS2FsdHVyYUtleVZhbHVlJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUNvbnZhcnRhYmxlSm9iRGF0YScsS2FsdHVyYUNvbnZhcnRhYmxlSm9iRGF0YSk7XG4iXX0=
