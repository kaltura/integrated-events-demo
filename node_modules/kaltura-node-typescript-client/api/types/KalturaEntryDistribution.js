"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaEntryDistribution = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaEntryDistributionStatus_1 = require("./KalturaEntryDistributionStatus");
var KalturaEntryDistributionSunStatus_1 = require("./KalturaEntryDistributionSunStatus");
var KalturaEntryDistributionFlag_1 = require("./KalturaEntryDistributionFlag");
var KalturaDistributionValidationError_1 = require("./KalturaDistributionValidationError");
var KalturaBatchJobErrorTypes_1 = require("./KalturaBatchJobErrorTypes");
var KalturaNullableBoolean_1 = require("./KalturaNullableBoolean");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaEntryDistribution = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaEntryDistribution, _super);
    function KalturaEntryDistribution(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.validationErrors === 'undefined')
            _this.validationErrors = [];
        return _this;
    }
    KalturaEntryDistribution.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaEntryDistribution' },
            id: { type: 'n', readOnly: true },
            createdAt: { type: 'd', readOnly: true },
            updatedAt: { type: 'd', readOnly: true },
            submittedAt: { type: 'd', readOnly: true },
            entryId: { type: 's' },
            partnerId: { type: 'n', readOnly: true },
            distributionProfileId: { type: 'n' },
            status: { type: 'en', readOnly: true, subTypeConstructor: KalturaEntryDistributionStatus_1.KalturaEntryDistributionStatus, subType: 'KalturaEntryDistributionStatus' },
            sunStatus: { type: 'en', readOnly: true, subTypeConstructor: KalturaEntryDistributionSunStatus_1.KalturaEntryDistributionSunStatus, subType: 'KalturaEntryDistributionSunStatus' },
            dirtyStatus: { type: 'en', readOnly: true, subTypeConstructor: KalturaEntryDistributionFlag_1.KalturaEntryDistributionFlag, subType: 'KalturaEntryDistributionFlag' },
            thumbAssetIds: { type: 's' },
            flavorAssetIds: { type: 's' },
            assetIds: { type: 's' },
            sunrise: { type: 'd' },
            sunset: { type: 'd' },
            remoteId: { type: 's', readOnly: true },
            plays: { type: 'n', readOnly: true },
            views: { type: 'n', readOnly: true },
            validationErrors: { type: 'a', subTypeConstructor: KalturaDistributionValidationError_1.KalturaDistributionValidationError, subType: 'KalturaDistributionValidationError' },
            errorType: { type: 'en', readOnly: true, subTypeConstructor: KalturaBatchJobErrorTypes_1.KalturaBatchJobErrorTypes, subType: 'KalturaBatchJobErrorTypes' },
            errorNumber: { type: 'n', readOnly: true },
            errorDescription: { type: 's', readOnly: true },
            hasSubmitResultsLog: { type: 'en', readOnly: true, subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            hasSubmitSentDataLog: { type: 'en', readOnly: true, subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            hasUpdateResultsLog: { type: 'en', readOnly: true, subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            hasUpdateSentDataLog: { type: 'en', readOnly: true, subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            hasDeleteResultsLog: { type: 'en', readOnly: true, subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            hasDeleteSentDataLog: { type: 'en', readOnly: true, subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' }
        });
        return result;
    };
    return KalturaEntryDistribution;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaEntryDistribution = KalturaEntryDistribution;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaEntryDistribution', KalturaEntryDistribution);

//# sourceMappingURL=data:application/json;charset=utf8;base64,
