"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaCrossKalturaDistributionJobProviderData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaConfigurableDistributionJobProviderData_1 = require("./KalturaConfigurableDistributionJobProviderData");
var KalturaCrossKalturaDistributionJobProviderData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaCrossKalturaDistributionJobProviderData, _super);
    function KalturaCrossKalturaDistributionJobProviderData(data) {
        return _super.call(this, data) || this;
    }
    KalturaCrossKalturaDistributionJobProviderData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaCrossKalturaDistributionJobProviderData' },
            distributedFlavorAssets: { type: 's' },
            distributedThumbAssets: { type: 's' },
            distributedMetadata: { type: 's' },
            distributedCaptionAssets: { type: 's' },
            distributedCuePoints: { type: 's' },
            distributedThumbCuePoints: { type: 's' },
            distributedTimedThumbAssets: { type: 's' }
        });
        return result;
    };
    return KalturaCrossKalturaDistributionJobProviderData;
}(KalturaConfigurableDistributionJobProviderData_1.KalturaConfigurableDistributionJobProviderData));
exports.KalturaCrossKalturaDistributionJobProviderData = KalturaCrossKalturaDistributionJobProviderData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaCrossKalturaDistributionJobProviderData', KalturaCrossKalturaDistributionJobProviderData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQ3Jvc3NLYWx0dXJhRGlzdHJpYnV0aW9uSm9iUHJvdmlkZXJEYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsbUhBQXNLO0FBYXRLO0lBQW9FLDBFQUE4QztJQVU5Ryx3REFBWSxJQUEwRDtlQUVsRSxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMscUVBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsZ0RBQWdELEVBQUU7WUFDbkcsdUJBQXVCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hDLHNCQUFzQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN2QyxtQkFBbUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDcEMsd0JBQXdCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3pDLG9CQUFvQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNyQyx5QkFBeUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDMUMsMkJBQTJCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ25DLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxxREFBQztBQUFELENBakNBLEFBaUNDLENBakNtRSwrRkFBOEMsR0FpQ2pIO0FBakNZLHdHQUE4QztBQW1DM0QsMkNBQW1CLENBQUMsWUFBWSxDQUFDLGdEQUFnRCxFQUFDLDhDQUE4QyxDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFDcm9zc0thbHR1cmFEaXN0cmlidXRpb25Kb2JQcm92aWRlckRhdGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhQ29uZmlndXJhYmxlRGlzdHJpYnV0aW9uSm9iUHJvdmlkZXJEYXRhLCBLYWx0dXJhQ29uZmlndXJhYmxlRGlzdHJpYnV0aW9uSm9iUHJvdmlkZXJEYXRhQXJncyB9IGZyb20gJy4vS2FsdHVyYUNvbmZpZ3VyYWJsZURpc3RyaWJ1dGlvbkpvYlByb3ZpZGVyRGF0YSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYUNyb3NzS2FsdHVyYURpc3RyaWJ1dGlvbkpvYlByb3ZpZGVyRGF0YUFyZ3MgIGV4dGVuZHMgS2FsdHVyYUNvbmZpZ3VyYWJsZURpc3RyaWJ1dGlvbkpvYlByb3ZpZGVyRGF0YUFyZ3Mge1xuICAgIGRpc3RyaWJ1dGVkRmxhdm9yQXNzZXRzPyA6IHN0cmluZztcblx0ZGlzdHJpYnV0ZWRUaHVtYkFzc2V0cz8gOiBzdHJpbmc7XG5cdGRpc3RyaWJ1dGVkTWV0YWRhdGE/IDogc3RyaW5nO1xuXHRkaXN0cmlidXRlZENhcHRpb25Bc3NldHM/IDogc3RyaW5nO1xuXHRkaXN0cmlidXRlZEN1ZVBvaW50cz8gOiBzdHJpbmc7XG5cdGRpc3RyaWJ1dGVkVGh1bWJDdWVQb2ludHM/IDogc3RyaW5nO1xuXHRkaXN0cmlidXRlZFRpbWVkVGh1bWJBc3NldHM/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhQ3Jvc3NLYWx0dXJhRGlzdHJpYnV0aW9uSm9iUHJvdmlkZXJEYXRhIGV4dGVuZHMgS2FsdHVyYUNvbmZpZ3VyYWJsZURpc3RyaWJ1dGlvbkpvYlByb3ZpZGVyRGF0YSB7XG5cbiAgICBkaXN0cmlidXRlZEZsYXZvckFzc2V0cyA6IHN0cmluZztcblx0ZGlzdHJpYnV0ZWRUaHVtYkFzc2V0cyA6IHN0cmluZztcblx0ZGlzdHJpYnV0ZWRNZXRhZGF0YSA6IHN0cmluZztcblx0ZGlzdHJpYnV0ZWRDYXB0aW9uQXNzZXRzIDogc3RyaW5nO1xuXHRkaXN0cmlidXRlZEN1ZVBvaW50cyA6IHN0cmluZztcblx0ZGlzdHJpYnV0ZWRUaHVtYkN1ZVBvaW50cyA6IHN0cmluZztcblx0ZGlzdHJpYnV0ZWRUaW1lZFRodW1iQXNzZXRzIDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhQ3Jvc3NLYWx0dXJhRGlzdHJpYnV0aW9uSm9iUHJvdmlkZXJEYXRhQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFDcm9zc0thbHR1cmFEaXN0cmlidXRpb25Kb2JQcm92aWRlckRhdGEnIH0sXG5cdFx0XHRcdGRpc3RyaWJ1dGVkRmxhdm9yQXNzZXRzIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGRpc3RyaWJ1dGVkVGh1bWJBc3NldHMgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0ZGlzdHJpYnV0ZWRNZXRhZGF0YSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRkaXN0cmlidXRlZENhcHRpb25Bc3NldHMgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0ZGlzdHJpYnV0ZWRDdWVQb2ludHMgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0ZGlzdHJpYnV0ZWRUaHVtYkN1ZVBvaW50cyA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRkaXN0cmlidXRlZFRpbWVkVGh1bWJBc3NldHMgOiB7IHR5cGUgOiAncycgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFDcm9zc0thbHR1cmFEaXN0cmlidXRpb25Kb2JQcm92aWRlckRhdGEnLEthbHR1cmFDcm9zc0thbHR1cmFEaXN0cmlidXRpb25Kb2JQcm92aWRlckRhdGEpO1xuIl19
