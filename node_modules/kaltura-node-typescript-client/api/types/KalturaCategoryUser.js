"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaCategoryUser = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaCategoryUserPermissionLevel_1 = require("./KalturaCategoryUserPermissionLevel");
var KalturaCategoryUserStatus_1 = require("./KalturaCategoryUserStatus");
var KalturaUpdateMethodType_1 = require("./KalturaUpdateMethodType");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaCategoryUser = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaCategoryUser, _super);
    function KalturaCategoryUser(data) {
        return _super.call(this, data) || this;
    }
    KalturaCategoryUser.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaCategoryUser' },
            categoryId: { type: 'n' },
            userId: { type: 's' },
            partnerId: { type: 'n', readOnly: true },
            permissionLevel: { type: 'en', subTypeConstructor: KalturaCategoryUserPermissionLevel_1.KalturaCategoryUserPermissionLevel, subType: 'KalturaCategoryUserPermissionLevel' },
            status: { type: 'en', readOnly: true, subTypeConstructor: KalturaCategoryUserStatus_1.KalturaCategoryUserStatus, subType: 'KalturaCategoryUserStatus' },
            createdAt: { type: 'd', readOnly: true },
            updatedAt: { type: 'd', readOnly: true },
            updateMethod: { type: 'en', subTypeConstructor: KalturaUpdateMethodType_1.KalturaUpdateMethodType, subType: 'KalturaUpdateMethodType' },
            categoryFullIds: { type: 's', readOnly: true },
            permissionNames: { type: 's' }
        });
        return result;
    };
    return KalturaCategoryUser;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaCategoryUser = KalturaCategoryUser;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaCategoryUser', KalturaCategoryUser);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQ2F0ZWdvcnlVc2VyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsMkZBQTBGO0FBQzFGLHlFQUF3RTtBQUN4RSxxRUFBb0U7QUFDcEUsOERBQWtGO0FBV2xGO0lBQXlDLCtDQUFpQjtJQWF0RCw2QkFBWSxJQUErQjtlQUV2QyxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMsMENBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcscUJBQXFCLEVBQUU7WUFDeEUsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMzQixNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3ZCLFNBQVMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUMzQyxlQUFlLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLHVFQUFrQyxFQUFFLE9BQU8sRUFBRyxvQ0FBb0MsRUFBRTtZQUMxSSxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcscURBQXlCLEVBQUUsT0FBTyxFQUFHLDJCQUEyQixFQUFFO1lBQ2hJLFNBQVMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUMzQyxTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDM0MsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyxpREFBdUIsRUFBRSxPQUFPLEVBQUcseUJBQXlCLEVBQUU7WUFDakgsZUFBZSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQ2pELGVBQWUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDdkIsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDBCQUFDO0FBQUQsQ0F2Q0EsQUF1Q0MsQ0F2Q3dDLHVDQUFpQixHQXVDekQ7QUF2Q1ksa0RBQW1CO0FBeUNoQywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMscUJBQXFCLEVBQUMsbUJBQW1CLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYUNhdGVnb3J5VXNlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFDYXRlZ29yeVVzZXJQZXJtaXNzaW9uTGV2ZWwgfSBmcm9tICcuL0thbHR1cmFDYXRlZ29yeVVzZXJQZXJtaXNzaW9uTGV2ZWwnO1xuaW1wb3J0IHsgS2FsdHVyYUNhdGVnb3J5VXNlclN0YXR1cyB9IGZyb20gJy4vS2FsdHVyYUNhdGVnb3J5VXNlclN0YXR1cyc7XG5pbXBvcnQgeyBLYWx0dXJhVXBkYXRlTWV0aG9kVHlwZSB9IGZyb20gJy4vS2FsdHVyYVVwZGF0ZU1ldGhvZFR5cGUnO1xuaW1wb3J0IHsgS2FsdHVyYU9iamVjdEJhc2UsIEthbHR1cmFPYmplY3RCYXNlQXJncyB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFDYXRlZ29yeVVzZXJBcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlQXJncyB7XG4gICAgY2F0ZWdvcnlJZD8gOiBudW1iZXI7XG5cdHVzZXJJZD8gOiBzdHJpbmc7XG5cdHBlcm1pc3Npb25MZXZlbD8gOiBLYWx0dXJhQ2F0ZWdvcnlVc2VyUGVybWlzc2lvbkxldmVsO1xuXHR1cGRhdGVNZXRob2Q/IDogS2FsdHVyYVVwZGF0ZU1ldGhvZFR5cGU7XG5cdHBlcm1pc3Npb25OYW1lcz8gOiBzdHJpbmc7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFDYXRlZ29yeVVzZXIgZXh0ZW5kcyBLYWx0dXJhT2JqZWN0QmFzZSB7XG5cbiAgICBjYXRlZ29yeUlkIDogbnVtYmVyO1xuXHR1c2VySWQgOiBzdHJpbmc7XG5cdHJlYWRvbmx5IHBhcnRuZXJJZCA6IG51bWJlcjtcblx0cGVybWlzc2lvbkxldmVsIDogS2FsdHVyYUNhdGVnb3J5VXNlclBlcm1pc3Npb25MZXZlbDtcblx0cmVhZG9ubHkgc3RhdHVzIDogS2FsdHVyYUNhdGVnb3J5VXNlclN0YXR1cztcblx0cmVhZG9ubHkgY3JlYXRlZEF0IDogRGF0ZTtcblx0cmVhZG9ubHkgdXBkYXRlZEF0IDogRGF0ZTtcblx0dXBkYXRlTWV0aG9kIDogS2FsdHVyYVVwZGF0ZU1ldGhvZFR5cGU7XG5cdHJlYWRvbmx5IGNhdGVnb3J5RnVsbElkcyA6IHN0cmluZztcblx0cGVybWlzc2lvbk5hbWVzIDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhQ2F0ZWdvcnlVc2VyQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFDYXRlZ29yeVVzZXInIH0sXG5cdFx0XHRcdGNhdGVnb3J5SWQgOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0dXNlcklkIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHBhcnRuZXJJZCA6IHsgdHlwZSA6ICduJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdHBlcm1pc3Npb25MZXZlbCA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFDYXRlZ29yeVVzZXJQZXJtaXNzaW9uTGV2ZWwsIHN1YlR5cGUgOiAnS2FsdHVyYUNhdGVnb3J5VXNlclBlcm1pc3Npb25MZXZlbCcgfSxcblx0XHRcdFx0c3RhdHVzIDogeyB0eXBlIDogJ2VuJywgcmVhZE9ubHkgOiB0cnVlLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQ2F0ZWdvcnlVc2VyU3RhdHVzLCBzdWJUeXBlIDogJ0thbHR1cmFDYXRlZ29yeVVzZXJTdGF0dXMnIH0sXG5cdFx0XHRcdGNyZWF0ZWRBdCA6IHsgdHlwZSA6ICdkJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdHVwZGF0ZWRBdCA6IHsgdHlwZSA6ICdkJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdHVwZGF0ZU1ldGhvZCA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFVcGRhdGVNZXRob2RUeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFVcGRhdGVNZXRob2RUeXBlJyB9LFxuXHRcdFx0XHRjYXRlZ29yeUZ1bGxJZHMgOiB7IHR5cGUgOiAncycsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRwZXJtaXNzaW9uTmFtZXMgOiB7IHR5cGUgOiAncycgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFDYXRlZ29yeVVzZXInLEthbHR1cmFDYXRlZ29yeVVzZXIpO1xuIl19
