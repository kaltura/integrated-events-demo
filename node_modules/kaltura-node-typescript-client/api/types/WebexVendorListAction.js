"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebexVendorListAction = void 0;
var tslib_1 = require("tslib");
var KalturaWebexAPIIntegrationSettingResponse_1 = require("./KalturaWebexAPIIntegrationSettingResponse");
var KalturaFilterPager_1 = require("./KalturaFilterPager");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'webexVendor' action 'list'.
 *
 * Usage: List KalturaWebexAPIIntegrationSetting objects
 *
 * Server response type:         KalturaWebexAPIIntegrationSettingResponse
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var WebexVendorListAction = /** @class */ (function (_super) {
    tslib_1.__extends(WebexVendorListAction, _super);
    function WebexVendorListAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaWebexAPIIntegrationSettingResponse', responseConstructor: KalturaWebexAPIIntegrationSettingResponse_1.KalturaWebexAPIIntegrationSettingResponse }) || this;
    }
    WebexVendorListAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'webexapidropfolder_webexvendor' },
            action: { type: 'c', default: 'list' },
            pager: { type: 'o', subTypeConstructor: KalturaFilterPager_1.KalturaFilterPager, subType: 'KalturaFilterPager' }
        });
        return result;
    };
    return WebexVendorListAction;
}(kaltura_request_1.KalturaRequest));
exports.WebexVendorListAction = WebexVendorListAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9XZWJleFZlbmRvckxpc3RBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLHlHQUF3RztBQUV4RywyREFBMEQ7QUFDMUQsc0RBQXdFO0FBTXhFOzs7Ozs7Ozs7R0FTRztBQUNIO0lBQTJDLGlEQUF5RDtJQUloRywrQkFBWSxJQUFpQztlQUV6QyxrQkFBTSxJQUFJLEVBQUUsRUFBQyxZQUFZLEVBQUcsR0FBRyxFQUFFLGVBQWUsRUFBRywyQ0FBMkMsRUFBRSxtQkFBbUIsRUFBRyxxRkFBeUMsRUFBRyxDQUFDO0lBQ3ZLLENBQUM7SUFFUyw0Q0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxnQ0FBZ0MsRUFBRTtZQUNoRixNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxNQUFNLEVBQUU7WUFDekMsS0FBSyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyx1Q0FBa0IsRUFBRSxPQUFPLEVBQUcsb0JBQW9CLEVBQUU7U0FDdEYsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDRCQUFDO0FBQUQsQ0F0QkEsQUFzQkMsQ0F0QjBDLGdDQUFjLEdBc0J4RDtBQXRCWSxzREFBcUIiLCJmaWxlIjoiYXBpL3R5cGVzL1dlYmV4VmVuZG9yTGlzdEFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhV2ViZXhBUElJbnRlZ3JhdGlvblNldHRpbmdSZXNwb25zZSB9IGZyb20gJy4vS2FsdHVyYVdlYmV4QVBJSW50ZWdyYXRpb25TZXR0aW5nUmVzcG9uc2UnO1xuXG5pbXBvcnQgeyBLYWx0dXJhRmlsdGVyUGFnZXIgfSBmcm9tICcuL0thbHR1cmFGaWx0ZXJQYWdlcic7XG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBXZWJleFZlbmRvckxpc3RBY3Rpb25BcmdzICBleHRlbmRzIEthbHR1cmFSZXF1ZXN0QXJncyB7XG4gICAgcGFnZXI/IDogS2FsdHVyYUZpbHRlclBhZ2VyO1xufVxuXG4vKipcbiAqIEJ1aWxkIHJlcXVlc3QgcGF5bG9hZCBmb3Igc2VydmljZSAnd2ViZXhWZW5kb3InIGFjdGlvbiAnbGlzdCcuXG4gKlxuICogVXNhZ2U6IExpc3QgS2FsdHVyYVdlYmV4QVBJSW50ZWdyYXRpb25TZXR0aW5nIG9iamVjdHNcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhV2ViZXhBUElJbnRlZ3JhdGlvblNldHRpbmdSZXNwb25zZVxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgV2ViZXhWZW5kb3JMaXN0QWN0aW9uIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3Q8S2FsdHVyYVdlYmV4QVBJSW50ZWdyYXRpb25TZXR0aW5nUmVzcG9uc2U+IHtcblxuICAgIHBhZ2VyIDogS2FsdHVyYUZpbHRlclBhZ2VyO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBXZWJleFZlbmRvckxpc3RBY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdvJywgcmVzcG9uc2VTdWJUeXBlIDogJ0thbHR1cmFXZWJleEFQSUludGVncmF0aW9uU2V0dGluZ1Jlc3BvbnNlJywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IEthbHR1cmFXZWJleEFQSUludGVncmF0aW9uU2V0dGluZ1Jlc3BvbnNlICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICd3ZWJleGFwaWRyb3Bmb2xkZXJfd2ViZXh2ZW5kb3InIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdsaXN0JyB9LFxuXHRcdFx0XHRwYWdlciA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUZpbHRlclBhZ2VyLCBzdWJUeXBlIDogJ0thbHR1cmFGaWx0ZXJQYWdlcicgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuIl19
