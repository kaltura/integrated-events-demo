"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserDisableLoginAction = void 0;
var tslib_1 = require("tslib");
var KalturaUser_1 = require("./KalturaUser");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'user' action 'disableLogin'.
 *
 * Usage: Disables a user's ability to log into a partner account using an email address and a password.
 * You may use either a userId or a loginId parameter for this action
 *
 * Server response type:         KalturaUser
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var UserDisableLoginAction = /** @class */ (function (_super) {
    tslib_1.__extends(UserDisableLoginAction, _super);
    function UserDisableLoginAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaUser', responseConstructor: KalturaUser_1.KalturaUser }) || this;
    }
    UserDisableLoginAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'user' },
            action: { type: 'c', default: 'disableLogin' },
            userId: { type: 's' },
            loginId: { type: 's' }
        });
        return result;
    };
    return UserDisableLoginAction;
}(kaltura_request_1.KalturaRequest));
exports.UserDisableLoginAction = UserDisableLoginAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9Vc2VyRGlzYWJsZUxvZ2luQWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSw2Q0FBNEM7QUFFNUMsc0RBQXdFO0FBT3hFOzs7Ozs7Ozs7O0dBVUc7QUFDSDtJQUE0QyxrREFBMkI7SUFLbkUsZ0NBQVksSUFBa0M7ZUFFMUMsa0JBQU0sSUFBSSxFQUFFLEVBQUMsWUFBWSxFQUFHLEdBQUcsRUFBRSxlQUFlLEVBQUcsYUFBYSxFQUFFLG1CQUFtQixFQUFHLHlCQUFXLEVBQUcsQ0FBQztJQUMzRyxDQUFDO0lBRVMsNkNBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsTUFBTSxFQUFFO1lBQ3RELE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLGNBQWMsRUFBRTtZQUNqRCxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3ZCLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDZixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsNkJBQUM7QUFBRCxDQXhCQSxBQXdCQyxDQXhCMkMsZ0NBQWMsR0F3QnpEO0FBeEJZLHdEQUFzQiIsImZpbGUiOiJhcGkvdHlwZXMvVXNlckRpc2FibGVMb2dpbkFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVXNlciB9IGZyb20gJy4vS2FsdHVyYVVzZXInO1xuXG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBVc2VyRGlzYWJsZUxvZ2luQWN0aW9uQXJncyAgZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdEFyZ3Mge1xuICAgIHVzZXJJZD8gOiBzdHJpbmc7XG5cdGxvZ2luSWQ/IDogc3RyaW5nO1xufVxuXG4vKipcbiAqIEJ1aWxkIHJlcXVlc3QgcGF5bG9hZCBmb3Igc2VydmljZSAndXNlcicgYWN0aW9uICdkaXNhYmxlTG9naW4nLlxuICpcbiAqIFVzYWdlOiBEaXNhYmxlcyBhIHVzZXIncyBhYmlsaXR5IHRvIGxvZyBpbnRvIGEgcGFydG5lciBhY2NvdW50IHVzaW5nIGFuIGVtYWlsIGFkZHJlc3MgYW5kIGEgcGFzc3dvcmQuXG4gKiBZb3UgbWF5IHVzZSBlaXRoZXIgYSB1c2VySWQgb3IgYSBsb2dpbklkIHBhcmFtZXRlciBmb3IgdGhpcyBhY3Rpb25cbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhVXNlclxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgVXNlckRpc2FibGVMb2dpbkFjdGlvbiBleHRlbmRzIEthbHR1cmFSZXF1ZXN0PEthbHR1cmFVc2VyPiB7XG5cbiAgICB1c2VySWQgOiBzdHJpbmc7XG5cdGxvZ2luSWQgOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IFVzZXJEaXNhYmxlTG9naW5BY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdvJywgcmVzcG9uc2VTdWJUeXBlIDogJ0thbHR1cmFVc2VyJywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IEthbHR1cmFVc2VyICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICd1c2VyJyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnZGlzYWJsZUxvZ2luJyB9LFxuXHRcdFx0XHR1c2VySWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0bG9naW5JZCA6IHsgdHlwZSA6ICdzJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG4iXX0=
