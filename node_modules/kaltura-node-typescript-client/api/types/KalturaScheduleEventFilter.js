"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaScheduleEventFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaScheduleEventBaseFilter_1 = require("./KalturaScheduleEventBaseFilter");
var KalturaScheduleEventFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaScheduleEventFilter, _super);
    function KalturaScheduleEventFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaScheduleEventFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaScheduleEventFilter' },
            resourceIdsLike: { type: 's' },
            resourceIdsMultiLikeOr: { type: 's' },
            resourceIdsMultiLikeAnd: { type: 's' },
            parentResourceIdsLike: { type: 's' },
            parentResourceIdsMultiLikeOr: { type: 's' },
            parentResourceIdsMultiLikeAnd: { type: 's' },
            templateEntryCategoriesIdsMultiLikeAnd: { type: 's' },
            templateEntryCategoriesIdsMultiLikeOr: { type: 's' },
            resourceSystemNamesMultiLikeOr: { type: 's' },
            templateEntryCategoriesIdsLike: { type: 's' },
            resourceSystemNamesMultiLikeAnd: { type: 's' },
            resourceSystemNamesLike: { type: 's' },
            resourceIdEqual: { type: 's' }
        });
        return result;
    };
    return KalturaScheduleEventFilter;
}(KalturaScheduleEventBaseFilter_1.KalturaScheduleEventBaseFilter));
exports.KalturaScheduleEventFilter = KalturaScheduleEventFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaScheduleEventFilter', KalturaScheduleEventFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhU2NoZWR1bGVFdmVudEZpbHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELG1GQUFzSDtBQW1CdEg7SUFBZ0Qsc0RBQThCO0lBZ0IxRSxvQ0FBWSxJQUFzQztlQUU5QyxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMsaURBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsNEJBQTRCLEVBQUU7WUFDL0UsZUFBZSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNoQyxzQkFBc0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdkMsdUJBQXVCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hDLHFCQUFxQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN0Qyw0QkFBNEIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDN0MsNkJBQTZCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzlDLHNDQUFzQyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN2RCxxQ0FBcUMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdEQsOEJBQThCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQy9DLDhCQUE4QixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMvQywrQkFBK0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDaEQsdUJBQXVCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hDLGVBQWUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDdkIsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLGlDQUFDO0FBQUQsQ0E3Q0EsQUE2Q0MsQ0E3QytDLCtEQUE4QixHQTZDN0U7QUE3Q1ksZ0VBQTBCO0FBK0N2QywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsNEJBQTRCLEVBQUMsMEJBQTBCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYVNjaGVkdWxlRXZlbnRGaWx0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhU2NoZWR1bGVFdmVudEJhc2VGaWx0ZXIsIEthbHR1cmFTY2hlZHVsZUV2ZW50QmFzZUZpbHRlckFyZ3MgfSBmcm9tICcuL0thbHR1cmFTY2hlZHVsZUV2ZW50QmFzZUZpbHRlcic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYVNjaGVkdWxlRXZlbnRGaWx0ZXJBcmdzICBleHRlbmRzIEthbHR1cmFTY2hlZHVsZUV2ZW50QmFzZUZpbHRlckFyZ3Mge1xuICAgIHJlc291cmNlSWRzTGlrZT8gOiBzdHJpbmc7XG5cdHJlc291cmNlSWRzTXVsdGlMaWtlT3I/IDogc3RyaW5nO1xuXHRyZXNvdXJjZUlkc011bHRpTGlrZUFuZD8gOiBzdHJpbmc7XG5cdHBhcmVudFJlc291cmNlSWRzTGlrZT8gOiBzdHJpbmc7XG5cdHBhcmVudFJlc291cmNlSWRzTXVsdGlMaWtlT3I/IDogc3RyaW5nO1xuXHRwYXJlbnRSZXNvdXJjZUlkc011bHRpTGlrZUFuZD8gOiBzdHJpbmc7XG5cdHRlbXBsYXRlRW50cnlDYXRlZ29yaWVzSWRzTXVsdGlMaWtlQW5kPyA6IHN0cmluZztcblx0dGVtcGxhdGVFbnRyeUNhdGVnb3JpZXNJZHNNdWx0aUxpa2VPcj8gOiBzdHJpbmc7XG5cdHJlc291cmNlU3lzdGVtTmFtZXNNdWx0aUxpa2VPcj8gOiBzdHJpbmc7XG5cdHRlbXBsYXRlRW50cnlDYXRlZ29yaWVzSWRzTGlrZT8gOiBzdHJpbmc7XG5cdHJlc291cmNlU3lzdGVtTmFtZXNNdWx0aUxpa2VBbmQ/IDogc3RyaW5nO1xuXHRyZXNvdXJjZVN5c3RlbU5hbWVzTGlrZT8gOiBzdHJpbmc7XG5cdHJlc291cmNlSWRFcXVhbD8gOiBzdHJpbmc7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFTY2hlZHVsZUV2ZW50RmlsdGVyIGV4dGVuZHMgS2FsdHVyYVNjaGVkdWxlRXZlbnRCYXNlRmlsdGVyIHtcblxuICAgIHJlc291cmNlSWRzTGlrZSA6IHN0cmluZztcblx0cmVzb3VyY2VJZHNNdWx0aUxpa2VPciA6IHN0cmluZztcblx0cmVzb3VyY2VJZHNNdWx0aUxpa2VBbmQgOiBzdHJpbmc7XG5cdHBhcmVudFJlc291cmNlSWRzTGlrZSA6IHN0cmluZztcblx0cGFyZW50UmVzb3VyY2VJZHNNdWx0aUxpa2VPciA6IHN0cmluZztcblx0cGFyZW50UmVzb3VyY2VJZHNNdWx0aUxpa2VBbmQgOiBzdHJpbmc7XG5cdHRlbXBsYXRlRW50cnlDYXRlZ29yaWVzSWRzTXVsdGlMaWtlQW5kIDogc3RyaW5nO1xuXHR0ZW1wbGF0ZUVudHJ5Q2F0ZWdvcmllc0lkc011bHRpTGlrZU9yIDogc3RyaW5nO1xuXHRyZXNvdXJjZVN5c3RlbU5hbWVzTXVsdGlMaWtlT3IgOiBzdHJpbmc7XG5cdHRlbXBsYXRlRW50cnlDYXRlZ29yaWVzSWRzTGlrZSA6IHN0cmluZztcblx0cmVzb3VyY2VTeXN0ZW1OYW1lc011bHRpTGlrZUFuZCA6IHN0cmluZztcblx0cmVzb3VyY2VTeXN0ZW1OYW1lc0xpa2UgOiBzdHJpbmc7XG5cdHJlc291cmNlSWRFcXVhbCA6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYVNjaGVkdWxlRXZlbnRGaWx0ZXJBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYVNjaGVkdWxlRXZlbnRGaWx0ZXInIH0sXG5cdFx0XHRcdHJlc291cmNlSWRzTGlrZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRyZXNvdXJjZUlkc011bHRpTGlrZU9yIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHJlc291cmNlSWRzTXVsdGlMaWtlQW5kIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHBhcmVudFJlc291cmNlSWRzTGlrZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRwYXJlbnRSZXNvdXJjZUlkc011bHRpTGlrZU9yIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHBhcmVudFJlc291cmNlSWRzTXVsdGlMaWtlQW5kIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHRlbXBsYXRlRW50cnlDYXRlZ29yaWVzSWRzTXVsdGlMaWtlQW5kIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHRlbXBsYXRlRW50cnlDYXRlZ29yaWVzSWRzTXVsdGlMaWtlT3IgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0cmVzb3VyY2VTeXN0ZW1OYW1lc011bHRpTGlrZU9yIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHRlbXBsYXRlRW50cnlDYXRlZ29yaWVzSWRzTGlrZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRyZXNvdXJjZVN5c3RlbU5hbWVzTXVsdGlMaWtlQW5kIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHJlc291cmNlU3lzdGVtTmFtZXNMaWtlIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHJlc291cmNlSWRFcXVhbCA6IHsgdHlwZSA6ICdzJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYVNjaGVkdWxlRXZlbnRGaWx0ZXInLEthbHR1cmFTY2hlZHVsZUV2ZW50RmlsdGVyKTtcbiJdfQ==
