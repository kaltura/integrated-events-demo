"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserResetPasswordAction = void 0;
var tslib_1 = require("tslib");
var KalturaResetPassLinkType_1 = require("./KalturaResetPassLinkType");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'user' action 'resetPassword'.
 *
 * Usage: Reset user's password and send the user an email to generate a new one
 *
 * Server response type:         void
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var UserResetPasswordAction = /** @class */ (function (_super) {
    tslib_1.__extends(UserResetPasswordAction, _super);
    function UserResetPasswordAction(data) {
        return _super.call(this, data, { responseType: 'v', responseSubType: '', responseConstructor: null }) || this;
    }
    UserResetPasswordAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'user' },
            action: { type: 'c', default: 'resetPassword' },
            email: { type: 's' },
            linkType: { type: 'es', subTypeConstructor: KalturaResetPassLinkType_1.KalturaResetPassLinkType, subType: 'KalturaResetPassLinkType' }
        });
        return result;
    };
    return UserResetPasswordAction;
}(kaltura_request_1.KalturaRequest));
exports.UserResetPasswordAction = UserResetPasswordAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9Vc2VyUmVzZXRQYXNzd29yZEFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBSUEsdUVBQXNFO0FBQ3RFLHNEQUF3RTtBQU94RTs7Ozs7Ozs7O0dBU0c7QUFDSDtJQUE2QyxtREFBb0I7SUFLN0QsaUNBQVksSUFBa0M7ZUFFMUMsa0JBQU0sSUFBSSxFQUFFLEVBQUMsWUFBWSxFQUFHLEdBQUcsRUFBRSxlQUFlLEVBQUcsRUFBRSxFQUFFLG1CQUFtQixFQUFHLElBQUksRUFBRSxDQUFDO0lBQ3hGLENBQUM7SUFFUyw4Q0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxNQUFNLEVBQUU7WUFDdEQsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsZUFBZSxFQUFFO1lBQ2xELEtBQUssRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdEIsUUFBUSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyxtREFBd0IsRUFBRSxPQUFPLEVBQUcsMEJBQTBCLEVBQUU7U0FDdEcsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDhCQUFDO0FBQUQsQ0F4QkEsQUF3QkMsQ0F4QjRDLGdDQUFjLEdBd0IxRDtBQXhCWSwwREFBdUIiLCJmaWxlIjoiYXBpL3R5cGVzL1VzZXJSZXNldFBhc3N3b3JkQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcblxuXG5pbXBvcnQgeyBLYWx0dXJhUmVzZXRQYXNzTGlua1R5cGUgfSBmcm9tICcuL0thbHR1cmFSZXNldFBhc3NMaW5rVHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBVc2VyUmVzZXRQYXNzd29yZEFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBlbWFpbCA6IHN0cmluZztcblx0bGlua1R5cGU/IDogS2FsdHVyYVJlc2V0UGFzc0xpbmtUeXBlO1xufVxuXG4vKipcbiAqIEJ1aWxkIHJlcXVlc3QgcGF5bG9hZCBmb3Igc2VydmljZSAndXNlcicgYWN0aW9uICdyZXNldFBhc3N3b3JkJy5cbiAqXG4gKiBVc2FnZTogUmVzZXQgdXNlcidzIHBhc3N3b3JkIGFuZCBzZW5kIHRoZSB1c2VyIGFuIGVtYWlsIHRvIGdlbmVyYXRlIGEgbmV3IG9uZVxuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIHZvaWRcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIFVzZXJSZXNldFBhc3N3b3JkQWN0aW9uIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3Q8dm9pZD4ge1xuXG4gICAgZW1haWwgOiBzdHJpbmc7XG5cdGxpbmtUeXBlIDogS2FsdHVyYVJlc2V0UGFzc0xpbmtUeXBlO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YSA6IFVzZXJSZXNldFBhc3N3b3JkQWN0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEsIHtyZXNwb25zZVR5cGUgOiAndicsIHJlc3BvbnNlU3ViVHlwZSA6ICcnLCByZXNwb25zZUNvbnN0cnVjdG9yIDogbnVsbCB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICd1c2VyJyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAncmVzZXRQYXNzd29yZCcgfSxcblx0XHRcdFx0ZW1haWwgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0bGlua1R5cGUgOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhUmVzZXRQYXNzTGlua1R5cGUsIHN1YlR5cGUgOiAnS2FsdHVyYVJlc2V0UGFzc0xpbmtUeXBlJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG4iXX0=
