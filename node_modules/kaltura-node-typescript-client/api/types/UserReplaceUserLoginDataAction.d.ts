import { KalturaObjectMetadata } from '../kaltura-object-base';
import { KalturaUser } from './KalturaUser';
import { KalturaRequest, KalturaRequestArgs } from '../kaltura-request';
export interface UserReplaceUserLoginDataActionArgs extends KalturaRequestArgs {
    userId: string;
    newLoginId: string;
    existingLoginId?: string;
}
/**
 * Build request payload for service 'user' action 'replaceUserLoginData'.
 *
 * Usage: Replace a user's existing login data to a new or an existing login data
 * to only be used when admin impersonates a partner
 *
 * Server response type:         KalturaUser
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
export declare class UserReplaceUserLoginDataAction extends KalturaRequest<KalturaUser> {
    userId: string;
    newLoginId: string;
    existingLoginId: string;
    constructor(data: UserReplaceUserLoginDataActionArgs);
    protected _getMetadata(): KalturaObjectMetadata;
}
