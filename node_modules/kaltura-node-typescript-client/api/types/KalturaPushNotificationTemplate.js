"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaPushNotificationTemplate = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaPushEventNotificationParameter_1 = require("./KalturaPushEventNotificationParameter");
var KalturaResponseType_1 = require("./KalturaResponseType");
var KalturaEventNotificationTemplate_1 = require("./KalturaEventNotificationTemplate");
var KalturaPushNotificationTemplate = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaPushNotificationTemplate, _super);
    function KalturaPushNotificationTemplate(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.queueNameParameters === 'undefined')
            _this.queueNameParameters = [];
        if (typeof _this.queueKeyParameters === 'undefined')
            _this.queueKeyParameters = [];
        return _this;
    }
    KalturaPushNotificationTemplate.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaPushNotificationTemplate' },
            queueNameParameters: { type: 'a', subTypeConstructor: KalturaPushEventNotificationParameter_1.KalturaPushEventNotificationParameter, subType: 'KalturaPushEventNotificationParameter' },
            queueKeyParameters: { type: 'a', subTypeConstructor: KalturaPushEventNotificationParameter_1.KalturaPushEventNotificationParameter, subType: 'KalturaPushEventNotificationParameter' },
            apiObjectType: { type: 's' },
            objectFormat: { type: 'en', subTypeConstructor: KalturaResponseType_1.KalturaResponseType, subType: 'KalturaResponseType' },
            responseProfileId: { type: 'n' }
        });
        return result;
    };
    return KalturaPushNotificationTemplate;
}(KalturaEventNotificationTemplate_1.KalturaEventNotificationTemplate));
exports.KalturaPushNotificationTemplate = KalturaPushNotificationTemplate;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaPushNotificationTemplate', KalturaPushNotificationTemplate);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhUHVzaE5vdGlmaWNhdGlvblRlbXBsYXRlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsaUdBQWdHO0FBQ2hHLDZEQUE0RDtBQUM1RCx1RkFBNEg7QUFXNUg7SUFBcUQsMkRBQWdDO0lBUWpGLHlDQUFZLElBQTJDO1FBQXZELFlBRUksa0JBQU0sSUFBSSxDQUFDLFNBR2Q7UUFGRyxJQUFJLE9BQU8sS0FBSSxDQUFDLG1CQUFtQixLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsbUJBQW1CLEdBQUcsRUFBRSxDQUFDO1FBQ3pGLElBQUksT0FBTyxLQUFJLENBQUMsa0JBQWtCLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxrQkFBa0IsR0FBRyxFQUFFLENBQUM7O0lBQy9FLENBQUM7SUFFUyxzREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxpQ0FBaUMsRUFBRTtZQUNwRixtQkFBbUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsNkVBQXFDLEVBQUUsT0FBTyxFQUFHLHVDQUF1QyxFQUFFO1lBQ25KLGtCQUFrQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyw2RUFBcUMsRUFBRSxPQUFPLEVBQUcsdUNBQXVDLEVBQUU7WUFDbEosYUFBYSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM5QixZQUFZLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLHlDQUFtQixFQUFFLE9BQU8sRUFBRyxxQkFBcUIsRUFBRTtZQUN6RyxpQkFBaUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDekIsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHNDQUFDO0FBQUQsQ0EvQkEsQUErQkMsQ0EvQm9ELG1FQUFnQyxHQStCcEY7QUEvQlksMEVBQStCO0FBaUM1QywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsaUNBQWlDLEVBQUMsK0JBQStCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYVB1c2hOb3RpZmljYXRpb25UZW1wbGF0ZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFQdXNoRXZlbnROb3RpZmljYXRpb25QYXJhbWV0ZXIgfSBmcm9tICcuL0thbHR1cmFQdXNoRXZlbnROb3RpZmljYXRpb25QYXJhbWV0ZXInO1xuaW1wb3J0IHsgS2FsdHVyYVJlc3BvbnNlVHlwZSB9IGZyb20gJy4vS2FsdHVyYVJlc3BvbnNlVHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhRXZlbnROb3RpZmljYXRpb25UZW1wbGF0ZSwgS2FsdHVyYUV2ZW50Tm90aWZpY2F0aW9uVGVtcGxhdGVBcmdzIH0gZnJvbSAnLi9LYWx0dXJhRXZlbnROb3RpZmljYXRpb25UZW1wbGF0ZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYVB1c2hOb3RpZmljYXRpb25UZW1wbGF0ZUFyZ3MgIGV4dGVuZHMgS2FsdHVyYUV2ZW50Tm90aWZpY2F0aW9uVGVtcGxhdGVBcmdzIHtcbiAgICBxdWV1ZU5hbWVQYXJhbWV0ZXJzPyA6IEthbHR1cmFQdXNoRXZlbnROb3RpZmljYXRpb25QYXJhbWV0ZXJbXTtcblx0cXVldWVLZXlQYXJhbWV0ZXJzPyA6IEthbHR1cmFQdXNoRXZlbnROb3RpZmljYXRpb25QYXJhbWV0ZXJbXTtcblx0YXBpT2JqZWN0VHlwZT8gOiBzdHJpbmc7XG5cdG9iamVjdEZvcm1hdD8gOiBLYWx0dXJhUmVzcG9uc2VUeXBlO1xuXHRyZXNwb25zZVByb2ZpbGVJZD8gOiBudW1iZXI7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFQdXNoTm90aWZpY2F0aW9uVGVtcGxhdGUgZXh0ZW5kcyBLYWx0dXJhRXZlbnROb3RpZmljYXRpb25UZW1wbGF0ZSB7XG5cbiAgICBxdWV1ZU5hbWVQYXJhbWV0ZXJzIDogS2FsdHVyYVB1c2hFdmVudE5vdGlmaWNhdGlvblBhcmFtZXRlcltdO1xuXHRxdWV1ZUtleVBhcmFtZXRlcnMgOiBLYWx0dXJhUHVzaEV2ZW50Tm90aWZpY2F0aW9uUGFyYW1ldGVyW107XG5cdGFwaU9iamVjdFR5cGUgOiBzdHJpbmc7XG5cdG9iamVjdEZvcm1hdCA6IEthbHR1cmFSZXNwb25zZVR5cGU7XG5cdHJlc3BvbnNlUHJvZmlsZUlkIDogbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhUHVzaE5vdGlmaWNhdGlvblRlbXBsYXRlQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMucXVldWVOYW1lUGFyYW1ldGVycyA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMucXVldWVOYW1lUGFyYW1ldGVycyA9IFtdO1xuXHRcdGlmICh0eXBlb2YgdGhpcy5xdWV1ZUtleVBhcmFtZXRlcnMgPT09ICd1bmRlZmluZWQnKSB0aGlzLnF1ZXVlS2V5UGFyYW1ldGVycyA9IFtdO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFQdXNoTm90aWZpY2F0aW9uVGVtcGxhdGUnIH0sXG5cdFx0XHRcdHF1ZXVlTmFtZVBhcmFtZXRlcnMgOiB7IHR5cGUgOiAnYScsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFQdXNoRXZlbnROb3RpZmljYXRpb25QYXJhbWV0ZXIsIHN1YlR5cGUgOiAnS2FsdHVyYVB1c2hFdmVudE5vdGlmaWNhdGlvblBhcmFtZXRlcicgfSxcblx0XHRcdFx0cXVldWVLZXlQYXJhbWV0ZXJzIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhUHVzaEV2ZW50Tm90aWZpY2F0aW9uUGFyYW1ldGVyLCBzdWJUeXBlIDogJ0thbHR1cmFQdXNoRXZlbnROb3RpZmljYXRpb25QYXJhbWV0ZXInIH0sXG5cdFx0XHRcdGFwaU9iamVjdFR5cGUgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0b2JqZWN0Rm9ybWF0IDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVJlc3BvbnNlVHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhUmVzcG9uc2VUeXBlJyB9LFxuXHRcdFx0XHRyZXNwb25zZVByb2ZpbGVJZCA6IHsgdHlwZSA6ICduJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYVB1c2hOb3RpZmljYXRpb25UZW1wbGF0ZScsS2FsdHVyYVB1c2hOb3RpZmljYXRpb25UZW1wbGF0ZSk7XG4iXX0=
