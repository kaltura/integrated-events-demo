"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaModifyCategoriesObjectTask = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaScheduledTaskAddOrRemoveType_1 = require("./KalturaScheduledTaskAddOrRemoveType");
var KalturaIntegerValue_1 = require("./KalturaIntegerValue");
var KalturaObjectTask_1 = require("./KalturaObjectTask");
var KalturaModifyCategoriesObjectTask = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaModifyCategoriesObjectTask, _super);
    function KalturaModifyCategoriesObjectTask(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.categoryIds === 'undefined')
            _this.categoryIds = [];
        return _this;
    }
    KalturaModifyCategoriesObjectTask.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaModifyCategoriesObjectTask' },
            addRemoveType: { type: 'en', subTypeConstructor: KalturaScheduledTaskAddOrRemoveType_1.KalturaScheduledTaskAddOrRemoveType, subType: 'KalturaScheduledTaskAddOrRemoveType' },
            categoryIds: { type: 'a', subTypeConstructor: KalturaIntegerValue_1.KalturaIntegerValue, subType: 'KalturaIntegerValue' }
        });
        return result;
    };
    return KalturaModifyCategoriesObjectTask;
}(KalturaObjectTask_1.KalturaObjectTask));
exports.KalturaModifyCategoriesObjectTask = KalturaModifyCategoriesObjectTask;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaModifyCategoriesObjectTask', KalturaModifyCategoriesObjectTask);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhTW9kaWZ5Q2F0ZWdvcmllc09iamVjdFRhc2sudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCw2RkFBNEY7QUFDNUYsNkRBQTREO0FBQzVELHlEQUErRTtBQVEvRTtJQUF1RCw2REFBaUI7SUFLcEUsMkNBQVksSUFBNkM7UUFBekQsWUFFSSxrQkFBTSxJQUFJLENBQUMsU0FFZDtRQURHLElBQUksT0FBTyxLQUFJLENBQUMsV0FBVyxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQzs7SUFDdkUsQ0FBQztJQUVTLHdEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLG1DQUFtQyxFQUFFO1lBQ3RGLGFBQWEsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcseUVBQW1DLEVBQUUsT0FBTyxFQUFHLHFDQUFxQyxFQUFFO1lBQzFJLFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcseUNBQW1CLEVBQUUsT0FBTyxFQUFHLHFCQUFxQixFQUFFO1NBQzlGLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCx3Q0FBQztBQUFELENBeEJBLEFBd0JDLENBeEJzRCxxQ0FBaUIsR0F3QnZFO0FBeEJZLDhFQUFpQztBQTBCOUMsMkNBQW1CLENBQUMsWUFBWSxDQUFDLG1DQUFtQyxFQUFDLGlDQUFpQyxDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFNb2RpZnlDYXRlZ29yaWVzT2JqZWN0VGFzay5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFTY2hlZHVsZWRUYXNrQWRkT3JSZW1vdmVUeXBlIH0gZnJvbSAnLi9LYWx0dXJhU2NoZWR1bGVkVGFza0FkZE9yUmVtb3ZlVHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhSW50ZWdlclZhbHVlIH0gZnJvbSAnLi9LYWx0dXJhSW50ZWdlclZhbHVlJztcbmltcG9ydCB7IEthbHR1cmFPYmplY3RUYXNrLCBLYWx0dXJhT2JqZWN0VGFza0FyZ3MgfSBmcm9tICcuL0thbHR1cmFPYmplY3RUYXNrJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhTW9kaWZ5Q2F0ZWdvcmllc09iamVjdFRhc2tBcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RUYXNrQXJncyB7XG4gICAgYWRkUmVtb3ZlVHlwZT8gOiBLYWx0dXJhU2NoZWR1bGVkVGFza0FkZE9yUmVtb3ZlVHlwZTtcblx0Y2F0ZWdvcnlJZHM/IDogS2FsdHVyYUludGVnZXJWYWx1ZVtdO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhTW9kaWZ5Q2F0ZWdvcmllc09iamVjdFRhc2sgZXh0ZW5kcyBLYWx0dXJhT2JqZWN0VGFzayB7XG5cbiAgICBhZGRSZW1vdmVUeXBlIDogS2FsdHVyYVNjaGVkdWxlZFRhc2tBZGRPclJlbW92ZVR5cGU7XG5cdGNhdGVnb3J5SWRzIDogS2FsdHVyYUludGVnZXJWYWx1ZVtdO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhTW9kaWZ5Q2F0ZWdvcmllc09iamVjdFRhc2tBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5jYXRlZ29yeUlkcyA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMuY2F0ZWdvcnlJZHMgPSBbXTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhTW9kaWZ5Q2F0ZWdvcmllc09iamVjdFRhc2snIH0sXG5cdFx0XHRcdGFkZFJlbW92ZVR5cGUgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhU2NoZWR1bGVkVGFza0FkZE9yUmVtb3ZlVHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhU2NoZWR1bGVkVGFza0FkZE9yUmVtb3ZlVHlwZScgfSxcblx0XHRcdFx0Y2F0ZWdvcnlJZHMgOiB7IHR5cGUgOiAnYScsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFJbnRlZ2VyVmFsdWUsIHN1YlR5cGUgOiAnS2FsdHVyYUludGVnZXJWYWx1ZScgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFNb2RpZnlDYXRlZ29yaWVzT2JqZWN0VGFzaycsS2FsdHVyYU1vZGlmeUNhdGVnb3JpZXNPYmplY3RUYXNrKTtcbiJdfQ==
