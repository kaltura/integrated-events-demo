"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaReachReportInputFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaVendorServiceType_1 = require("./KalturaVendorServiceType");
var KalturaVendorServiceFeature_1 = require("./KalturaVendorServiceFeature");
var KalturaVendorServiceTurnAroundTime_1 = require("./KalturaVendorServiceTurnAroundTime");
var KalturaReportInputFilter_1 = require("./KalturaReportInputFilter");
var KalturaReachReportInputFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaReachReportInputFilter, _super);
    function KalturaReachReportInputFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaReachReportInputFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaReachReportInputFilter' },
            serviceType: { type: 'en', subTypeConstructor: KalturaVendorServiceType_1.KalturaVendorServiceType, subType: 'KalturaVendorServiceType' },
            serviceFeature: { type: 'en', subTypeConstructor: KalturaVendorServiceFeature_1.KalturaVendorServiceFeature, subType: 'KalturaVendorServiceFeature' },
            turnAroundTime: { type: 'en', subTypeConstructor: KalturaVendorServiceTurnAroundTime_1.KalturaVendorServiceTurnAroundTime, subType: 'KalturaVendorServiceTurnAroundTime' }
        });
        return result;
    };
    return KalturaReachReportInputFilter;
}(KalturaReportInputFilter_1.KalturaReportInputFilter));
exports.KalturaReachReportInputFilter = KalturaReachReportInputFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaReachReportInputFilter', KalturaReachReportInputFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhUmVhY2hSZXBvcnRJbnB1dEZpbHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELHVFQUFzRTtBQUN0RSw2RUFBNEU7QUFDNUUsMkZBQTBGO0FBQzFGLHVFQUFvRztBQVNwRztJQUFtRCx5REFBd0I7SUFNdkUsdUNBQVksSUFBeUM7ZUFFakQsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLG9EQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLCtCQUErQixFQUFFO1lBQ2xGLFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsbURBQXdCLEVBQUUsT0FBTyxFQUFHLDBCQUEwQixFQUFFO1lBQ2xILGNBQWMsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcseURBQTJCLEVBQUUsT0FBTyxFQUFHLDZCQUE2QixFQUFFO1lBQzNILGNBQWMsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsdUVBQWtDLEVBQUUsT0FBTyxFQUFHLG9DQUFvQyxFQUFFO1NBQ2hJLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxvQ0FBQztBQUFELENBekJBLEFBeUJDLENBekJrRCxtREFBd0IsR0F5QjFFO0FBekJZLHNFQUE2QjtBQTJCMUMsMkNBQW1CLENBQUMsWUFBWSxDQUFDLCtCQUErQixFQUFDLDZCQUE2QixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFSZWFjaFJlcG9ydElucHV0RmlsdGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYVZlbmRvclNlcnZpY2VUeXBlIH0gZnJvbSAnLi9LYWx0dXJhVmVuZG9yU2VydmljZVR5cGUnO1xuaW1wb3J0IHsgS2FsdHVyYVZlbmRvclNlcnZpY2VGZWF0dXJlIH0gZnJvbSAnLi9LYWx0dXJhVmVuZG9yU2VydmljZUZlYXR1cmUnO1xuaW1wb3J0IHsgS2FsdHVyYVZlbmRvclNlcnZpY2VUdXJuQXJvdW5kVGltZSB9IGZyb20gJy4vS2FsdHVyYVZlbmRvclNlcnZpY2VUdXJuQXJvdW5kVGltZSc7XG5pbXBvcnQgeyBLYWx0dXJhUmVwb3J0SW5wdXRGaWx0ZXIsIEthbHR1cmFSZXBvcnRJbnB1dEZpbHRlckFyZ3MgfSBmcm9tICcuL0thbHR1cmFSZXBvcnRJbnB1dEZpbHRlcic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYVJlYWNoUmVwb3J0SW5wdXRGaWx0ZXJBcmdzICBleHRlbmRzIEthbHR1cmFSZXBvcnRJbnB1dEZpbHRlckFyZ3Mge1xuICAgIHNlcnZpY2VUeXBlPyA6IEthbHR1cmFWZW5kb3JTZXJ2aWNlVHlwZTtcblx0c2VydmljZUZlYXR1cmU/IDogS2FsdHVyYVZlbmRvclNlcnZpY2VGZWF0dXJlO1xuXHR0dXJuQXJvdW5kVGltZT8gOiBLYWx0dXJhVmVuZG9yU2VydmljZVR1cm5Bcm91bmRUaW1lO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhUmVhY2hSZXBvcnRJbnB1dEZpbHRlciBleHRlbmRzIEthbHR1cmFSZXBvcnRJbnB1dEZpbHRlciB7XG5cbiAgICBzZXJ2aWNlVHlwZSA6IEthbHR1cmFWZW5kb3JTZXJ2aWNlVHlwZTtcblx0c2VydmljZUZlYXR1cmUgOiBLYWx0dXJhVmVuZG9yU2VydmljZUZlYXR1cmU7XG5cdHR1cm5Bcm91bmRUaW1lIDogS2FsdHVyYVZlbmRvclNlcnZpY2VUdXJuQXJvdW5kVGltZTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYVJlYWNoUmVwb3J0SW5wdXRGaWx0ZXJBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYVJlYWNoUmVwb3J0SW5wdXRGaWx0ZXInIH0sXG5cdFx0XHRcdHNlcnZpY2VUeXBlIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVZlbmRvclNlcnZpY2VUeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFWZW5kb3JTZXJ2aWNlVHlwZScgfSxcblx0XHRcdFx0c2VydmljZUZlYXR1cmUgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhVmVuZG9yU2VydmljZUZlYXR1cmUsIHN1YlR5cGUgOiAnS2FsdHVyYVZlbmRvclNlcnZpY2VGZWF0dXJlJyB9LFxuXHRcdFx0XHR0dXJuQXJvdW5kVGltZSA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFWZW5kb3JTZXJ2aWNlVHVybkFyb3VuZFRpbWUsIHN1YlR5cGUgOiAnS2FsdHVyYVZlbmRvclNlcnZpY2VUdXJuQXJvdW5kVGltZScgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFSZWFjaFJlcG9ydElucHV0RmlsdGVyJyxLYWx0dXJhUmVhY2hSZXBvcnRJbnB1dEZpbHRlcik7XG4iXX0=
