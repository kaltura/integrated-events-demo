"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaLockFileSyncsResponse = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaFileSync_1 = require("./KalturaFileSync");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaLockFileSyncsResponse = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaLockFileSyncsResponse, _super);
    function KalturaLockFileSyncsResponse(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.fileSyncs === 'undefined')
            _this.fileSyncs = [];
        return _this;
    }
    KalturaLockFileSyncsResponse.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaLockFileSyncsResponse' },
            fileSyncs: { type: 'a', subTypeConstructor: KalturaFileSync_1.KalturaFileSync, subType: 'KalturaFileSync' },
            limitReached: { type: 'b' },
            dcSecret: { type: 's' },
            baseUrl: { type: 's' }
        });
        return result;
    };
    return KalturaLockFileSyncsResponse;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaLockFileSyncsResponse = KalturaLockFileSyncsResponse;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaLockFileSyncsResponse', KalturaLockFileSyncsResponse);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhTG9ja0ZpbGVTeW5jc1Jlc3BvbnNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QscURBQW9EO0FBQ3BELDhEQUFrRjtBQVVsRjtJQUFrRCx3REFBaUI7SUFPL0Qsc0NBQVksSUFBd0M7UUFBcEQsWUFFSSxrQkFBTSxJQUFJLENBQUMsU0FFZDtRQURHLElBQUksT0FBTyxLQUFJLENBQUMsU0FBUyxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsU0FBUyxHQUFHLEVBQUUsQ0FBQzs7SUFDbkUsQ0FBQztJQUVTLG1EQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDhCQUE4QixFQUFFO1lBQ2pGLFNBQVMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsaUNBQWUsRUFBRSxPQUFPLEVBQUcsaUJBQWlCLEVBQUU7WUFDN0YsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM3QixRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3pCLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDZixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsbUNBQUM7QUFBRCxDQTVCQSxBQTRCQyxDQTVCaUQsdUNBQWlCLEdBNEJsRTtBQTVCWSxvRUFBNEI7QUE4QnpDLDJDQUFtQixDQUFDLFlBQVksQ0FBQyw4QkFBOEIsRUFBQyw0QkFBNEIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhTG9ja0ZpbGVTeW5jc1Jlc3BvbnNlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYUZpbGVTeW5jIH0gZnJvbSAnLi9LYWx0dXJhRmlsZVN5bmMnO1xuaW1wb3J0IHsgS2FsdHVyYU9iamVjdEJhc2UsIEthbHR1cmFPYmplY3RCYXNlQXJncyB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFMb2NrRmlsZVN5bmNzUmVzcG9uc2VBcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlQXJncyB7XG4gICAgZmlsZVN5bmNzPyA6IEthbHR1cmFGaWxlU3luY1tdO1xuXHRsaW1pdFJlYWNoZWQ/IDogYm9vbGVhbjtcblx0ZGNTZWNyZXQ/IDogc3RyaW5nO1xuXHRiYXNlVXJsPyA6IHN0cmluZztcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYUxvY2tGaWxlU3luY3NSZXNwb25zZSBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlIHtcblxuICAgIGZpbGVTeW5jcyA6IEthbHR1cmFGaWxlU3luY1tdO1xuXHRsaW1pdFJlYWNoZWQgOiBib29sZWFuO1xuXHRkY1NlY3JldCA6IHN0cmluZztcblx0YmFzZVVybCA6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUxvY2tGaWxlU3luY3NSZXNwb25zZUFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmZpbGVTeW5jcyA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMuZmlsZVN5bmNzID0gW107XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYUxvY2tGaWxlU3luY3NSZXNwb25zZScgfSxcblx0XHRcdFx0ZmlsZVN5bmNzIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhRmlsZVN5bmMsIHN1YlR5cGUgOiAnS2FsdHVyYUZpbGVTeW5jJyB9LFxuXHRcdFx0XHRsaW1pdFJlYWNoZWQgOiB7IHR5cGUgOiAnYicgfSxcblx0XHRcdFx0ZGNTZWNyZXQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0YmFzZVVybCA6IHsgdHlwZSA6ICdzJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUxvY2tGaWxlU3luY3NSZXNwb25zZScsS2FsdHVyYUxvY2tGaWxlU3luY3NSZXNwb25zZSk7XG4iXX0=
