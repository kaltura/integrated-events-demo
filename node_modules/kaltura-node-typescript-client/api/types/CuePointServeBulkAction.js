"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.CuePointServeBulkAction = void 0;
var tslib_1 = require("tslib");
var KalturaCuePointFilter_1 = require("./KalturaCuePointFilter");
var KalturaFilterPager_1 = require("./KalturaFilterPager");
var kaltura_file_request_1 = require("../kaltura-file-request");
/**
 * Build request payload for service 'cuePoint' action 'serveBulk'.
 *
 * Usage: Download multiple cue points objects as XML definitions
 *
 * Server response type:         { url: string }
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaFileRequest
 */
var CuePointServeBulkAction = /** @class */ (function (_super) {
    tslib_1.__extends(CuePointServeBulkAction, _super);
    function CuePointServeBulkAction(data) {
        return _super.call(this, data) || this;
    }
    CuePointServeBulkAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'cuepoint_cuepoint' },
            action: { type: 'c', default: 'serveBulk' },
            filter: { type: 'o', subTypeConstructor: KalturaCuePointFilter_1.KalturaCuePointFilter, subType: 'KalturaCuePointFilter' },
            pager: { type: 'o', subTypeConstructor: KalturaFilterPager_1.KalturaFilterPager, subType: 'KalturaFilterPager' }
        });
        return result;
    };
    return CuePointServeBulkAction;
}(kaltura_file_request_1.KalturaFileRequest));
exports.CuePointServeBulkAction = CuePointServeBulkAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9DdWVQb2ludFNlcnZlQnVsa0FjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBSUEsaUVBQWdFO0FBQ2hFLDJEQUEwRDtBQUMxRCxnRUFBcUY7QUFPckY7Ozs7Ozs7OztHQVNHO0FBQ0g7SUFBNkMsbURBQWtCO0lBSzNELGlDQUFZLElBQW1DO2VBRTNDLGtCQUFNLElBQUksQ0FBQztJQUNmLENBQUM7SUFFUyw4Q0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxtQkFBbUIsRUFBRTtZQUNuRSxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxXQUFXLEVBQUU7WUFDOUMsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyw2Q0FBcUIsRUFBRSxPQUFPLEVBQUcsdUJBQXVCLEVBQUU7WUFDdEcsS0FBSyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyx1Q0FBa0IsRUFBRSxPQUFPLEVBQUcsb0JBQW9CLEVBQUU7U0FDdEYsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDhCQUFDO0FBQUQsQ0F4QkEsQUF3QkMsQ0F4QjRDLHlDQUFrQixHQXdCOUQ7QUF4QlksMERBQXVCIiwiZmlsZSI6ImFwaS90eXBlcy9DdWVQb2ludFNlcnZlQnVsa0FjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5cblxuaW1wb3J0IHsgS2FsdHVyYUN1ZVBvaW50RmlsdGVyIH0gZnJvbSAnLi9LYWx0dXJhQ3VlUG9pbnRGaWx0ZXInO1xuaW1wb3J0IHsgS2FsdHVyYUZpbHRlclBhZ2VyIH0gZnJvbSAnLi9LYWx0dXJhRmlsdGVyUGFnZXInO1xuaW1wb3J0IHsgS2FsdHVyYUZpbGVSZXF1ZXN0LCBLYWx0dXJhRmlsZVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1maWxlLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEN1ZVBvaW50U2VydmVCdWxrQWN0aW9uQXJncyAgZXh0ZW5kcyBLYWx0dXJhRmlsZVJlcXVlc3RBcmdzIHtcbiAgICBmaWx0ZXI/IDogS2FsdHVyYUN1ZVBvaW50RmlsdGVyO1xuXHRwYWdlcj8gOiBLYWx0dXJhRmlsdGVyUGFnZXI7XG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICdjdWVQb2ludCcgYWN0aW9uICdzZXJ2ZUJ1bGsnLlxuICpcbiAqIFVzYWdlOiBEb3dubG9hZCBtdWx0aXBsZSBjdWUgcG9pbnRzIG9iamVjdHMgYXMgWE1MIGRlZmluaXRpb25zXG4gKlxuICogU2VydmVyIHJlc3BvbnNlIHR5cGU6ICAgICAgICAgeyB1cmw6IHN0cmluZyB9XG4gKiBTZXJ2ZXIgZmFpbHVyZSByZXNwb25zZSB0eXBlOiBLYWx0dXJhQVBJRXhjZXB0aW9uXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIEthbHR1cmFGaWxlUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgQ3VlUG9pbnRTZXJ2ZUJ1bGtBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhRmlsZVJlcXVlc3Qge1xuXG4gICAgZmlsdGVyIDogS2FsdHVyYUN1ZVBvaW50RmlsdGVyO1xuXHRwYWdlciA6IEthbHR1cmFGaWx0ZXJQYWdlcjtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogQ3VlUG9pbnRTZXJ2ZUJ1bGtBY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnY3VlcG9pbnRfY3VlcG9pbnQnIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdzZXJ2ZUJ1bGsnIH0sXG5cdFx0XHRcdGZpbHRlciA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUN1ZVBvaW50RmlsdGVyLCBzdWJUeXBlIDogJ0thbHR1cmFDdWVQb2ludEZpbHRlcicgfSxcblx0XHRcdFx0cGFnZXIgOiB7IHR5cGUgOiAnbycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFGaWx0ZXJQYWdlciwgc3ViVHlwZSA6ICdLYWx0dXJhRmlsdGVyUGFnZXInIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
