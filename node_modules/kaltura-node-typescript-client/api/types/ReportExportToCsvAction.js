"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportExportToCsvAction = void 0;
var tslib_1 = require("tslib");
var KalturaReportExportResponse_1 = require("./KalturaReportExportResponse");
var KalturaReportExportParams_1 = require("./KalturaReportExportParams");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'report' action 'exportToCsv'.
 *
 *
 *
 * Server response type:         KalturaReportExportResponse
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var ReportExportToCsvAction = /** @class */ (function (_super) {
    tslib_1.__extends(ReportExportToCsvAction, _super);
    function ReportExportToCsvAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaReportExportResponse', responseConstructor: KalturaReportExportResponse_1.KalturaReportExportResponse }) || this;
    }
    ReportExportToCsvAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'report' },
            action: { type: 'c', default: 'exportToCsv' },
            params: { type: 'o', subTypeConstructor: KalturaReportExportParams_1.KalturaReportExportParams, subType: 'KalturaReportExportParams' }
        });
        return result;
    };
    return ReportExportToCsvAction;
}(kaltura_request_1.KalturaRequest));
exports.ReportExportToCsvAction = ReportExportToCsvAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9SZXBvcnRFeHBvcnRUb0NzdkFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsNkVBQTRFO0FBRTVFLHlFQUF3RTtBQUN4RSxzREFBd0U7QUFNeEU7Ozs7Ozs7OztHQVNHO0FBQ0g7SUFBNkMsbURBQTJDO0lBSXBGLGlDQUFZLElBQWtDO2VBRTFDLGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLDZCQUE2QixFQUFFLG1CQUFtQixFQUFHLHlEQUEyQixFQUFHLENBQUM7SUFDM0ksQ0FBQztJQUVTLDhDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLFFBQVEsRUFBRTtZQUN4RCxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxhQUFhLEVBQUU7WUFDaEQsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxxREFBeUIsRUFBRSxPQUFPLEVBQUcsMkJBQTJCLEVBQUU7U0FDckcsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDhCQUFDO0FBQUQsQ0F0QkEsQUFzQkMsQ0F0QjRDLGdDQUFjLEdBc0IxRDtBQXRCWSwwREFBdUIiLCJmaWxlIjoiYXBpL3R5cGVzL1JlcG9ydEV4cG9ydFRvQ3N2QWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFSZXBvcnRFeHBvcnRSZXNwb25zZSB9IGZyb20gJy4vS2FsdHVyYVJlcG9ydEV4cG9ydFJlc3BvbnNlJztcblxuaW1wb3J0IHsgS2FsdHVyYVJlcG9ydEV4cG9ydFBhcmFtcyB9IGZyb20gJy4vS2FsdHVyYVJlcG9ydEV4cG9ydFBhcmFtcyc7XG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBSZXBvcnRFeHBvcnRUb0NzdkFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBwYXJhbXMgOiBLYWx0dXJhUmVwb3J0RXhwb3J0UGFyYW1zO1xufVxuXG4vKipcbiAqIEJ1aWxkIHJlcXVlc3QgcGF5bG9hZCBmb3Igc2VydmljZSAncmVwb3J0JyBhY3Rpb24gJ2V4cG9ydFRvQ3N2Jy5cbiAqXG4gKiBcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhUmVwb3J0RXhwb3J0UmVzcG9uc2VcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIFJlcG9ydEV4cG9ydFRvQ3N2QWN0aW9uIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3Q8S2FsdHVyYVJlcG9ydEV4cG9ydFJlc3BvbnNlPiB7XG5cbiAgICBwYXJhbXMgOiBLYWx0dXJhUmVwb3J0RXhwb3J0UGFyYW1zO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YSA6IFJlcG9ydEV4cG9ydFRvQ3N2QWN0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEsIHtyZXNwb25zZVR5cGUgOiAnbycsIHJlc3BvbnNlU3ViVHlwZSA6ICdLYWx0dXJhUmVwb3J0RXhwb3J0UmVzcG9uc2UnLCByZXNwb25zZUNvbnN0cnVjdG9yIDogS2FsdHVyYVJlcG9ydEV4cG9ydFJlc3BvbnNlICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdyZXBvcnQnIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdleHBvcnRUb0NzdicgfSxcblx0XHRcdFx0cGFyYW1zIDogeyB0eXBlIDogJ28nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhUmVwb3J0RXhwb3J0UGFyYW1zLCBzdWJUeXBlIDogJ0thbHR1cmFSZXBvcnRFeHBvcnRQYXJhbXMnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
