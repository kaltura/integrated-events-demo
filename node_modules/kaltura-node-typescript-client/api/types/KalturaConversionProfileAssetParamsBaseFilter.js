"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaConversionProfileAssetParamsBaseFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaFlavorReadyBehaviorType_1 = require("./KalturaFlavorReadyBehaviorType");
var KalturaAssetParamsOrigin_1 = require("./KalturaAssetParamsOrigin");
var KalturaRelatedFilter_1 = require("./KalturaRelatedFilter");
var KalturaConversionProfileAssetParamsBaseFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaConversionProfileAssetParamsBaseFilter, _super);
    function KalturaConversionProfileAssetParamsBaseFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaConversionProfileAssetParamsBaseFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaConversionProfileAssetParamsBaseFilter' },
            conversionProfileIdEqual: { type: 'n' },
            conversionProfileIdIn: { type: 's' },
            assetParamsIdEqual: { type: 'n' },
            assetParamsIdIn: { type: 's' },
            readyBehaviorEqual: { type: 'en', subTypeConstructor: KalturaFlavorReadyBehaviorType_1.KalturaFlavorReadyBehaviorType, subType: 'KalturaFlavorReadyBehaviorType' },
            readyBehaviorIn: { type: 's' },
            originEqual: { type: 'en', subTypeConstructor: KalturaAssetParamsOrigin_1.KalturaAssetParamsOrigin, subType: 'KalturaAssetParamsOrigin' },
            originIn: { type: 's' },
            systemNameEqual: { type: 's' },
            systemNameIn: { type: 's' }
        });
        return result;
    };
    return KalturaConversionProfileAssetParamsBaseFilter;
}(KalturaRelatedFilter_1.KalturaRelatedFilter));
exports.KalturaConversionProfileAssetParamsBaseFilter = KalturaConversionProfileAssetParamsBaseFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaConversionProfileAssetParamsBaseFilter', KalturaConversionProfileAssetParamsBaseFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQ29udmVyc2lvblByb2ZpbGVBc3NldFBhcmFtc0Jhc2VGaWx0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxtRkFBa0Y7QUFDbEYsdUVBQXNFO0FBQ3RFLCtEQUF3RjtBQWdCeEY7SUFBbUUseUVBQW9CO0lBYW5GLHVEQUFZLElBQXlEO2VBRWpFLGtCQUFNLElBQUksQ0FBQztJQUNmLENBQUM7SUFFUyxvRUFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRywrQ0FBK0MsRUFBRTtZQUNsRyx3QkFBd0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekMscUJBQXFCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3RDLGtCQUFrQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNuQyxlQUFlLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ2hDLGtCQUFrQixFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywrREFBOEIsRUFBRSxPQUFPLEVBQUcsZ0NBQWdDLEVBQUU7WUFDckksZUFBZSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNoQyxXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLG1EQUF3QixFQUFFLE9BQU8sRUFBRywwQkFBMEIsRUFBRTtZQUNsSCxRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3pCLGVBQWUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDaEMsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtTQUNwQixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsb0RBQUM7QUFBRCxDQXZDQSxBQXVDQyxDQXZDa0UsMkNBQW9CLEdBdUN0RjtBQXZDWSxzR0FBNkM7QUF5QzFELDJDQUFtQixDQUFDLFlBQVksQ0FBQywrQ0FBK0MsRUFBQyw2Q0FBNkMsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhQ29udmVyc2lvblByb2ZpbGVBc3NldFBhcmFtc0Jhc2VGaWx0ZXIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhRmxhdm9yUmVhZHlCZWhhdmlvclR5cGUgfSBmcm9tICcuL0thbHR1cmFGbGF2b3JSZWFkeUJlaGF2aW9yVHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhQXNzZXRQYXJhbXNPcmlnaW4gfSBmcm9tICcuL0thbHR1cmFBc3NldFBhcmFtc09yaWdpbic7XG5pbXBvcnQgeyBLYWx0dXJhUmVsYXRlZEZpbHRlciwgS2FsdHVyYVJlbGF0ZWRGaWx0ZXJBcmdzIH0gZnJvbSAnLi9LYWx0dXJhUmVsYXRlZEZpbHRlcic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYUNvbnZlcnNpb25Qcm9maWxlQXNzZXRQYXJhbXNCYXNlRmlsdGVyQXJncyAgZXh0ZW5kcyBLYWx0dXJhUmVsYXRlZEZpbHRlckFyZ3Mge1xuICAgIGNvbnZlcnNpb25Qcm9maWxlSWRFcXVhbD8gOiBudW1iZXI7XG5cdGNvbnZlcnNpb25Qcm9maWxlSWRJbj8gOiBzdHJpbmc7XG5cdGFzc2V0UGFyYW1zSWRFcXVhbD8gOiBudW1iZXI7XG5cdGFzc2V0UGFyYW1zSWRJbj8gOiBzdHJpbmc7XG5cdHJlYWR5QmVoYXZpb3JFcXVhbD8gOiBLYWx0dXJhRmxhdm9yUmVhZHlCZWhhdmlvclR5cGU7XG5cdHJlYWR5QmVoYXZpb3JJbj8gOiBzdHJpbmc7XG5cdG9yaWdpbkVxdWFsPyA6IEthbHR1cmFBc3NldFBhcmFtc09yaWdpbjtcblx0b3JpZ2luSW4/IDogc3RyaW5nO1xuXHRzeXN0ZW1OYW1lRXF1YWw/IDogc3RyaW5nO1xuXHRzeXN0ZW1OYW1lSW4/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhQ29udmVyc2lvblByb2ZpbGVBc3NldFBhcmFtc0Jhc2VGaWx0ZXIgZXh0ZW5kcyBLYWx0dXJhUmVsYXRlZEZpbHRlciB7XG5cbiAgICBjb252ZXJzaW9uUHJvZmlsZUlkRXF1YWwgOiBudW1iZXI7XG5cdGNvbnZlcnNpb25Qcm9maWxlSWRJbiA6IHN0cmluZztcblx0YXNzZXRQYXJhbXNJZEVxdWFsIDogbnVtYmVyO1xuXHRhc3NldFBhcmFtc0lkSW4gOiBzdHJpbmc7XG5cdHJlYWR5QmVoYXZpb3JFcXVhbCA6IEthbHR1cmFGbGF2b3JSZWFkeUJlaGF2aW9yVHlwZTtcblx0cmVhZHlCZWhhdmlvckluIDogc3RyaW5nO1xuXHRvcmlnaW5FcXVhbCA6IEthbHR1cmFBc3NldFBhcmFtc09yaWdpbjtcblx0b3JpZ2luSW4gOiBzdHJpbmc7XG5cdHN5c3RlbU5hbWVFcXVhbCA6IHN0cmluZztcblx0c3lzdGVtTmFtZUluIDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhQ29udmVyc2lvblByb2ZpbGVBc3NldFBhcmFtc0Jhc2VGaWx0ZXJBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYUNvbnZlcnNpb25Qcm9maWxlQXNzZXRQYXJhbXNCYXNlRmlsdGVyJyB9LFxuXHRcdFx0XHRjb252ZXJzaW9uUHJvZmlsZUlkRXF1YWwgOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0Y29udmVyc2lvblByb2ZpbGVJZEluIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGFzc2V0UGFyYW1zSWRFcXVhbCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRhc3NldFBhcmFtc0lkSW4gOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0cmVhZHlCZWhhdmlvckVxdWFsIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUZsYXZvclJlYWR5QmVoYXZpb3JUeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFGbGF2b3JSZWFkeUJlaGF2aW9yVHlwZScgfSxcblx0XHRcdFx0cmVhZHlCZWhhdmlvckluIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdG9yaWdpbkVxdWFsIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUFzc2V0UGFyYW1zT3JpZ2luLCBzdWJUeXBlIDogJ0thbHR1cmFBc3NldFBhcmFtc09yaWdpbicgfSxcblx0XHRcdFx0b3JpZ2luSW4gOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c3lzdGVtTmFtZUVxdWFsIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHN5c3RlbU5hbWVJbiA6IHsgdHlwZSA6ICdzJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUNvbnZlcnNpb25Qcm9maWxlQXNzZXRQYXJhbXNCYXNlRmlsdGVyJyxLYWx0dXJhQ29udmVyc2lvblByb2ZpbGVBc3NldFBhcmFtc0Jhc2VGaWx0ZXIpO1xuIl19
