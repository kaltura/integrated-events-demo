"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaAnnotation = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaNullableBoolean_1 = require("./KalturaNullableBoolean");
var KalturaCuePoint_1 = require("./KalturaCuePoint");
var KalturaAnnotation = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaAnnotation, _super);
    function KalturaAnnotation(data) {
        return _super.call(this, data) || this;
    }
    KalturaAnnotation.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaAnnotation' },
            parentId: { type: 's' },
            text: { type: 's' },
            endTime: { type: 'n' },
            duration: { type: 'n', readOnly: true },
            depth: { type: 'n', readOnly: true },
            childrenCount: { type: 'n', readOnly: true },
            directChildrenCount: { type: 'n', readOnly: true },
            isPublic: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            searchableOnEntry: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' }
        });
        return result;
    };
    return KalturaAnnotation;
}(KalturaCuePoint_1.KalturaCuePoint));
exports.KalturaAnnotation = KalturaAnnotation;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaAnnotation', KalturaAnnotation);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQW5ub3RhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELG1FQUFrRTtBQUNsRSxxREFBeUU7QUFXekU7SUFBdUMsNkNBQWU7SUFZbEQsMkJBQVksSUFBNkI7ZUFFckMsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLHdDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLG1CQUFtQixFQUFFO1lBQ3RFLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsSUFBSSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNyQixPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUMxQyxLQUFLLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDdkMsYUFBYSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQy9DLG1CQUFtQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQ3JELFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsK0NBQXNCLEVBQUUsT0FBTyxFQUFHLHdCQUF3QixFQUFFO1lBQzNHLGlCQUFpQixFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywrQ0FBc0IsRUFBRSxPQUFPLEVBQUcsd0JBQXdCLEVBQUU7U0FDM0csQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHdCQUFDO0FBQUQsQ0FyQ0EsQUFxQ0MsQ0FyQ3NDLGlDQUFlLEdBcUNyRDtBQXJDWSw4Q0FBaUI7QUF1QzlCLDJDQUFtQixDQUFDLFlBQVksQ0FBQyxtQkFBbUIsRUFBQyxpQkFBaUIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhQW5ub3RhdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFOdWxsYWJsZUJvb2xlYW4gfSBmcm9tICcuL0thbHR1cmFOdWxsYWJsZUJvb2xlYW4nO1xuaW1wb3J0IHsgS2FsdHVyYUN1ZVBvaW50LCBLYWx0dXJhQ3VlUG9pbnRBcmdzIH0gZnJvbSAnLi9LYWx0dXJhQ3VlUG9pbnQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFBbm5vdGF0aW9uQXJncyAgZXh0ZW5kcyBLYWx0dXJhQ3VlUG9pbnRBcmdzIHtcbiAgICBwYXJlbnRJZD8gOiBzdHJpbmc7XG5cdHRleHQ/IDogc3RyaW5nO1xuXHRlbmRUaW1lPyA6IG51bWJlcjtcblx0aXNQdWJsaWM/IDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcblx0c2VhcmNoYWJsZU9uRW50cnk/IDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYUFubm90YXRpb24gZXh0ZW5kcyBLYWx0dXJhQ3VlUG9pbnQge1xuXG4gICAgcGFyZW50SWQgOiBzdHJpbmc7XG5cdHRleHQgOiBzdHJpbmc7XG5cdGVuZFRpbWUgOiBudW1iZXI7XG5cdHJlYWRvbmx5IGR1cmF0aW9uIDogbnVtYmVyO1xuXHRyZWFkb25seSBkZXB0aCA6IG51bWJlcjtcblx0cmVhZG9ubHkgY2hpbGRyZW5Db3VudCA6IG51bWJlcjtcblx0cmVhZG9ubHkgZGlyZWN0Q2hpbGRyZW5Db3VudCA6IG51bWJlcjtcblx0aXNQdWJsaWMgOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuO1xuXHRzZWFyY2hhYmxlT25FbnRyeSA6IEthbHR1cmFOdWxsYWJsZUJvb2xlYW47XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFBbm5vdGF0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFBbm5vdGF0aW9uJyB9LFxuXHRcdFx0XHRwYXJlbnRJZCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHR0ZXh0IDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGVuZFRpbWUgOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0ZHVyYXRpb24gOiB7IHR5cGUgOiAnbicsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRkZXB0aCA6IHsgdHlwZSA6ICduJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdGNoaWxkcmVuQ291bnQgOiB7IHR5cGUgOiAnbicsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRkaXJlY3RDaGlsZHJlbkNvdW50IDogeyB0eXBlIDogJ24nLCByZWFkT25seSA6IHRydWUgfSxcblx0XHRcdFx0aXNQdWJsaWMgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuLCBzdWJUeXBlIDogJ0thbHR1cmFOdWxsYWJsZUJvb2xlYW4nIH0sXG5cdFx0XHRcdHNlYXJjaGFibGVPbkVudHJ5IDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbiwgc3ViVHlwZSA6ICdLYWx0dXJhTnVsbGFibGVCb29sZWFuJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUFubm90YXRpb24nLEthbHR1cmFBbm5vdGF0aW9uKTtcbiJdfQ==
