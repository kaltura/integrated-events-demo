"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MediaBulkUploadAddAction = void 0;
var tslib_1 = require("tslib");
var KalturaBulkUpload_1 = require("./KalturaBulkUpload");
var KalturaBulkUploadJobData_1 = require("./KalturaBulkUploadJobData");
var KalturaBulkUploadEntryData_1 = require("./KalturaBulkUploadEntryData");
var kaltura_upload_request_1 = require("../kaltura-upload-request");
/**
 * Build request payload for service 'media' action 'bulkUploadAdd'.
 *
 * Usage: Add new bulk upload batch job
 * Conversion profile id can be specified in the API or in the CSV file, the one in the CSV file will be stronger.
 * If no conversion profile was specified, partner's default will be used
 *
 * Server response type:         KalturaBulkUpload
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaUploadRequest
 */
var MediaBulkUploadAddAction = /** @class */ (function (_super) {
    tslib_1.__extends(MediaBulkUploadAddAction, _super);
    function MediaBulkUploadAddAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaBulkUpload', responseConstructor: KalturaBulkUpload_1.KalturaBulkUpload }) || this;
    }
    MediaBulkUploadAddAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'media' },
            action: { type: 'c', default: 'bulkUploadAdd' },
            fileData: { type: 'f' },
            bulkUploadData: { type: 'o', subTypeConstructor: KalturaBulkUploadJobData_1.KalturaBulkUploadJobData, subType: 'KalturaBulkUploadJobData' },
            bulkUploadEntryData: { type: 'o', subTypeConstructor: KalturaBulkUploadEntryData_1.KalturaBulkUploadEntryData, subType: 'KalturaBulkUploadEntryData' }
        });
        return result;
    };
    return MediaBulkUploadAddAction;
}(kaltura_upload_request_1.KalturaUploadRequest));
exports.MediaBulkUploadAddAction = MediaBulkUploadAddAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9NZWRpYUJ1bGtVcGxvYWRBZGRBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLHlEQUF3RDtBQUV4RCx1RUFBc0U7QUFDdEUsMkVBQTBFO0FBQzFFLG9FQUEyRjtBQVEzRjs7Ozs7Ozs7Ozs7R0FXRztBQUNIO0lBQThDLG9EQUF1QztJQU1qRixrQ0FBWSxJQUFtQztlQUUzQyxrQkFBTSxJQUFJLEVBQUUsRUFBQyxZQUFZLEVBQUcsR0FBRyxFQUFFLGVBQWUsRUFBRyxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRyxxQ0FBaUIsRUFBRyxDQUFDO0lBQ3ZILENBQUM7SUFFUywrQ0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxPQUFPLEVBQUU7WUFDdkQsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsZUFBZSxFQUFFO1lBQ2xELFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsY0FBYyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxtREFBd0IsRUFBRSxPQUFPLEVBQUcsMEJBQTBCLEVBQUU7WUFDcEgsbUJBQW1CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLHVEQUEwQixFQUFFLE9BQU8sRUFBRyw0QkFBNEIsRUFBRTtTQUNwSCxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsK0JBQUM7QUFBRCxDQTFCQSxBQTBCQyxDQTFCNkMsNkNBQW9CLEdBMEJqRTtBQTFCWSw0REFBd0IiLCJmaWxlIjoiYXBpL3R5cGVzL01lZGlhQnVsa1VwbG9hZEFkZEFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhQnVsa1VwbG9hZCB9IGZyb20gJy4vS2FsdHVyYUJ1bGtVcGxvYWQnO1xuXG5pbXBvcnQgeyBLYWx0dXJhQnVsa1VwbG9hZEpvYkRhdGEgfSBmcm9tICcuL0thbHR1cmFCdWxrVXBsb2FkSm9iRGF0YSc7XG5pbXBvcnQgeyBLYWx0dXJhQnVsa1VwbG9hZEVudHJ5RGF0YSB9IGZyb20gJy4vS2FsdHVyYUJ1bGtVcGxvYWRFbnRyeURhdGEnO1xuaW1wb3J0IHsgS2FsdHVyYVVwbG9hZFJlcXVlc3QsIEthbHR1cmFVcGxvYWRSZXF1ZXN0QXJncyB9IGZyb20gJy4uL2thbHR1cmEtdXBsb2FkLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIE1lZGlhQnVsa1VwbG9hZEFkZEFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVVwbG9hZFJlcXVlc3RBcmdzIHtcbiAgICBmaWxlRGF0YSA6IEZpbGU7XG5cdGJ1bGtVcGxvYWREYXRhPyA6IEthbHR1cmFCdWxrVXBsb2FkSm9iRGF0YTtcblx0YnVsa1VwbG9hZEVudHJ5RGF0YT8gOiBLYWx0dXJhQnVsa1VwbG9hZEVudHJ5RGF0YTtcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ21lZGlhJyBhY3Rpb24gJ2J1bGtVcGxvYWRBZGQnLlxuICpcbiAqIFVzYWdlOiBBZGQgbmV3IGJ1bGsgdXBsb2FkIGJhdGNoIGpvYlxuICogQ29udmVyc2lvbiBwcm9maWxlIGlkIGNhbiBiZSBzcGVjaWZpZWQgaW4gdGhlIEFQSSBvciBpbiB0aGUgQ1NWIGZpbGUsIHRoZSBvbmUgaW4gdGhlIENTViBmaWxlIHdpbGwgYmUgc3Ryb25nZXIuXG4gKiBJZiBubyBjb252ZXJzaW9uIHByb2ZpbGUgd2FzIHNwZWNpZmllZCwgcGFydG5lcidzIGRlZmF1bHQgd2lsbCBiZSB1c2VkXG4gKlxuICogU2VydmVyIHJlc3BvbnNlIHR5cGU6ICAgICAgICAgS2FsdHVyYUJ1bGtVcGxvYWRcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVVwbG9hZFJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIE1lZGlhQnVsa1VwbG9hZEFkZEFjdGlvbiBleHRlbmRzIEthbHR1cmFVcGxvYWRSZXF1ZXN0PEthbHR1cmFCdWxrVXBsb2FkPiB7XG5cbiAgICBmaWxlRGF0YSA6IEZpbGU7XG5cdGJ1bGtVcGxvYWREYXRhIDogS2FsdHVyYUJ1bGtVcGxvYWRKb2JEYXRhO1xuXHRidWxrVXBsb2FkRW50cnlEYXRhIDogS2FsdHVyYUJ1bGtVcGxvYWRFbnRyeURhdGE7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhIDogTWVkaWFCdWxrVXBsb2FkQWRkQWN0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEsIHtyZXNwb25zZVR5cGUgOiAnbycsIHJlc3BvbnNlU3ViVHlwZSA6ICdLYWx0dXJhQnVsa1VwbG9hZCcsIHJlc3BvbnNlQ29uc3RydWN0b3IgOiBLYWx0dXJhQnVsa1VwbG9hZCAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnbWVkaWEnIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdidWxrVXBsb2FkQWRkJyB9LFxuXHRcdFx0XHRmaWxlRGF0YSA6IHsgdHlwZSA6ICdmJyB9LFxuXHRcdFx0XHRidWxrVXBsb2FkRGF0YSA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUJ1bGtVcGxvYWRKb2JEYXRhLCBzdWJUeXBlIDogJ0thbHR1cmFCdWxrVXBsb2FkSm9iRGF0YScgfSxcblx0XHRcdFx0YnVsa1VwbG9hZEVudHJ5RGF0YSA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUJ1bGtVcGxvYWRFbnRyeURhdGEsIHN1YlR5cGUgOiAnS2FsdHVyYUJ1bGtVcGxvYWRFbnRyeURhdGEnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
