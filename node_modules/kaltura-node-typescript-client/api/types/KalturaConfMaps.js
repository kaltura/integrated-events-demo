"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaConfMaps = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaConfMapsSourceLocation_1 = require("./KalturaConfMapsSourceLocation");
var KalturaConfMapsStatus_1 = require("./KalturaConfMapsStatus");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaConfMaps = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaConfMaps, _super);
    function KalturaConfMaps(data) {
        return _super.call(this, data) || this;
    }
    KalturaConfMaps.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaConfMaps' },
            name: { type: 's' },
            content: { type: 's' },
            rawData: { type: 's' },
            userId: { type: 's' },
            isEditable: { type: 'b', readOnly: true },
            createdAt: { type: 'd', readOnly: true },
            relatedHost: { type: 's' },
            version: { type: 'n', readOnly: true },
            sourceLocation: { type: 'es', subTypeConstructor: KalturaConfMapsSourceLocation_1.KalturaConfMapsSourceLocation, subType: 'KalturaConfMapsSourceLocation' },
            remarks: { type: 's' },
            status: { type: 'en', subTypeConstructor: KalturaConfMapsStatus_1.KalturaConfMapsStatus, subType: 'KalturaConfMapsStatus' },
            changeDescription: { type: 's' }
        });
        return result;
    };
    return KalturaConfMaps;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaConfMaps = KalturaConfMaps;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaConfMaps', KalturaConfMaps);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQ29uZk1hcHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxpRkFBZ0Y7QUFDaEYsaUVBQWdFO0FBQ2hFLDhEQUFrRjtBQWVsRjtJQUFxQywyQ0FBaUI7SUFlbEQseUJBQVksSUFBMkI7ZUFFbkMsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLHNDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLGlCQUFpQixFQUFFO1lBQ3BFLElBQUksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDckIsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hCLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdkIsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQzVDLFNBQVMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUMzQyxXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzVCLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUN6QyxjQUFjLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLDZEQUE2QixFQUFFLE9BQU8sRUFBRywrQkFBK0IsRUFBRTtZQUMvSCxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hCLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsNkNBQXFCLEVBQUUsT0FBTyxFQUFHLHVCQUF1QixFQUFFO1lBQ3ZHLGlCQUFpQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtTQUN6QixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsc0JBQUM7QUFBRCxDQTNDQSxBQTJDQyxDQTNDb0MsdUNBQWlCLEdBMkNyRDtBQTNDWSwwQ0FBZTtBQTZDNUIsMkNBQW1CLENBQUMsWUFBWSxDQUFDLGlCQUFpQixFQUFDLGVBQWUsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhQ29uZk1hcHMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhQ29uZk1hcHNTb3VyY2VMb2NhdGlvbiB9IGZyb20gJy4vS2FsdHVyYUNvbmZNYXBzU291cmNlTG9jYXRpb24nO1xuaW1wb3J0IHsgS2FsdHVyYUNvbmZNYXBzU3RhdHVzIH0gZnJvbSAnLi9LYWx0dXJhQ29uZk1hcHNTdGF0dXMnO1xuaW1wb3J0IHsgS2FsdHVyYU9iamVjdEJhc2UsIEthbHR1cmFPYmplY3RCYXNlQXJncyB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFDb25mTWFwc0FyZ3MgIGV4dGVuZHMgS2FsdHVyYU9iamVjdEJhc2VBcmdzIHtcbiAgICBuYW1lPyA6IHN0cmluZztcblx0Y29udGVudD8gOiBzdHJpbmc7XG5cdHJhd0RhdGE/IDogc3RyaW5nO1xuXHR1c2VySWQ/IDogc3RyaW5nO1xuXHRyZWxhdGVkSG9zdD8gOiBzdHJpbmc7XG5cdHNvdXJjZUxvY2F0aW9uPyA6IEthbHR1cmFDb25mTWFwc1NvdXJjZUxvY2F0aW9uO1xuXHRyZW1hcmtzPyA6IHN0cmluZztcblx0c3RhdHVzPyA6IEthbHR1cmFDb25mTWFwc1N0YXR1cztcblx0Y2hhbmdlRGVzY3JpcHRpb24/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhQ29uZk1hcHMgZXh0ZW5kcyBLYWx0dXJhT2JqZWN0QmFzZSB7XG5cbiAgICBuYW1lIDogc3RyaW5nO1xuXHRjb250ZW50IDogc3RyaW5nO1xuXHRyYXdEYXRhIDogc3RyaW5nO1xuXHR1c2VySWQgOiBzdHJpbmc7XG5cdHJlYWRvbmx5IGlzRWRpdGFibGUgOiBib29sZWFuO1xuXHRyZWFkb25seSBjcmVhdGVkQXQgOiBEYXRlO1xuXHRyZWxhdGVkSG9zdCA6IHN0cmluZztcblx0cmVhZG9ubHkgdmVyc2lvbiA6IG51bWJlcjtcblx0c291cmNlTG9jYXRpb24gOiBLYWx0dXJhQ29uZk1hcHNTb3VyY2VMb2NhdGlvbjtcblx0cmVtYXJrcyA6IHN0cmluZztcblx0c3RhdHVzIDogS2FsdHVyYUNvbmZNYXBzU3RhdHVzO1xuXHRjaGFuZ2VEZXNjcmlwdGlvbiA6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUNvbmZNYXBzQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFDb25mTWFwcycgfSxcblx0XHRcdFx0bmFtZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRjb250ZW50IDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHJhd0RhdGEgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0dXNlcklkIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGlzRWRpdGFibGUgOiB7IHR5cGUgOiAnYicsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRjcmVhdGVkQXQgOiB7IHR5cGUgOiAnZCcsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRyZWxhdGVkSG9zdCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHR2ZXJzaW9uIDogeyB0eXBlIDogJ24nLCByZWFkT25seSA6IHRydWUgfSxcblx0XHRcdFx0c291cmNlTG9jYXRpb24gOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQ29uZk1hcHNTb3VyY2VMb2NhdGlvbiwgc3ViVHlwZSA6ICdLYWx0dXJhQ29uZk1hcHNTb3VyY2VMb2NhdGlvbicgfSxcblx0XHRcdFx0cmVtYXJrcyA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzdGF0dXMgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQ29uZk1hcHNTdGF0dXMsIHN1YlR5cGUgOiAnS2FsdHVyYUNvbmZNYXBzU3RhdHVzJyB9LFxuXHRcdFx0XHRjaGFuZ2VEZXNjcmlwdGlvbiA6IHsgdHlwZSA6ICdzJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUNvbmZNYXBzJyxLYWx0dXJhQ29uZk1hcHMpO1xuIl19
