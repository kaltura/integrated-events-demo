"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaUiConfTypeInfo = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaUiConfObjType_1 = require("./KalturaUiConfObjType");
var KalturaString_1 = require("./KalturaString");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaUiConfTypeInfo = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaUiConfTypeInfo, _super);
    function KalturaUiConfTypeInfo(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.versions === 'undefined')
            _this.versions = [];
        return _this;
    }
    KalturaUiConfTypeInfo.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaUiConfTypeInfo' },
            type: { type: 'en', subTypeConstructor: KalturaUiConfObjType_1.KalturaUiConfObjType, subType: 'KalturaUiConfObjType' },
            versions: { type: 'a', subTypeConstructor: KalturaString_1.KalturaString, subType: 'KalturaString' },
            directory: { type: 's' },
            filename: { type: 's' }
        });
        return result;
    };
    return KalturaUiConfTypeInfo;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaUiConfTypeInfo = KalturaUiConfTypeInfo;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaUiConfTypeInfo', KalturaUiConfTypeInfo);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhVWlDb25mVHlwZUluZm8udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCwrREFBOEQ7QUFDOUQsaURBQWdEO0FBQ2hELDhEQUFrRjtBQVVsRjtJQUEyQyxpREFBaUI7SUFPeEQsK0JBQVksSUFBaUM7UUFBN0MsWUFFSSxrQkFBTSxJQUFJLENBQUMsU0FFZDtRQURHLElBQUksT0FBTyxLQUFJLENBQUMsUUFBUSxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQzs7SUFDakUsQ0FBQztJQUVTLDRDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHVCQUF1QixFQUFFO1lBQzFFLElBQUksRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsMkNBQW9CLEVBQUUsT0FBTyxFQUFHLHNCQUFzQixFQUFFO1lBQ25HLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsNkJBQWEsRUFBRSxPQUFPLEVBQUcsZUFBZSxFQUFFO1lBQ3hGLFNBQVMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDMUIsUUFBUSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtTQUNoQixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsNEJBQUM7QUFBRCxDQTVCQSxBQTRCQyxDQTVCMEMsdUNBQWlCLEdBNEIzRDtBQTVCWSxzREFBcUI7QUE4QmxDLDJDQUFtQixDQUFDLFlBQVksQ0FBQyx1QkFBdUIsRUFBQyxxQkFBcUIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhVWlDb25mVHlwZUluZm8uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhVWlDb25mT2JqVHlwZSB9IGZyb20gJy4vS2FsdHVyYVVpQ29uZk9ialR5cGUnO1xuaW1wb3J0IHsgS2FsdHVyYVN0cmluZyB9IGZyb20gJy4vS2FsdHVyYVN0cmluZyc7XG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0QmFzZSwgS2FsdHVyYU9iamVjdEJhc2VBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYVVpQ29uZlR5cGVJbmZvQXJncyAgZXh0ZW5kcyBLYWx0dXJhT2JqZWN0QmFzZUFyZ3Mge1xuICAgIHR5cGU/IDogS2FsdHVyYVVpQ29uZk9ialR5cGU7XG5cdHZlcnNpb25zPyA6IEthbHR1cmFTdHJpbmdbXTtcblx0ZGlyZWN0b3J5PyA6IHN0cmluZztcblx0ZmlsZW5hbWU/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhVWlDb25mVHlwZUluZm8gZXh0ZW5kcyBLYWx0dXJhT2JqZWN0QmFzZSB7XG5cbiAgICB0eXBlIDogS2FsdHVyYVVpQ29uZk9ialR5cGU7XG5cdHZlcnNpb25zIDogS2FsdHVyYVN0cmluZ1tdO1xuXHRkaXJlY3RvcnkgOiBzdHJpbmc7XG5cdGZpbGVuYW1lIDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhVWlDb25mVHlwZUluZm9BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy52ZXJzaW9ucyA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMudmVyc2lvbnMgPSBbXTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhVWlDb25mVHlwZUluZm8nIH0sXG5cdFx0XHRcdHR5cGUgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhVWlDb25mT2JqVHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhVWlDb25mT2JqVHlwZScgfSxcblx0XHRcdFx0dmVyc2lvbnMgOiB7IHR5cGUgOiAnYScsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFTdHJpbmcsIHN1YlR5cGUgOiAnS2FsdHVyYVN0cmluZycgfSxcblx0XHRcdFx0ZGlyZWN0b3J5IDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGZpbGVuYW1lIDogeyB0eXBlIDogJ3MnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhVWlDb25mVHlwZUluZm8nLEthbHR1cmFVaUNvbmZUeXBlSW5mbyk7XG4iXX0=
