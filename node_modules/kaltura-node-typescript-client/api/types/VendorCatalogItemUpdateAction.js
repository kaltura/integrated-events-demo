"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VendorCatalogItemUpdateAction = void 0;
var tslib_1 = require("tslib");
var KalturaVendorCatalogItem_1 = require("./KalturaVendorCatalogItem");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'vendorCatalogItem' action 'update'.
 *
 * Usage: Update an existing vedor catalog item object
 *
 * Server response type:         KalturaVendorCatalogItem
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var VendorCatalogItemUpdateAction = /** @class */ (function (_super) {
    tslib_1.__extends(VendorCatalogItemUpdateAction, _super);
    function VendorCatalogItemUpdateAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaVendorCatalogItem', responseConstructor: KalturaVendorCatalogItem_1.KalturaVendorCatalogItem }) || this;
    }
    VendorCatalogItemUpdateAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'reach_vendorcatalogitem' },
            action: { type: 'c', default: 'update' },
            id: { type: 'n' },
            vendorCatalogItem: { type: 'o', subTypeConstructor: KalturaVendorCatalogItem_1.KalturaVendorCatalogItem, subType: 'KalturaVendorCatalogItem' }
        });
        return result;
    };
    return VendorCatalogItemUpdateAction;
}(kaltura_request_1.KalturaRequest));
exports.VendorCatalogItemUpdateAction = VendorCatalogItemUpdateAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9WZW5kb3JDYXRhbG9nSXRlbVVwZGF0ZUFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsdUVBQXNFO0FBRXRFLHNEQUF3RTtBQU94RTs7Ozs7Ozs7O0dBU0c7QUFDSDtJQUFtRCx5REFBd0M7SUFLdkYsdUNBQVksSUFBd0M7ZUFFaEQsa0JBQU0sSUFBSSxFQUFFLEVBQUMsWUFBWSxFQUFHLEdBQUcsRUFBRSxlQUFlLEVBQUcsMEJBQTBCLEVBQUUsbUJBQW1CLEVBQUcsbURBQXdCLEVBQUcsQ0FBQztJQUNySSxDQUFDO0lBRVMsb0RBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcseUJBQXlCLEVBQUU7WUFDekUsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsUUFBUSxFQUFFO1lBQzNDLEVBQUUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDbkIsaUJBQWlCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLG1EQUF3QixFQUFFLE9BQU8sRUFBRywwQkFBMEIsRUFBRTtTQUM5RyxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsb0NBQUM7QUFBRCxDQXhCQSxBQXdCQyxDQXhCa0QsZ0NBQWMsR0F3QmhFO0FBeEJZLHNFQUE2QiIsImZpbGUiOiJhcGkvdHlwZXMvVmVuZG9yQ2F0YWxvZ0l0ZW1VcGRhdGVBY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVZlbmRvckNhdGFsb2dJdGVtIH0gZnJvbSAnLi9LYWx0dXJhVmVuZG9yQ2F0YWxvZ0l0ZW0nO1xuXG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBWZW5kb3JDYXRhbG9nSXRlbVVwZGF0ZUFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBpZCA6IG51bWJlcjtcblx0dmVuZG9yQ2F0YWxvZ0l0ZW0gOiBLYWx0dXJhVmVuZG9yQ2F0YWxvZ0l0ZW07XG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICd2ZW5kb3JDYXRhbG9nSXRlbScgYWN0aW9uICd1cGRhdGUnLlxuICpcbiAqIFVzYWdlOiBVcGRhdGUgYW4gZXhpc3RpbmcgdmVkb3IgY2F0YWxvZyBpdGVtIG9iamVjdFxuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIEthbHR1cmFWZW5kb3JDYXRhbG9nSXRlbVxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgVmVuZG9yQ2F0YWxvZ0l0ZW1VcGRhdGVBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdDxLYWx0dXJhVmVuZG9yQ2F0YWxvZ0l0ZW0+IHtcblxuICAgIGlkIDogbnVtYmVyO1xuXHR2ZW5kb3JDYXRhbG9nSXRlbSA6IEthbHR1cmFWZW5kb3JDYXRhbG9nSXRlbTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBWZW5kb3JDYXRhbG9nSXRlbVVwZGF0ZUFjdGlvbkFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhLCB7cmVzcG9uc2VUeXBlIDogJ28nLCByZXNwb25zZVN1YlR5cGUgOiAnS2FsdHVyYVZlbmRvckNhdGFsb2dJdGVtJywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IEthbHR1cmFWZW5kb3JDYXRhbG9nSXRlbSAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAncmVhY2hfdmVuZG9yY2F0YWxvZ2l0ZW0nIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICd1cGRhdGUnIH0sXG5cdFx0XHRcdGlkIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdHZlbmRvckNhdGFsb2dJdGVtIDogeyB0eXBlIDogJ28nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhVmVuZG9yQ2F0YWxvZ0l0ZW0sIHN1YlR5cGUgOiAnS2FsdHVyYVZlbmRvckNhdGFsb2dJdGVtJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG4iXX0=
