"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaDeliveryProfileForensicWatermark = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaKeyValue_1 = require("./KalturaKeyValue");
var KalturaDeliveryProfile_1 = require("./KalturaDeliveryProfile");
var KalturaDeliveryProfileForensicWatermark = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaDeliveryProfileForensicWatermark, _super);
    function KalturaDeliveryProfileForensicWatermark(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.internalUrl === 'undefined')
            _this.internalUrl = [];
        return _this;
    }
    KalturaDeliveryProfileForensicWatermark.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaDeliveryProfileForensicWatermark' },
            internalUrl: { type: 'a', subTypeConstructor: KalturaKeyValue_1.KalturaKeyValue, subType: 'KalturaKeyValue' },
            encryptionKey: { type: 's' },
            encryptionIv: { type: 's' },
            encryptionRegex: { type: 's' }
        });
        return result;
    };
    return KalturaDeliveryProfileForensicWatermark;
}(KalturaDeliveryProfile_1.KalturaDeliveryProfile));
exports.KalturaDeliveryProfileForensicWatermark = KalturaDeliveryProfileForensicWatermark;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaDeliveryProfileForensicWatermark', KalturaDeliveryProfileForensicWatermark);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRGVsaXZlcnlQcm9maWxlRm9yZW5zaWNXYXRlcm1hcmsudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxxREFBb0Q7QUFDcEQsbUVBQThGO0FBVTlGO0lBQTZELG1FQUFzQjtJQU8vRSxpREFBWSxJQUFtRDtRQUEvRCxZQUVJLGtCQUFNLElBQUksQ0FBQyxTQUVkO1FBREcsSUFBSSxPQUFPLEtBQUksQ0FBQyxXQUFXLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxXQUFXLEdBQUcsRUFBRSxDQUFDOztJQUN2RSxDQUFDO0lBRVMsOERBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcseUNBQXlDLEVBQUU7WUFDNUYsV0FBVyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxpQ0FBZSxFQUFFLE9BQU8sRUFBRyxpQkFBaUIsRUFBRTtZQUMvRixhQUFhLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzlCLFlBQVksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDN0IsZUFBZSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtTQUN2QixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsOENBQUM7QUFBRCxDQTVCQSxBQTRCQyxDQTVCNEQsK0NBQXNCLEdBNEJsRjtBQTVCWSwwRkFBdUM7QUE4QnBELDJDQUFtQixDQUFDLFlBQVksQ0FBQyx5Q0FBeUMsRUFBQyx1Q0FBdUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhRGVsaXZlcnlQcm9maWxlRm9yZW5zaWNXYXRlcm1hcmsuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhS2V5VmFsdWUgfSBmcm9tICcuL0thbHR1cmFLZXlWYWx1ZSc7XG5pbXBvcnQgeyBLYWx0dXJhRGVsaXZlcnlQcm9maWxlLCBLYWx0dXJhRGVsaXZlcnlQcm9maWxlQXJncyB9IGZyb20gJy4vS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUZvcmVuc2ljV2F0ZXJtYXJrQXJncyAgZXh0ZW5kcyBLYWx0dXJhRGVsaXZlcnlQcm9maWxlQXJncyB7XG4gICAgaW50ZXJuYWxVcmw/IDogS2FsdHVyYUtleVZhbHVlW107XG5cdGVuY3J5cHRpb25LZXk/IDogc3RyaW5nO1xuXHRlbmNyeXB0aW9uSXY/IDogc3RyaW5nO1xuXHRlbmNyeXB0aW9uUmVnZXg/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhRGVsaXZlcnlQcm9maWxlRm9yZW5zaWNXYXRlcm1hcmsgZXh0ZW5kcyBLYWx0dXJhRGVsaXZlcnlQcm9maWxlIHtcblxuICAgIGludGVybmFsVXJsIDogS2FsdHVyYUtleVZhbHVlW107XG5cdGVuY3J5cHRpb25LZXkgOiBzdHJpbmc7XG5cdGVuY3J5cHRpb25JdiA6IHN0cmluZztcblx0ZW5jcnlwdGlvblJlZ2V4IDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhRGVsaXZlcnlQcm9maWxlRm9yZW5zaWNXYXRlcm1hcmtBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5pbnRlcm5hbFVybCA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMuaW50ZXJuYWxVcmwgPSBbXTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhRGVsaXZlcnlQcm9maWxlRm9yZW5zaWNXYXRlcm1hcmsnIH0sXG5cdFx0XHRcdGludGVybmFsVXJsIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhS2V5VmFsdWUsIHN1YlR5cGUgOiAnS2FsdHVyYUtleVZhbHVlJyB9LFxuXHRcdFx0XHRlbmNyeXB0aW9uS2V5IDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGVuY3J5cHRpb25JdiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRlbmNyeXB0aW9uUmVnZXggOiB7IHR5cGUgOiAncycgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFEZWxpdmVyeVByb2ZpbGVGb3JlbnNpY1dhdGVybWFyaycsS2FsdHVyYURlbGl2ZXJ5UHJvZmlsZUZvcmVuc2ljV2F0ZXJtYXJrKTtcbiJdfQ==
