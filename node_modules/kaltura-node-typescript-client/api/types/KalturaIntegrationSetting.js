"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaIntegrationSetting = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaVendorIntegrationStatus_1 = require("./KalturaVendorIntegrationStatus");
var KalturaNullableBoolean_1 = require("./KalturaNullableBoolean");
var KalturaHandleParticipantsMode_1 = require("./KalturaHandleParticipantsMode");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaIntegrationSetting = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaIntegrationSetting, _super);
    function KalturaIntegrationSetting(data) {
        return _super.call(this, data) || this;
    }
    KalturaIntegrationSetting.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaIntegrationSetting' },
            id: { type: 'n', readOnly: true },
            status: { type: 'en', readOnly: true, subTypeConstructor: KalturaVendorIntegrationStatus_1.KalturaVendorIntegrationStatus, subType: 'KalturaVendorIntegrationStatus' },
            defaultUserId: { type: 's' },
            accountId: { type: 's', readOnly: true },
            createUserIfNotExist: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            conversionProfileId: { type: 'n' },
            handleParticipantsMode: { type: 'en', subTypeConstructor: KalturaHandleParticipantsMode_1.KalturaHandleParticipantsMode, subType: 'KalturaHandleParticipantsMode' },
            deletionPolicy: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            createdAt: { type: 's', readOnly: true },
            updatedAt: { type: 's', readOnly: true },
            partnerId: { type: 'n', readOnly: true },
            enableMeetingUpload: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            enableMeetingChat: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' }
        });
        return result;
    };
    return KalturaIntegrationSetting;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaIntegrationSetting = KalturaIntegrationSetting;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaIntegrationSetting', KalturaIntegrationSetting);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhSW50ZWdyYXRpb25TZXR0aW5nLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsbUZBQWtGO0FBQ2xGLG1FQUFrRTtBQUNsRSxpRkFBZ0Y7QUFDaEYsOERBQWtGO0FBYWxGO0lBQStDLHFEQUFpQjtJQWdCNUQsbUNBQVksSUFBcUM7ZUFFN0Msa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLGdEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDJCQUEyQixFQUFFO1lBQzlFLEVBQUUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUNwQyxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsK0RBQThCLEVBQUUsT0FBTyxFQUFHLGdDQUFnQyxFQUFFO1lBQzFJLGFBQWEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDOUIsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQzNDLG9CQUFvQixFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywrQ0FBc0IsRUFBRSxPQUFPLEVBQUcsd0JBQXdCLEVBQUU7WUFDdkgsbUJBQW1CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3BDLHNCQUFzQixFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyw2REFBNkIsRUFBRSxPQUFPLEVBQUcsK0JBQStCLEVBQUU7WUFDdkksY0FBYyxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywrQ0FBc0IsRUFBRSxPQUFPLEVBQUcsd0JBQXdCLEVBQUU7WUFDakgsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQzNDLFNBQVMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUMzQyxTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDM0MsbUJBQW1CLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLCtDQUFzQixFQUFFLE9BQU8sRUFBRyx3QkFBd0IsRUFBRTtZQUN0SCxpQkFBaUIsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsK0NBQXNCLEVBQUUsT0FBTyxFQUFHLHdCQUF3QixFQUFFO1NBQzNHLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxnQ0FBQztBQUFELENBN0NBLEFBNkNDLENBN0M4Qyx1Q0FBaUIsR0E2Qy9EO0FBN0NZLDhEQUF5QjtBQStDdEMsMkNBQW1CLENBQUMsWUFBWSxDQUFDLDJCQUEyQixFQUFDLHlCQUF5QixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFJbnRlZ3JhdGlvblNldHRpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhVmVuZG9ySW50ZWdyYXRpb25TdGF0dXMgfSBmcm9tICcuL0thbHR1cmFWZW5kb3JJbnRlZ3JhdGlvblN0YXR1cyc7XG5pbXBvcnQgeyBLYWx0dXJhTnVsbGFibGVCb29sZWFuIH0gZnJvbSAnLi9LYWx0dXJhTnVsbGFibGVCb29sZWFuJztcbmltcG9ydCB7IEthbHR1cmFIYW5kbGVQYXJ0aWNpcGFudHNNb2RlIH0gZnJvbSAnLi9LYWx0dXJhSGFuZGxlUGFydGljaXBhbnRzTW9kZSc7XG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0QmFzZSwgS2FsdHVyYU9iamVjdEJhc2VBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYUludGVncmF0aW9uU2V0dGluZ0FyZ3MgIGV4dGVuZHMgS2FsdHVyYU9iamVjdEJhc2VBcmdzIHtcbiAgICBkZWZhdWx0VXNlcklkPyA6IHN0cmluZztcblx0Y3JlYXRlVXNlcklmTm90RXhpc3Q/IDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcblx0Y29udmVyc2lvblByb2ZpbGVJZD8gOiBudW1iZXI7XG5cdGhhbmRsZVBhcnRpY2lwYW50c01vZGU/IDogS2FsdHVyYUhhbmRsZVBhcnRpY2lwYW50c01vZGU7XG5cdGRlbGV0aW9uUG9saWN5PyA6IEthbHR1cmFOdWxsYWJsZUJvb2xlYW47XG5cdGVuYWJsZU1lZXRpbmdVcGxvYWQ/IDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcblx0ZW5hYmxlTWVldGluZ0NoYXQ/IDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYUludGVncmF0aW9uU2V0dGluZyBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlIHtcblxuICAgIHJlYWRvbmx5IGlkIDogbnVtYmVyO1xuXHRyZWFkb25seSBzdGF0dXMgOiBLYWx0dXJhVmVuZG9ySW50ZWdyYXRpb25TdGF0dXM7XG5cdGRlZmF1bHRVc2VySWQgOiBzdHJpbmc7XG5cdHJlYWRvbmx5IGFjY291bnRJZCA6IHN0cmluZztcblx0Y3JlYXRlVXNlcklmTm90RXhpc3QgOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuO1xuXHRjb252ZXJzaW9uUHJvZmlsZUlkIDogbnVtYmVyO1xuXHRoYW5kbGVQYXJ0aWNpcGFudHNNb2RlIDogS2FsdHVyYUhhbmRsZVBhcnRpY2lwYW50c01vZGU7XG5cdGRlbGV0aW9uUG9saWN5IDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcblx0cmVhZG9ubHkgY3JlYXRlZEF0IDogc3RyaW5nO1xuXHRyZWFkb25seSB1cGRhdGVkQXQgOiBzdHJpbmc7XG5cdHJlYWRvbmx5IHBhcnRuZXJJZCA6IG51bWJlcjtcblx0ZW5hYmxlTWVldGluZ1VwbG9hZCA6IEthbHR1cmFOdWxsYWJsZUJvb2xlYW47XG5cdGVuYWJsZU1lZXRpbmdDaGF0IDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUludGVncmF0aW9uU2V0dGluZ0FyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhSW50ZWdyYXRpb25TZXR0aW5nJyB9LFxuXHRcdFx0XHRpZCA6IHsgdHlwZSA6ICduJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdHN0YXR1cyA6IHsgdHlwZSA6ICdlbicsIHJlYWRPbmx5IDogdHJ1ZSwgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVZlbmRvckludGVncmF0aW9uU3RhdHVzLCBzdWJUeXBlIDogJ0thbHR1cmFWZW5kb3JJbnRlZ3JhdGlvblN0YXR1cycgfSxcblx0XHRcdFx0ZGVmYXVsdFVzZXJJZCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRhY2NvdW50SWQgOiB7IHR5cGUgOiAncycsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRjcmVhdGVVc2VySWZOb3RFeGlzdCA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFOdWxsYWJsZUJvb2xlYW4sIHN1YlR5cGUgOiAnS2FsdHVyYU51bGxhYmxlQm9vbGVhbicgfSxcblx0XHRcdFx0Y29udmVyc2lvblByb2ZpbGVJZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRoYW5kbGVQYXJ0aWNpcGFudHNNb2RlIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUhhbmRsZVBhcnRpY2lwYW50c01vZGUsIHN1YlR5cGUgOiAnS2FsdHVyYUhhbmRsZVBhcnRpY2lwYW50c01vZGUnIH0sXG5cdFx0XHRcdGRlbGV0aW9uUG9saWN5IDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbiwgc3ViVHlwZSA6ICdLYWx0dXJhTnVsbGFibGVCb29sZWFuJyB9LFxuXHRcdFx0XHRjcmVhdGVkQXQgOiB7IHR5cGUgOiAncycsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHR1cGRhdGVkQXQgOiB7IHR5cGUgOiAncycsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRwYXJ0bmVySWQgOiB7IHR5cGUgOiAnbicsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRlbmFibGVNZWV0aW5nVXBsb2FkIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbiwgc3ViVHlwZSA6ICdLYWx0dXJhTnVsbGFibGVCb29sZWFuJyB9LFxuXHRcdFx0XHRlbmFibGVNZWV0aW5nQ2hhdCA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFOdWxsYWJsZUJvb2xlYW4sIHN1YlR5cGUgOiAnS2FsdHVyYU51bGxhYmxlQm9vbGVhbicgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFJbnRlZ3JhdGlvblNldHRpbmcnLEthbHR1cmFJbnRlZ3JhdGlvblNldHRpbmcpO1xuIl19
