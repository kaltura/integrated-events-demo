"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaBaseEntry = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaMultiLingualString_1 = require("./KalturaMultiLingualString");
var KalturaEntryStatus_1 = require("./KalturaEntryStatus");
var KalturaEntryModerationStatus_1 = require("./KalturaEntryModerationStatus");
var KalturaEntryType_1 = require("./KalturaEntryType");
var KalturaLicenseType_1 = require("./KalturaLicenseType");
var KalturaEntryReplacementStatus_1 = require("./KalturaEntryReplacementStatus");
var KalturaOperationAttributes_1 = require("./KalturaOperationAttributes");
var KalturaEntryDisplayInSearchType_1 = require("./KalturaEntryDisplayInSearchType");
var KalturaEntryApplication_1 = require("./KalturaEntryApplication");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaBaseEntry = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaBaseEntry, _super);
    function KalturaBaseEntry(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.multiLingual_name === 'undefined')
            _this.multiLingual_name = [];
        if (typeof _this.multiLingual_description === 'undefined')
            _this.multiLingual_description = [];
        if (typeof _this.multiLingual_tags === 'undefined')
            _this.multiLingual_tags = [];
        if (typeof _this.operationAttributes === 'undefined')
            _this.operationAttributes = [];
        return _this;
    }
    KalturaBaseEntry.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaBaseEntry' },
            id: { type: 's', readOnly: true },
            name: { type: 's' },
            multiLingual_name: { type: 'a', subTypeConstructor: KalturaMultiLingualString_1.KalturaMultiLingualString, subType: 'KalturaMultiLingualString' },
            description: { type: 's' },
            multiLingual_description: { type: 'a', subTypeConstructor: KalturaMultiLingualString_1.KalturaMultiLingualString, subType: 'KalturaMultiLingualString' },
            partnerId: { type: 'n', readOnly: true },
            userId: { type: 's' },
            creatorId: { type: 's' },
            tags: { type: 's' },
            multiLingual_tags: { type: 'a', subTypeConstructor: KalturaMultiLingualString_1.KalturaMultiLingualString, subType: 'KalturaMultiLingualString' },
            adminTags: { type: 's' },
            categories: { type: 's' },
            categoriesIds: { type: 's' },
            status: { type: 'es', readOnly: true, subTypeConstructor: KalturaEntryStatus_1.KalturaEntryStatus, subType: 'KalturaEntryStatus' },
            moderationStatus: { type: 'en', readOnly: true, subTypeConstructor: KalturaEntryModerationStatus_1.KalturaEntryModerationStatus, subType: 'KalturaEntryModerationStatus' },
            moderationCount: { type: 'n', readOnly: true },
            type: { type: 'es', subTypeConstructor: KalturaEntryType_1.KalturaEntryType, subType: 'KalturaEntryType' },
            createdAt: { type: 'd', readOnly: true },
            updatedAt: { type: 'd', readOnly: true },
            rank: { type: 'n', readOnly: true },
            totalRank: { type: 'n', readOnly: true },
            votes: { type: 'n', readOnly: true },
            groupId: { type: 'n' },
            partnerData: { type: 's' },
            downloadUrl: { type: 's', readOnly: true },
            searchText: { type: 's', readOnly: true },
            licenseType: { type: 'en', subTypeConstructor: KalturaLicenseType_1.KalturaLicenseType, subType: 'KalturaLicenseType' },
            version: { type: 'n', readOnly: true },
            thumbnailUrl: { type: 's', readOnly: true },
            accessControlId: { type: 'n' },
            startDate: { type: 'd' },
            endDate: { type: 'd' },
            referenceId: { type: 's' },
            replacingEntryId: { type: 's', readOnly: true },
            replacedEntryId: { type: 's', readOnly: true },
            replacementStatus: { type: 'es', readOnly: true, subTypeConstructor: KalturaEntryReplacementStatus_1.KalturaEntryReplacementStatus, subType: 'KalturaEntryReplacementStatus' },
            partnerSortValue: { type: 'n' },
            conversionProfileId: { type: 'n' },
            redirectEntryId: { type: 's' },
            rootEntryId: { type: 's', readOnly: true },
            parentEntryId: { type: 's' },
            operationAttributes: { type: 'a', subTypeConstructor: KalturaOperationAttributes_1.KalturaOperationAttributes, subType: 'KalturaOperationAttributes' },
            entitledUsersEdit: { type: 's' },
            entitledUsersPublish: { type: 's' },
            entitledUsersView: { type: 's' },
            capabilities: { type: 's', readOnly: true },
            templateEntryId: { type: 's' },
            displayInSearch: { type: 'en', subTypeConstructor: KalturaEntryDisplayInSearchType_1.KalturaEntryDisplayInSearchType, subType: 'KalturaEntryDisplayInSearchType' },
            application: { type: 'es', subTypeConstructor: KalturaEntryApplication_1.KalturaEntryApplication, subType: 'KalturaEntryApplication' },
            applicationVersion: { type: 's' },
            blockAutoTranscript: { type: 'b' },
            defaultLanguage: { type: 's', readOnly: true },
            responseLanguage: { type: 's', readOnly: true }
        });
        return result;
    };
    return KalturaBaseEntry;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaBaseEntry = KalturaBaseEntry;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaBaseEntry', KalturaBaseEntry);

//# sourceMappingURL=data:application/json;charset=utf8;base64,
