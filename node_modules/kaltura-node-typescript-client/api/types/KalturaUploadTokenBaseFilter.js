"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaUploadTokenBaseFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaUploadTokenStatus_1 = require("./KalturaUploadTokenStatus");
var KalturaFilter_1 = require("./KalturaFilter");
var KalturaUploadTokenBaseFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaUploadTokenBaseFilter, _super);
    function KalturaUploadTokenBaseFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaUploadTokenBaseFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaUploadTokenBaseFilter' },
            idEqual: { type: 's' },
            idIn: { type: 's' },
            userIdEqual: { type: 's' },
            statusEqual: { type: 'en', subTypeConstructor: KalturaUploadTokenStatus_1.KalturaUploadTokenStatus, subType: 'KalturaUploadTokenStatus' },
            statusIn: { type: 's' },
            fileNameEqual: { type: 's' },
            fileSizeEqual: { type: 'n' }
        });
        return result;
    };
    return KalturaUploadTokenBaseFilter;
}(KalturaFilter_1.KalturaFilter));
exports.KalturaUploadTokenBaseFilter = KalturaUploadTokenBaseFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaUploadTokenBaseFilter', KalturaUploadTokenBaseFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhVXBsb2FkVG9rZW5CYXNlRmlsdGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsdUVBQXNFO0FBQ3RFLGlEQUFtRTtBQWFuRTtJQUFrRCx3REFBYTtJQVUzRCxzQ0FBWSxJQUF3QztlQUVoRCxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMsbURBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsOEJBQThCLEVBQUU7WUFDakYsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixJQUFJLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3JCLFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDNUIsV0FBVyxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyxtREFBd0IsRUFBRSxPQUFPLEVBQUcsMEJBQTBCLEVBQUU7WUFDbEgsUUFBUSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN6QixhQUFhLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzlCLGFBQWEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDckIsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLG1DQUFDO0FBQUQsQ0FqQ0EsQUFpQ0MsQ0FqQ2lELDZCQUFhLEdBaUM5RDtBQWpDWSxvRUFBNEI7QUFtQ3pDLDJDQUFtQixDQUFDLFlBQVksQ0FBQyw4QkFBOEIsRUFBQyw0QkFBNEIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhVXBsb2FkVG9rZW5CYXNlRmlsdGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYVVwbG9hZFRva2VuU3RhdHVzIH0gZnJvbSAnLi9LYWx0dXJhVXBsb2FkVG9rZW5TdGF0dXMnO1xuaW1wb3J0IHsgS2FsdHVyYUZpbHRlciwgS2FsdHVyYUZpbHRlckFyZ3MgfSBmcm9tICcuL0thbHR1cmFGaWx0ZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFVcGxvYWRUb2tlbkJhc2VGaWx0ZXJBcmdzICBleHRlbmRzIEthbHR1cmFGaWx0ZXJBcmdzIHtcbiAgICBpZEVxdWFsPyA6IHN0cmluZztcblx0aWRJbj8gOiBzdHJpbmc7XG5cdHVzZXJJZEVxdWFsPyA6IHN0cmluZztcblx0c3RhdHVzRXF1YWw/IDogS2FsdHVyYVVwbG9hZFRva2VuU3RhdHVzO1xuXHRzdGF0dXNJbj8gOiBzdHJpbmc7XG5cdGZpbGVOYW1lRXF1YWw/IDogc3RyaW5nO1xuXHRmaWxlU2l6ZUVxdWFsPyA6IG51bWJlcjtcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYVVwbG9hZFRva2VuQmFzZUZpbHRlciBleHRlbmRzIEthbHR1cmFGaWx0ZXIge1xuXG4gICAgaWRFcXVhbCA6IHN0cmluZztcblx0aWRJbiA6IHN0cmluZztcblx0dXNlcklkRXF1YWwgOiBzdHJpbmc7XG5cdHN0YXR1c0VxdWFsIDogS2FsdHVyYVVwbG9hZFRva2VuU3RhdHVzO1xuXHRzdGF0dXNJbiA6IHN0cmluZztcblx0ZmlsZU5hbWVFcXVhbCA6IHN0cmluZztcblx0ZmlsZVNpemVFcXVhbCA6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYVVwbG9hZFRva2VuQmFzZUZpbHRlckFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhVXBsb2FkVG9rZW5CYXNlRmlsdGVyJyB9LFxuXHRcdFx0XHRpZEVxdWFsIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGlkSW4gOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0dXNlcklkRXF1YWwgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c3RhdHVzRXF1YWwgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhVXBsb2FkVG9rZW5TdGF0dXMsIHN1YlR5cGUgOiAnS2FsdHVyYVVwbG9hZFRva2VuU3RhdHVzJyB9LFxuXHRcdFx0XHRzdGF0dXNJbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRmaWxlTmFtZUVxdWFsIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGZpbGVTaXplRXF1YWwgOiB7IHR5cGUgOiAnbicgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFVcGxvYWRUb2tlbkJhc2VGaWx0ZXInLEthbHR1cmFVcGxvYWRUb2tlbkJhc2VGaWx0ZXIpO1xuIl19
