"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaZoomIntegrationSetting = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaNullableBoolean_1 = require("./KalturaNullableBoolean");
var KalturaZoomUsersMatching_1 = require("./KalturaZoomUsersMatching");
var KalturaZoomGroupParticipationType_1 = require("./KalturaZoomGroupParticipationType");
var KalturaHandleParticipantsMode_1 = require("./KalturaHandleParticipantsMode");
var KalturaIntegrationSetting_1 = require("./KalturaIntegrationSetting");
var KalturaZoomIntegrationSetting = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaZoomIntegrationSetting, _super);
    function KalturaZoomIntegrationSetting(data) {
        return _super.call(this, data) || this;
    }
    KalturaZoomIntegrationSetting.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaZoomIntegrationSetting' },
            zoomCategory: { type: 's' },
            enableRecordingUpload: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            zoomUserMatchingMode: { type: 'en', subTypeConstructor: KalturaZoomUsersMatching_1.KalturaZoomUsersMatching, subType: 'KalturaZoomUsersMatching' },
            zoomUserPostfix: { type: 's' },
            zoomWebinarCategory: { type: 's' },
            enableWebinarUploads: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            enableZoomTranscription: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            zoomAccountDescription: { type: 's' },
            optOutGroupNames: { type: 's' },
            optInGroupNames: { type: 's' },
            groupParticipationType: { type: 'en', subTypeConstructor: KalturaZoomGroupParticipationType_1.KalturaZoomGroupParticipationType, subType: 'KalturaZoomGroupParticipationType' },
            handleCohostsMode: { type: 'en', subTypeConstructor: KalturaHandleParticipantsMode_1.KalturaHandleParticipantsMode, subType: 'KalturaHandleParticipantsMode' },
            handleAlternativeHostsMode: { type: 'en', subTypeConstructor: KalturaHandleParticipantsMode_1.KalturaHandleParticipantsMode, subType: 'KalturaHandleParticipantsMode' }
        });
        return result;
    };
    return KalturaZoomIntegrationSetting;
}(KalturaIntegrationSetting_1.KalturaIntegrationSetting));
exports.KalturaZoomIntegrationSetting = KalturaZoomIntegrationSetting;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaZoomIntegrationSetting', KalturaZoomIntegrationSetting);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhWm9vbUludGVncmF0aW9uU2V0dGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELG1FQUFrRTtBQUNsRSx1RUFBc0U7QUFDdEUseUZBQXdGO0FBQ3hGLGlGQUFnRjtBQUNoRix5RUFBdUc7QUFtQnZHO0lBQW1ELHlEQUF5QjtJQWdCeEUsdUNBQVksSUFBeUM7ZUFFakQsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLG9EQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLCtCQUErQixFQUFFO1lBQ2xGLFlBQVksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDN0IscUJBQXFCLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLCtDQUFzQixFQUFFLE9BQU8sRUFBRyx3QkFBd0IsRUFBRTtZQUN4SCxvQkFBb0IsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsbURBQXdCLEVBQUUsT0FBTyxFQUFHLDBCQUEwQixFQUFFO1lBQzNILGVBQWUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDaEMsbUJBQW1CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3BDLG9CQUFvQixFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywrQ0FBc0IsRUFBRSxPQUFPLEVBQUcsd0JBQXdCLEVBQUU7WUFDdkgsdUJBQXVCLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLCtDQUFzQixFQUFFLE9BQU8sRUFBRyx3QkFBd0IsRUFBRTtZQUMxSCxzQkFBc0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdkMsZ0JBQWdCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ2pDLGVBQWUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDaEMsc0JBQXNCLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLHFFQUFpQyxFQUFFLE9BQU8sRUFBRyxtQ0FBbUMsRUFBRTtZQUMvSSxpQkFBaUIsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsNkRBQTZCLEVBQUUsT0FBTyxFQUFHLCtCQUErQixFQUFFO1lBQ2xJLDBCQUEwQixFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyw2REFBNkIsRUFBRSxPQUFPLEVBQUcsK0JBQStCLEVBQUU7U0FDbEksQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLG9DQUFDO0FBQUQsQ0E3Q0EsQUE2Q0MsQ0E3Q2tELHFEQUF5QixHQTZDM0U7QUE3Q1ksc0VBQTZCO0FBK0MxQywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsK0JBQStCLEVBQUMsNkJBQTZCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYVpvb21JbnRlZ3JhdGlvblNldHRpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhTnVsbGFibGVCb29sZWFuIH0gZnJvbSAnLi9LYWx0dXJhTnVsbGFibGVCb29sZWFuJztcbmltcG9ydCB7IEthbHR1cmFab29tVXNlcnNNYXRjaGluZyB9IGZyb20gJy4vS2FsdHVyYVpvb21Vc2Vyc01hdGNoaW5nJztcbmltcG9ydCB7IEthbHR1cmFab29tR3JvdXBQYXJ0aWNpcGF0aW9uVHlwZSB9IGZyb20gJy4vS2FsdHVyYVpvb21Hcm91cFBhcnRpY2lwYXRpb25UeXBlJztcbmltcG9ydCB7IEthbHR1cmFIYW5kbGVQYXJ0aWNpcGFudHNNb2RlIH0gZnJvbSAnLi9LYWx0dXJhSGFuZGxlUGFydGljaXBhbnRzTW9kZSc7XG5pbXBvcnQgeyBLYWx0dXJhSW50ZWdyYXRpb25TZXR0aW5nLCBLYWx0dXJhSW50ZWdyYXRpb25TZXR0aW5nQXJncyB9IGZyb20gJy4vS2FsdHVyYUludGVncmF0aW9uU2V0dGluZyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYVpvb21JbnRlZ3JhdGlvblNldHRpbmdBcmdzICBleHRlbmRzIEthbHR1cmFJbnRlZ3JhdGlvblNldHRpbmdBcmdzIHtcbiAgICB6b29tQ2F0ZWdvcnk/IDogc3RyaW5nO1xuXHRlbmFibGVSZWNvcmRpbmdVcGxvYWQ/IDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcblx0em9vbVVzZXJNYXRjaGluZ01vZGU/IDogS2FsdHVyYVpvb21Vc2Vyc01hdGNoaW5nO1xuXHR6b29tVXNlclBvc3RmaXg/IDogc3RyaW5nO1xuXHR6b29tV2ViaW5hckNhdGVnb3J5PyA6IHN0cmluZztcblx0ZW5hYmxlV2ViaW5hclVwbG9hZHM/IDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcblx0ZW5hYmxlWm9vbVRyYW5zY3JpcHRpb24/IDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcblx0em9vbUFjY291bnREZXNjcmlwdGlvbj8gOiBzdHJpbmc7XG5cdG9wdE91dEdyb3VwTmFtZXM/IDogc3RyaW5nO1xuXHRvcHRJbkdyb3VwTmFtZXM/IDogc3RyaW5nO1xuXHRncm91cFBhcnRpY2lwYXRpb25UeXBlPyA6IEthbHR1cmFab29tR3JvdXBQYXJ0aWNpcGF0aW9uVHlwZTtcblx0aGFuZGxlQ29ob3N0c01vZGU/IDogS2FsdHVyYUhhbmRsZVBhcnRpY2lwYW50c01vZGU7XG5cdGhhbmRsZUFsdGVybmF0aXZlSG9zdHNNb2RlPyA6IEthbHR1cmFIYW5kbGVQYXJ0aWNpcGFudHNNb2RlO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhWm9vbUludGVncmF0aW9uU2V0dGluZyBleHRlbmRzIEthbHR1cmFJbnRlZ3JhdGlvblNldHRpbmcge1xuXG4gICAgem9vbUNhdGVnb3J5IDogc3RyaW5nO1xuXHRlbmFibGVSZWNvcmRpbmdVcGxvYWQgOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuO1xuXHR6b29tVXNlck1hdGNoaW5nTW9kZSA6IEthbHR1cmFab29tVXNlcnNNYXRjaGluZztcblx0em9vbVVzZXJQb3N0Zml4IDogc3RyaW5nO1xuXHR6b29tV2ViaW5hckNhdGVnb3J5IDogc3RyaW5nO1xuXHRlbmFibGVXZWJpbmFyVXBsb2FkcyA6IEthbHR1cmFOdWxsYWJsZUJvb2xlYW47XG5cdGVuYWJsZVpvb21UcmFuc2NyaXB0aW9uIDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcblx0em9vbUFjY291bnREZXNjcmlwdGlvbiA6IHN0cmluZztcblx0b3B0T3V0R3JvdXBOYW1lcyA6IHN0cmluZztcblx0b3B0SW5Hcm91cE5hbWVzIDogc3RyaW5nO1xuXHRncm91cFBhcnRpY2lwYXRpb25UeXBlIDogS2FsdHVyYVpvb21Hcm91cFBhcnRpY2lwYXRpb25UeXBlO1xuXHRoYW5kbGVDb2hvc3RzTW9kZSA6IEthbHR1cmFIYW5kbGVQYXJ0aWNpcGFudHNNb2RlO1xuXHRoYW5kbGVBbHRlcm5hdGl2ZUhvc3RzTW9kZSA6IEthbHR1cmFIYW5kbGVQYXJ0aWNpcGFudHNNb2RlO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhWm9vbUludGVncmF0aW9uU2V0dGluZ0FyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhWm9vbUludGVncmF0aW9uU2V0dGluZycgfSxcblx0XHRcdFx0em9vbUNhdGVnb3J5IDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGVuYWJsZVJlY29yZGluZ1VwbG9hZCA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFOdWxsYWJsZUJvb2xlYW4sIHN1YlR5cGUgOiAnS2FsdHVyYU51bGxhYmxlQm9vbGVhbicgfSxcblx0XHRcdFx0em9vbVVzZXJNYXRjaGluZ01vZGUgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhWm9vbVVzZXJzTWF0Y2hpbmcsIHN1YlR5cGUgOiAnS2FsdHVyYVpvb21Vc2Vyc01hdGNoaW5nJyB9LFxuXHRcdFx0XHR6b29tVXNlclBvc3RmaXggOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0em9vbVdlYmluYXJDYXRlZ29yeSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRlbmFibGVXZWJpbmFyVXBsb2FkcyA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFOdWxsYWJsZUJvb2xlYW4sIHN1YlR5cGUgOiAnS2FsdHVyYU51bGxhYmxlQm9vbGVhbicgfSxcblx0XHRcdFx0ZW5hYmxlWm9vbVRyYW5zY3JpcHRpb24gOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuLCBzdWJUeXBlIDogJ0thbHR1cmFOdWxsYWJsZUJvb2xlYW4nIH0sXG5cdFx0XHRcdHpvb21BY2NvdW50RGVzY3JpcHRpb24gOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0b3B0T3V0R3JvdXBOYW1lcyA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRvcHRJbkdyb3VwTmFtZXMgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Z3JvdXBQYXJ0aWNpcGF0aW9uVHlwZSA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFab29tR3JvdXBQYXJ0aWNpcGF0aW9uVHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhWm9vbUdyb3VwUGFydGljaXBhdGlvblR5cGUnIH0sXG5cdFx0XHRcdGhhbmRsZUNvaG9zdHNNb2RlIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUhhbmRsZVBhcnRpY2lwYW50c01vZGUsIHN1YlR5cGUgOiAnS2FsdHVyYUhhbmRsZVBhcnRpY2lwYW50c01vZGUnIH0sXG5cdFx0XHRcdGhhbmRsZUFsdGVybmF0aXZlSG9zdHNNb2RlIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUhhbmRsZVBhcnRpY2lwYW50c01vZGUsIHN1YlR5cGUgOiAnS2FsdHVyYUhhbmRsZVBhcnRpY2lwYW50c01vZGUnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhWm9vbUludGVncmF0aW9uU2V0dGluZycsS2FsdHVyYVpvb21JbnRlZ3JhdGlvblNldHRpbmcpO1xuIl19
