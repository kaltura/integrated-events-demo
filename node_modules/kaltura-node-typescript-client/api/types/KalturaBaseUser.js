"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaBaseUser = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaUserStatus_1 = require("./KalturaUserStatus");
var KalturaLanguageCode_1 = require("./KalturaLanguageCode");
var KalturaUserMode_1 = require("./KalturaUserMode");
var KalturaUserCapability_1 = require("./KalturaUserCapability");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaBaseUser = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaBaseUser, _super);
    function KalturaBaseUser(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.capabilities === 'undefined')
            _this.capabilities = [];
        return _this;
    }
    KalturaBaseUser.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaBaseUser' },
            id: { type: 's' },
            partnerId: { type: 'n', readOnly: true },
            screenName: { type: 's' },
            fullName: { type: 's' },
            email: { type: 's' },
            country: { type: 's' },
            state: { type: 's' },
            city: { type: 's' },
            zip: { type: 's' },
            thumbnailUrl: { type: 's' },
            description: { type: 's' },
            tags: { type: 's' },
            adminTags: { type: 's' },
            status: { type: 'en', subTypeConstructor: KalturaUserStatus_1.KalturaUserStatus, subType: 'KalturaUserStatus' },
            createdAt: { type: 'd', readOnly: true },
            updatedAt: { type: 'd', readOnly: true },
            partnerData: { type: 's' },
            indexedPartnerDataInt: { type: 'n' },
            indexedPartnerDataString: { type: 's' },
            storageSize: { type: 'n', readOnly: true },
            language: { type: 'es', subTypeConstructor: KalturaLanguageCode_1.KalturaLanguageCode, subType: 'KalturaLanguageCode' },
            lastLoginTime: { type: 'n', readOnly: true },
            statusUpdatedAt: { type: 'n', readOnly: true },
            deletedAt: { type: 'd', readOnly: true },
            allowedPartnerIds: { type: 's' },
            allowedPartnerPackages: { type: 's' },
            userMode: { type: 'en', subTypeConstructor: KalturaUserMode_1.KalturaUserMode, subType: 'KalturaUserMode' },
            capabilities: { type: 'a', subTypeConstructor: KalturaUserCapability_1.KalturaUserCapability, subType: 'KalturaUserCapability' }
        });
        return result;
    };
    return KalturaBaseUser;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaBaseUser = KalturaBaseUser;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaBaseUser', KalturaBaseUser);

//# sourceMappingURL=data:application/json;charset=utf8;base64,
