"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaStorageJobData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaJobData_1 = require("./KalturaJobData");
var KalturaStorageJobData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaStorageJobData, _super);
    function KalturaStorageJobData(data) {
        return _super.call(this, data) || this;
    }
    KalturaStorageJobData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaStorageJobData' },
            serverUrl: { type: 's' },
            serverUsername: { type: 's' },
            serverPassword: { type: 's' },
            serverPrivateKey: { type: 's' },
            serverPublicKey: { type: 's' },
            serverPassPhrase: { type: 's' },
            ftpPassiveMode: { type: 'b' },
            srcFileSyncLocalPath: { type: 's' },
            srcFileEncryptionKey: { type: 's' },
            srcFileSyncId: { type: 's' },
            destFileSyncStoredPath: { type: 's' }
        });
        return result;
    };
    return KalturaStorageJobData;
}(KalturaJobData_1.KalturaJobData));
exports.KalturaStorageJobData = KalturaStorageJobData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaStorageJobData', KalturaStorageJobData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhU3RvcmFnZUpvYkRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxtREFBc0U7QUFpQnRFO0lBQTJDLGlEQUFjO0lBY3JELCtCQUFZLElBQWlDO2VBRXpDLGtCQUFNLElBQUksQ0FBQztJQUNmLENBQUM7SUFFUyw0Q0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyx1QkFBdUIsRUFBRTtZQUMxRSxTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzFCLGNBQWMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDL0IsY0FBYyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMvQixnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDakMsZUFBZSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNoQyxnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDakMsY0FBYyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMvQixvQkFBb0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDckMsb0JBQW9CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3JDLGFBQWEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDOUIsc0JBQXNCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQzlCLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCw0QkFBQztBQUFELENBekNBLEFBeUNDLENBekMwQywrQkFBYyxHQXlDeEQ7QUF6Q1ksc0RBQXFCO0FBMkNsQywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsdUJBQXVCLEVBQUMscUJBQXFCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYVN0b3JhZ2VKb2JEYXRhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYUpvYkRhdGEsIEthbHR1cmFKb2JEYXRhQXJncyB9IGZyb20gJy4vS2FsdHVyYUpvYkRhdGEnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFTdG9yYWdlSm9iRGF0YUFyZ3MgIGV4dGVuZHMgS2FsdHVyYUpvYkRhdGFBcmdzIHtcbiAgICBzZXJ2ZXJVcmw/IDogc3RyaW5nO1xuXHRzZXJ2ZXJVc2VybmFtZT8gOiBzdHJpbmc7XG5cdHNlcnZlclBhc3N3b3JkPyA6IHN0cmluZztcblx0c2VydmVyUHJpdmF0ZUtleT8gOiBzdHJpbmc7XG5cdHNlcnZlclB1YmxpY0tleT8gOiBzdHJpbmc7XG5cdHNlcnZlclBhc3NQaHJhc2U/IDogc3RyaW5nO1xuXHRmdHBQYXNzaXZlTW9kZT8gOiBib29sZWFuO1xuXHRzcmNGaWxlU3luY0xvY2FsUGF0aD8gOiBzdHJpbmc7XG5cdHNyY0ZpbGVFbmNyeXB0aW9uS2V5PyA6IHN0cmluZztcblx0c3JjRmlsZVN5bmNJZD8gOiBzdHJpbmc7XG5cdGRlc3RGaWxlU3luY1N0b3JlZFBhdGg/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhU3RvcmFnZUpvYkRhdGEgZXh0ZW5kcyBLYWx0dXJhSm9iRGF0YSB7XG5cbiAgICBzZXJ2ZXJVcmwgOiBzdHJpbmc7XG5cdHNlcnZlclVzZXJuYW1lIDogc3RyaW5nO1xuXHRzZXJ2ZXJQYXNzd29yZCA6IHN0cmluZztcblx0c2VydmVyUHJpdmF0ZUtleSA6IHN0cmluZztcblx0c2VydmVyUHVibGljS2V5IDogc3RyaW5nO1xuXHRzZXJ2ZXJQYXNzUGhyYXNlIDogc3RyaW5nO1xuXHRmdHBQYXNzaXZlTW9kZSA6IGJvb2xlYW47XG5cdHNyY0ZpbGVTeW5jTG9jYWxQYXRoIDogc3RyaW5nO1xuXHRzcmNGaWxlRW5jcnlwdGlvbktleSA6IHN0cmluZztcblx0c3JjRmlsZVN5bmNJZCA6IHN0cmluZztcblx0ZGVzdEZpbGVTeW5jU3RvcmVkUGF0aCA6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYVN0b3JhZ2VKb2JEYXRhQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFTdG9yYWdlSm9iRGF0YScgfSxcblx0XHRcdFx0c2VydmVyVXJsIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHNlcnZlclVzZXJuYW1lIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHNlcnZlclBhc3N3b3JkIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHNlcnZlclByaXZhdGVLZXkgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c2VydmVyUHVibGljS2V5IDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHNlcnZlclBhc3NQaHJhc2UgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0ZnRwUGFzc2l2ZU1vZGUgOiB7IHR5cGUgOiAnYicgfSxcblx0XHRcdFx0c3JjRmlsZVN5bmNMb2NhbFBhdGggOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c3JjRmlsZUVuY3J5cHRpb25LZXkgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c3JjRmlsZVN5bmNJZCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRkZXN0RmlsZVN5bmNTdG9yZWRQYXRoIDogeyB0eXBlIDogJ3MnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhU3RvcmFnZUpvYkRhdGEnLEthbHR1cmFTdG9yYWdlSm9iRGF0YSk7XG4iXX0=
