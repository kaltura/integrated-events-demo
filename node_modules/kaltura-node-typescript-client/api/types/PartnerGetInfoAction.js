"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PartnerGetInfoAction = void 0;
var tslib_1 = require("tslib");
var KalturaPartner_1 = require("./KalturaPartner");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'partner' action 'getInfo'.
 *
 * Usage: Retrieve all info attributed to the partner
 * This action expects no parameters. It returns information for the current KS partnerId
 *
 * Server response type:         KalturaPartner
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var PartnerGetInfoAction = /** @class */ (function (_super) {
    tslib_1.__extends(PartnerGetInfoAction, _super);
    function PartnerGetInfoAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaPartner', responseConstructor: KalturaPartner_1.KalturaPartner }) || this;
    }
    PartnerGetInfoAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'partner' },
            action: { type: 'c', default: 'getInfo' }
        });
        return result;
    };
    return PartnerGetInfoAction;
}(kaltura_request_1.KalturaRequest));
exports.PartnerGetInfoAction = PartnerGetInfoAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9QYXJ0bmVyR2V0SW5mb0FjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsbURBQWtEO0FBRWxELHNEQUF3RTtBQU14RTs7Ozs7Ozs7OztHQVVHO0FBQ0g7SUFBMEMsZ0RBQThCO0lBSXBFLDhCQUFZLElBQWdDO2VBRXhDLGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLGdCQUFnQixFQUFFLG1CQUFtQixFQUFHLCtCQUFjLEVBQUcsQ0FBQztJQUNqSCxDQUFDO0lBRVMsMkNBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsU0FBUyxFQUFFO1lBQ3pELE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLFNBQVMsRUFBRTtTQUNuQyxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsMkJBQUM7QUFBRCxDQXJCQSxBQXFCQyxDQXJCeUMsZ0NBQWMsR0FxQnZEO0FBckJZLG9EQUFvQiIsImZpbGUiOiJhcGkvdHlwZXMvUGFydG5lckdldEluZm9BY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVBhcnRuZXIgfSBmcm9tICcuL0thbHR1cmFQYXJ0bmVyJztcblxuaW1wb3J0IHsgS2FsdHVyYVJlcXVlc3QsIEthbHR1cmFSZXF1ZXN0QXJncyB9IGZyb20gJy4uL2thbHR1cmEtcmVxdWVzdCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgUGFydG5lckdldEluZm9BY3Rpb25BcmdzICBleHRlbmRzIEthbHR1cmFSZXF1ZXN0QXJncyB7XG4gICAgXG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICdwYXJ0bmVyJyBhY3Rpb24gJ2dldEluZm8nLlxuICpcbiAqIFVzYWdlOiBSZXRyaWV2ZSBhbGwgaW5mbyBhdHRyaWJ1dGVkIHRvIHRoZSBwYXJ0bmVyXG4gKiBUaGlzIGFjdGlvbiBleHBlY3RzIG5vIHBhcmFtZXRlcnMuIEl0IHJldHVybnMgaW5mb3JtYXRpb24gZm9yIHRoZSBjdXJyZW50IEtTIHBhcnRuZXJJZFxuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIEthbHR1cmFQYXJ0bmVyXG4gKiBTZXJ2ZXIgZmFpbHVyZSByZXNwb25zZSB0eXBlOiBLYWx0dXJhQVBJRXhjZXB0aW9uXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIEthbHR1cmFSZXF1ZXN0XG4gKi9cbmV4cG9ydCBjbGFzcyBQYXJ0bmVyR2V0SW5mb0FjdGlvbiBleHRlbmRzIEthbHR1cmFSZXF1ZXN0PEthbHR1cmFQYXJ0bmVyPiB7XG5cbiAgICBcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogUGFydG5lckdldEluZm9BY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdvJywgcmVzcG9uc2VTdWJUeXBlIDogJ0thbHR1cmFQYXJ0bmVyJywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IEthbHR1cmFQYXJ0bmVyICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdwYXJ0bmVyJyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnZ2V0SW5mbycgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuIl19
