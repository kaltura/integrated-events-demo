"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaVirusScanProfile = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaVirusScanProfileStatus_1 = require("./KalturaVirusScanProfileStatus");
var KalturaVirusScanEngineType_1 = require("./KalturaVirusScanEngineType");
var KalturaBaseEntryFilter_1 = require("./KalturaBaseEntryFilter");
var KalturaVirusFoundAction_1 = require("./KalturaVirusFoundAction");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaVirusScanProfile = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaVirusScanProfile, _super);
    function KalturaVirusScanProfile(data) {
        return _super.call(this, data) || this;
    }
    KalturaVirusScanProfile.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaVirusScanProfile' },
            id: { type: 'n', readOnly: true },
            createdAt: { type: 'd', readOnly: true },
            updatedAt: { type: 'd', readOnly: true },
            partnerId: { type: 'n', readOnly: true },
            name: { type: 's' },
            status: { type: 'en', subTypeConstructor: KalturaVirusScanProfileStatus_1.KalturaVirusScanProfileStatus, subType: 'KalturaVirusScanProfileStatus' },
            engineType: { type: 'es', subTypeConstructor: KalturaVirusScanEngineType_1.KalturaVirusScanEngineType, subType: 'KalturaVirusScanEngineType' },
            entryFilter: { type: 'o', subTypeConstructor: KalturaBaseEntryFilter_1.KalturaBaseEntryFilter, subType: 'KalturaBaseEntryFilter' },
            actionIfInfected: { type: 'en', subTypeConstructor: KalturaVirusFoundAction_1.KalturaVirusFoundAction, subType: 'KalturaVirusFoundAction' }
        });
        return result;
    };
    return KalturaVirusScanProfile;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaVirusScanProfile = KalturaVirusScanProfile;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaVirusScanProfile', KalturaVirusScanProfile);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhVmlydXNTY2FuUHJvZmlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELGlGQUFnRjtBQUNoRiwyRUFBMEU7QUFDMUUsbUVBQWtFO0FBQ2xFLHFFQUFvRTtBQUNwRSw4REFBa0Y7QUFXbEY7SUFBNkMsbURBQWlCO0lBWTFELGlDQUFZLElBQW1DO2VBRTNDLGtCQUFNLElBQUksQ0FBQztJQUNmLENBQUM7SUFFUyw4Q0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyx5QkFBeUIsRUFBRTtZQUM1RSxFQUFFLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDcEMsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQzNDLFNBQVMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUMzQyxTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDM0MsSUFBSSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNyQixNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLDZEQUE2QixFQUFFLE9BQU8sRUFBRywrQkFBK0IsRUFBRTtZQUN2SCxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLHVEQUEwQixFQUFFLE9BQU8sRUFBRyw0QkFBNEIsRUFBRTtZQUNySCxXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLCtDQUFzQixFQUFFLE9BQU8sRUFBRyx3QkFBd0IsRUFBRTtZQUM3RyxnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsaURBQXVCLEVBQUUsT0FBTyxFQUFHLHlCQUF5QixFQUFFO1NBQzVHLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCw4QkFBQztBQUFELENBckNBLEFBcUNDLENBckM0Qyx1Q0FBaUIsR0FxQzdEO0FBckNZLDBEQUF1QjtBQXVDcEMsMkNBQW1CLENBQUMsWUFBWSxDQUFDLHlCQUF5QixFQUFDLHVCQUF1QixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFWaXJ1c1NjYW5Qcm9maWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYVZpcnVzU2NhblByb2ZpbGVTdGF0dXMgfSBmcm9tICcuL0thbHR1cmFWaXJ1c1NjYW5Qcm9maWxlU3RhdHVzJztcbmltcG9ydCB7IEthbHR1cmFWaXJ1c1NjYW5FbmdpbmVUeXBlIH0gZnJvbSAnLi9LYWx0dXJhVmlydXNTY2FuRW5naW5lVHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhQmFzZUVudHJ5RmlsdGVyIH0gZnJvbSAnLi9LYWx0dXJhQmFzZUVudHJ5RmlsdGVyJztcbmltcG9ydCB7IEthbHR1cmFWaXJ1c0ZvdW5kQWN0aW9uIH0gZnJvbSAnLi9LYWx0dXJhVmlydXNGb3VuZEFjdGlvbic7XG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0QmFzZSwgS2FsdHVyYU9iamVjdEJhc2VBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYVZpcnVzU2NhblByb2ZpbGVBcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlQXJncyB7XG4gICAgbmFtZT8gOiBzdHJpbmc7XG5cdHN0YXR1cz8gOiBLYWx0dXJhVmlydXNTY2FuUHJvZmlsZVN0YXR1cztcblx0ZW5naW5lVHlwZT8gOiBLYWx0dXJhVmlydXNTY2FuRW5naW5lVHlwZTtcblx0ZW50cnlGaWx0ZXI/IDogS2FsdHVyYUJhc2VFbnRyeUZpbHRlcjtcblx0YWN0aW9uSWZJbmZlY3RlZD8gOiBLYWx0dXJhVmlydXNGb3VuZEFjdGlvbjtcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYVZpcnVzU2NhblByb2ZpbGUgZXh0ZW5kcyBLYWx0dXJhT2JqZWN0QmFzZSB7XG5cbiAgICByZWFkb25seSBpZCA6IG51bWJlcjtcblx0cmVhZG9ubHkgY3JlYXRlZEF0IDogRGF0ZTtcblx0cmVhZG9ubHkgdXBkYXRlZEF0IDogRGF0ZTtcblx0cmVhZG9ubHkgcGFydG5lcklkIDogbnVtYmVyO1xuXHRuYW1lIDogc3RyaW5nO1xuXHRzdGF0dXMgOiBLYWx0dXJhVmlydXNTY2FuUHJvZmlsZVN0YXR1cztcblx0ZW5naW5lVHlwZSA6IEthbHR1cmFWaXJ1c1NjYW5FbmdpbmVUeXBlO1xuXHRlbnRyeUZpbHRlciA6IEthbHR1cmFCYXNlRW50cnlGaWx0ZXI7XG5cdGFjdGlvbklmSW5mZWN0ZWQgOiBLYWx0dXJhVmlydXNGb3VuZEFjdGlvbjtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYVZpcnVzU2NhblByb2ZpbGVBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYVZpcnVzU2NhblByb2ZpbGUnIH0sXG5cdFx0XHRcdGlkIDogeyB0eXBlIDogJ24nLCByZWFkT25seSA6IHRydWUgfSxcblx0XHRcdFx0Y3JlYXRlZEF0IDogeyB0eXBlIDogJ2QnLCByZWFkT25seSA6IHRydWUgfSxcblx0XHRcdFx0dXBkYXRlZEF0IDogeyB0eXBlIDogJ2QnLCByZWFkT25seSA6IHRydWUgfSxcblx0XHRcdFx0cGFydG5lcklkIDogeyB0eXBlIDogJ24nLCByZWFkT25seSA6IHRydWUgfSxcblx0XHRcdFx0bmFtZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzdGF0dXMgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhVmlydXNTY2FuUHJvZmlsZVN0YXR1cywgc3ViVHlwZSA6ICdLYWx0dXJhVmlydXNTY2FuUHJvZmlsZVN0YXR1cycgfSxcblx0XHRcdFx0ZW5naW5lVHlwZSA6IHsgdHlwZSA6ICdlcycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFWaXJ1c1NjYW5FbmdpbmVUeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFWaXJ1c1NjYW5FbmdpbmVUeXBlJyB9LFxuXHRcdFx0XHRlbnRyeUZpbHRlciA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUJhc2VFbnRyeUZpbHRlciwgc3ViVHlwZSA6ICdLYWx0dXJhQmFzZUVudHJ5RmlsdGVyJyB9LFxuXHRcdFx0XHRhY3Rpb25JZkluZmVjdGVkIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVZpcnVzRm91bmRBY3Rpb24sIHN1YlR5cGUgOiAnS2FsdHVyYVZpcnVzRm91bmRBY3Rpb24nIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhVmlydXNTY2FuUHJvZmlsZScsS2FsdHVyYVZpcnVzU2NhblByb2ZpbGUpO1xuIl19
