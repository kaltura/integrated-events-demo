"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DrmPolicyUpdateAction = void 0;
var tslib_1 = require("tslib");
var KalturaDrmPolicy_1 = require("./KalturaDrmPolicy");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'drmPolicy' action 'update'.
 *
 * Usage: Update an existing KalturaDrmPolicy object
 *
 * Server response type:         KalturaDrmPolicy
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var DrmPolicyUpdateAction = /** @class */ (function (_super) {
    tslib_1.__extends(DrmPolicyUpdateAction, _super);
    function DrmPolicyUpdateAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaDrmPolicy', responseConstructor: KalturaDrmPolicy_1.KalturaDrmPolicy }) || this;
    }
    DrmPolicyUpdateAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'drm_drmpolicy' },
            action: { type: 'c', default: 'update' },
            drmPolicyId: { type: 'n' },
            drmPolicy: { type: 'o', subTypeConstructor: KalturaDrmPolicy_1.KalturaDrmPolicy, subType: 'KalturaDrmPolicy' }
        });
        return result;
    };
    return DrmPolicyUpdateAction;
}(kaltura_request_1.KalturaRequest));
exports.DrmPolicyUpdateAction = DrmPolicyUpdateAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9Ecm1Qb2xpY3lVcGRhdGVBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLHVEQUFzRDtBQUV0RCxzREFBd0U7QUFPeEU7Ozs7Ozs7OztHQVNHO0FBQ0g7SUFBMkMsaURBQWdDO0lBS3ZFLCtCQUFZLElBQWdDO2VBRXhDLGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLGtCQUFrQixFQUFFLG1CQUFtQixFQUFHLG1DQUFnQixFQUFHLENBQUM7SUFDckgsQ0FBQztJQUVTLDRDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLGVBQWUsRUFBRTtZQUMvRCxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxRQUFRLEVBQUU7WUFDM0MsV0FBVyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM1QixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLG1DQUFnQixFQUFFLE9BQU8sRUFBRyxrQkFBa0IsRUFBRTtTQUN0RixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsNEJBQUM7QUFBRCxDQXhCQSxBQXdCQyxDQXhCMEMsZ0NBQWMsR0F3QnhEO0FBeEJZLHNEQUFxQiIsImZpbGUiOiJhcGkvdHlwZXMvRHJtUG9saWN5VXBkYXRlQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFEcm1Qb2xpY3kgfSBmcm9tICcuL0thbHR1cmFEcm1Qb2xpY3knO1xuXG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBEcm1Qb2xpY3lVcGRhdGVBY3Rpb25BcmdzICBleHRlbmRzIEthbHR1cmFSZXF1ZXN0QXJncyB7XG4gICAgZHJtUG9saWN5SWQgOiBudW1iZXI7XG5cdGRybVBvbGljeSA6IEthbHR1cmFEcm1Qb2xpY3k7XG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICdkcm1Qb2xpY3knIGFjdGlvbiAndXBkYXRlJy5cbiAqXG4gKiBVc2FnZTogVXBkYXRlIGFuIGV4aXN0aW5nIEthbHR1cmFEcm1Qb2xpY3kgb2JqZWN0XG4gKlxuICogU2VydmVyIHJlc3BvbnNlIHR5cGU6ICAgICAgICAgS2FsdHVyYURybVBvbGljeVxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgRHJtUG9saWN5VXBkYXRlQWN0aW9uIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3Q8S2FsdHVyYURybVBvbGljeT4ge1xuXG4gICAgZHJtUG9saWN5SWQgOiBudW1iZXI7XG5cdGRybVBvbGljeSA6IEthbHR1cmFEcm1Qb2xpY3k7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhIDogRHJtUG9saWN5VXBkYXRlQWN0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEsIHtyZXNwb25zZVR5cGUgOiAnbycsIHJlc3BvbnNlU3ViVHlwZSA6ICdLYWx0dXJhRHJtUG9saWN5JywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IEthbHR1cmFEcm1Qb2xpY3kgIH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ2RybV9kcm1wb2xpY3knIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICd1cGRhdGUnIH0sXG5cdFx0XHRcdGRybVBvbGljeUlkIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGRybVBvbGljeSA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYURybVBvbGljeSwgc3ViVHlwZSA6ICdLYWx0dXJhRHJtUG9saWN5JyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG4iXX0=
