"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaAttUverseDistributionProfile = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaConfigurableDistributionProfile_1 = require("./KalturaConfigurableDistributionProfile");
var KalturaAttUverseDistributionProfile = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaAttUverseDistributionProfile, _super);
    function KalturaAttUverseDistributionProfile(data) {
        return _super.call(this, data) || this;
    }
    KalturaAttUverseDistributionProfile.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaAttUverseDistributionProfile' },
            feedUrl: { type: 's', readOnly: true },
            ftpHost: { type: 's' },
            ftpUsername: { type: 's' },
            ftpPassword: { type: 's' },
            ftpPath: { type: 's' },
            channelTitle: { type: 's' },
            flavorAssetFilenameXslt: { type: 's' },
            thumbnailAssetFilenameXslt: { type: 's' },
            assetFilenameXslt: { type: 's' }
        });
        return result;
    };
    return KalturaAttUverseDistributionProfile;
}(KalturaConfigurableDistributionProfile_1.KalturaConfigurableDistributionProfile));
exports.KalturaAttUverseDistributionProfile = KalturaAttUverseDistributionProfile;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaAttUverseDistributionProfile', KalturaAttUverseDistributionProfile);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQXR0VXZlcnNlRGlzdHJpYnV0aW9uUHJvZmlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELG1HQUE4STtBQWM5STtJQUF5RCwrREFBc0M7SUFZM0YsNkNBQVksSUFBK0M7ZUFFdkQsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLDBEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHFDQUFxQyxFQUFFO1lBQ3hGLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUN6QyxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hCLFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDNUIsV0FBVyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM1QixPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hCLFlBQVksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDN0IsdUJBQXVCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hDLDBCQUEwQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMzQyxpQkFBaUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDekIsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDBDQUFDO0FBQUQsQ0FyQ0EsQUFxQ0MsQ0FyQ3dELCtFQUFzQyxHQXFDOUY7QUFyQ1ksa0ZBQW1DO0FBdUNoRCwyQ0FBbUIsQ0FBQyxZQUFZLENBQUMscUNBQXFDLEVBQUMsbUNBQW1DLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYUF0dFV2ZXJzZURpc3RyaWJ1dGlvblByb2ZpbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhQ29uZmlndXJhYmxlRGlzdHJpYnV0aW9uUHJvZmlsZSwgS2FsdHVyYUNvbmZpZ3VyYWJsZURpc3RyaWJ1dGlvblByb2ZpbGVBcmdzIH0gZnJvbSAnLi9LYWx0dXJhQ29uZmlndXJhYmxlRGlzdHJpYnV0aW9uUHJvZmlsZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYUF0dFV2ZXJzZURpc3RyaWJ1dGlvblByb2ZpbGVBcmdzICBleHRlbmRzIEthbHR1cmFDb25maWd1cmFibGVEaXN0cmlidXRpb25Qcm9maWxlQXJncyB7XG4gICAgZnRwSG9zdD8gOiBzdHJpbmc7XG5cdGZ0cFVzZXJuYW1lPyA6IHN0cmluZztcblx0ZnRwUGFzc3dvcmQ/IDogc3RyaW5nO1xuXHRmdHBQYXRoPyA6IHN0cmluZztcblx0Y2hhbm5lbFRpdGxlPyA6IHN0cmluZztcblx0Zmxhdm9yQXNzZXRGaWxlbmFtZVhzbHQ/IDogc3RyaW5nO1xuXHR0aHVtYm5haWxBc3NldEZpbGVuYW1lWHNsdD8gOiBzdHJpbmc7XG5cdGFzc2V0RmlsZW5hbWVYc2x0PyA6IHN0cmluZztcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYUF0dFV2ZXJzZURpc3RyaWJ1dGlvblByb2ZpbGUgZXh0ZW5kcyBLYWx0dXJhQ29uZmlndXJhYmxlRGlzdHJpYnV0aW9uUHJvZmlsZSB7XG5cbiAgICByZWFkb25seSBmZWVkVXJsIDogc3RyaW5nO1xuXHRmdHBIb3N0IDogc3RyaW5nO1xuXHRmdHBVc2VybmFtZSA6IHN0cmluZztcblx0ZnRwUGFzc3dvcmQgOiBzdHJpbmc7XG5cdGZ0cFBhdGggOiBzdHJpbmc7XG5cdGNoYW5uZWxUaXRsZSA6IHN0cmluZztcblx0Zmxhdm9yQXNzZXRGaWxlbmFtZVhzbHQgOiBzdHJpbmc7XG5cdHRodW1ibmFpbEFzc2V0RmlsZW5hbWVYc2x0IDogc3RyaW5nO1xuXHRhc3NldEZpbGVuYW1lWHNsdCA6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUF0dFV2ZXJzZURpc3RyaWJ1dGlvblByb2ZpbGVBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYUF0dFV2ZXJzZURpc3RyaWJ1dGlvblByb2ZpbGUnIH0sXG5cdFx0XHRcdGZlZWRVcmwgOiB7IHR5cGUgOiAncycsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRmdHBIb3N0IDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGZ0cFVzZXJuYW1lIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGZ0cFBhc3N3b3JkIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGZ0cFBhdGggOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Y2hhbm5lbFRpdGxlIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGZsYXZvckFzc2V0RmlsZW5hbWVYc2x0IDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHRodW1ibmFpbEFzc2V0RmlsZW5hbWVYc2x0IDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGFzc2V0RmlsZW5hbWVYc2x0IDogeyB0eXBlIDogJ3MnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhQXR0VXZlcnNlRGlzdHJpYnV0aW9uUHJvZmlsZScsS2FsdHVyYUF0dFV2ZXJzZURpc3RyaWJ1dGlvblByb2ZpbGUpO1xuIl19
