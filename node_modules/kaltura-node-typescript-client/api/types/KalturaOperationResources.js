"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaOperationResources = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaOperationResource_1 = require("./KalturaOperationResource");
var KalturaChapterNamePolicy_1 = require("./KalturaChapterNamePolicy");
var KalturaDimensionsAttributes_1 = require("./KalturaDimensionsAttributes");
var KalturaContentResource_1 = require("./KalturaContentResource");
var KalturaOperationResources = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaOperationResources, _super);
    function KalturaOperationResources(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.resources === 'undefined')
            _this.resources = [];
        if (typeof _this.dimensionsAttributes === 'undefined')
            _this.dimensionsAttributes = [];
        return _this;
    }
    KalturaOperationResources.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaOperationResources' },
            resources: { type: 'a', subTypeConstructor: KalturaOperationResource_1.KalturaOperationResource, subType: 'KalturaOperationResource' },
            chapterNamePolicy: { type: 'en', subTypeConstructor: KalturaChapterNamePolicy_1.KalturaChapterNamePolicy, subType: 'KalturaChapterNamePolicy' },
            dimensionsAttributes: { type: 'a', subTypeConstructor: KalturaDimensionsAttributes_1.KalturaDimensionsAttributes, subType: 'KalturaDimensionsAttributes' }
        });
        return result;
    };
    return KalturaOperationResources;
}(KalturaContentResource_1.KalturaContentResource));
exports.KalturaOperationResources = KalturaOperationResources;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaOperationResources', KalturaOperationResources);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhT3BlcmF0aW9uUmVzb3VyY2VzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsdUVBQXNFO0FBQ3RFLHVFQUFzRTtBQUN0RSw2RUFBNEU7QUFDNUUsbUVBQThGO0FBUzlGO0lBQStDLHFEQUFzQjtJQU1qRSxtQ0FBWSxJQUFxQztRQUFqRCxZQUVJLGtCQUFNLElBQUksQ0FBQyxTQUdkO1FBRkcsSUFBSSxPQUFPLEtBQUksQ0FBQyxTQUFTLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxTQUFTLEdBQUcsRUFBRSxDQUFDO1FBQ3JFLElBQUksT0FBTyxLQUFJLENBQUMsb0JBQW9CLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxvQkFBb0IsR0FBRyxFQUFFLENBQUM7O0lBQ25GLENBQUM7SUFFUyxnREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRywyQkFBMkIsRUFBRTtZQUM5RSxTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLG1EQUF3QixFQUFFLE9BQU8sRUFBRywwQkFBMEIsRUFBRTtZQUMvRyxpQkFBaUIsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsbURBQXdCLEVBQUUsT0FBTyxFQUFHLDBCQUEwQixFQUFFO1lBQ3hILG9CQUFvQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyx5REFBMkIsRUFBRSxPQUFPLEVBQUcsNkJBQTZCLEVBQUU7U0FDdkgsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLGdDQUFDO0FBQUQsQ0EzQkEsQUEyQkMsQ0EzQjhDLCtDQUFzQixHQTJCcEU7QUEzQlksOERBQXlCO0FBNkJ0QywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsMkJBQTJCLEVBQUMseUJBQXlCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYU9wZXJhdGlvblJlc291cmNlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFPcGVyYXRpb25SZXNvdXJjZSB9IGZyb20gJy4vS2FsdHVyYU9wZXJhdGlvblJlc291cmNlJztcbmltcG9ydCB7IEthbHR1cmFDaGFwdGVyTmFtZVBvbGljeSB9IGZyb20gJy4vS2FsdHVyYUNoYXB0ZXJOYW1lUG9saWN5JztcbmltcG9ydCB7IEthbHR1cmFEaW1lbnNpb25zQXR0cmlidXRlcyB9IGZyb20gJy4vS2FsdHVyYURpbWVuc2lvbnNBdHRyaWJ1dGVzJztcbmltcG9ydCB7IEthbHR1cmFDb250ZW50UmVzb3VyY2UsIEthbHR1cmFDb250ZW50UmVzb3VyY2VBcmdzIH0gZnJvbSAnLi9LYWx0dXJhQ29udGVudFJlc291cmNlJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhT3BlcmF0aW9uUmVzb3VyY2VzQXJncyAgZXh0ZW5kcyBLYWx0dXJhQ29udGVudFJlc291cmNlQXJncyB7XG4gICAgcmVzb3VyY2VzPyA6IEthbHR1cmFPcGVyYXRpb25SZXNvdXJjZVtdO1xuXHRjaGFwdGVyTmFtZVBvbGljeT8gOiBLYWx0dXJhQ2hhcHRlck5hbWVQb2xpY3k7XG5cdGRpbWVuc2lvbnNBdHRyaWJ1dGVzPyA6IEthbHR1cmFEaW1lbnNpb25zQXR0cmlidXRlc1tdO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhT3BlcmF0aW9uUmVzb3VyY2VzIGV4dGVuZHMgS2FsdHVyYUNvbnRlbnRSZXNvdXJjZSB7XG5cbiAgICByZXNvdXJjZXMgOiBLYWx0dXJhT3BlcmF0aW9uUmVzb3VyY2VbXTtcblx0Y2hhcHRlck5hbWVQb2xpY3kgOiBLYWx0dXJhQ2hhcHRlck5hbWVQb2xpY3k7XG5cdGRpbWVuc2lvbnNBdHRyaWJ1dGVzIDogS2FsdHVyYURpbWVuc2lvbnNBdHRyaWJ1dGVzW107XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFPcGVyYXRpb25SZXNvdXJjZXNBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5yZXNvdXJjZXMgPT09ICd1bmRlZmluZWQnKSB0aGlzLnJlc291cmNlcyA9IFtdO1xuXHRcdGlmICh0eXBlb2YgdGhpcy5kaW1lbnNpb25zQXR0cmlidXRlcyA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMuZGltZW5zaW9uc0F0dHJpYnV0ZXMgPSBbXTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhT3BlcmF0aW9uUmVzb3VyY2VzJyB9LFxuXHRcdFx0XHRyZXNvdXJjZXMgOiB7IHR5cGUgOiAnYScsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFPcGVyYXRpb25SZXNvdXJjZSwgc3ViVHlwZSA6ICdLYWx0dXJhT3BlcmF0aW9uUmVzb3VyY2UnIH0sXG5cdFx0XHRcdGNoYXB0ZXJOYW1lUG9saWN5IDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUNoYXB0ZXJOYW1lUG9saWN5LCBzdWJUeXBlIDogJ0thbHR1cmFDaGFwdGVyTmFtZVBvbGljeScgfSxcblx0XHRcdFx0ZGltZW5zaW9uc0F0dHJpYnV0ZXMgOiB7IHR5cGUgOiAnYScsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFEaW1lbnNpb25zQXR0cmlidXRlcywgc3ViVHlwZSA6ICdLYWx0dXJhRGltZW5zaW9uc0F0dHJpYnV0ZXMnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhT3BlcmF0aW9uUmVzb3VyY2VzJyxLYWx0dXJhT3BlcmF0aW9uUmVzb3VyY2VzKTtcbiJdfQ==
