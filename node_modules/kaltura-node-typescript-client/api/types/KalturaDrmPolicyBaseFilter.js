"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaDrmPolicyBaseFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaDrmProviderType_1 = require("./KalturaDrmProviderType");
var KalturaDrmPolicyStatus_1 = require("./KalturaDrmPolicyStatus");
var KalturaDrmLicenseScenario_1 = require("./KalturaDrmLicenseScenario");
var KalturaFilter_1 = require("./KalturaFilter");
var KalturaDrmPolicyBaseFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaDrmPolicyBaseFilter, _super);
    function KalturaDrmPolicyBaseFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaDrmPolicyBaseFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaDrmPolicyBaseFilter' },
            partnerIdEqual: { type: 'n' },
            partnerIdIn: { type: 's' },
            nameLike: { type: 's' },
            systemNameLike: { type: 's' },
            providerEqual: { type: 'es', subTypeConstructor: KalturaDrmProviderType_1.KalturaDrmProviderType, subType: 'KalturaDrmProviderType' },
            providerIn: { type: 's' },
            statusEqual: { type: 'en', subTypeConstructor: KalturaDrmPolicyStatus_1.KalturaDrmPolicyStatus, subType: 'KalturaDrmPolicyStatus' },
            statusIn: { type: 's' },
            scenarioEqual: { type: 'es', subTypeConstructor: KalturaDrmLicenseScenario_1.KalturaDrmLicenseScenario, subType: 'KalturaDrmLicenseScenario' },
            scenarioIn: { type: 's' }
        });
        return result;
    };
    return KalturaDrmPolicyBaseFilter;
}(KalturaFilter_1.KalturaFilter));
exports.KalturaDrmPolicyBaseFilter = KalturaDrmPolicyBaseFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaDrmPolicyBaseFilter', KalturaDrmPolicyBaseFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRHJtUG9saWN5QmFzZUZpbHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELG1FQUFrRTtBQUNsRSxtRUFBa0U7QUFDbEUseUVBQXdFO0FBQ3hFLGlEQUFtRTtBQWdCbkU7SUFBZ0Qsc0RBQWE7SUFhekQsb0NBQVksSUFBc0M7ZUFFOUMsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLGlEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDRCQUE0QixFQUFFO1lBQy9FLGNBQWMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDL0IsV0FBVyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM1QixRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3pCLGNBQWMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDL0IsYUFBYSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywrQ0FBc0IsRUFBRSxPQUFPLEVBQUcsd0JBQXdCLEVBQUU7WUFDaEgsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMzQixXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLCtDQUFzQixFQUFFLE9BQU8sRUFBRyx3QkFBd0IsRUFBRTtZQUM5RyxRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3pCLGFBQWEsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcscURBQXlCLEVBQUUsT0FBTyxFQUFHLDJCQUEyQixFQUFFO1lBQ3RILFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDbEIsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLGlDQUFDO0FBQUQsQ0F2Q0EsQUF1Q0MsQ0F2QytDLDZCQUFhLEdBdUM1RDtBQXZDWSxnRUFBMEI7QUF5Q3ZDLDJDQUFtQixDQUFDLFlBQVksQ0FBQyw0QkFBNEIsRUFBQywwQkFBMEIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhRHJtUG9saWN5QmFzZUZpbHRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFEcm1Qcm92aWRlclR5cGUgfSBmcm9tICcuL0thbHR1cmFEcm1Qcm92aWRlclR5cGUnO1xuaW1wb3J0IHsgS2FsdHVyYURybVBvbGljeVN0YXR1cyB9IGZyb20gJy4vS2FsdHVyYURybVBvbGljeVN0YXR1cyc7XG5pbXBvcnQgeyBLYWx0dXJhRHJtTGljZW5zZVNjZW5hcmlvIH0gZnJvbSAnLi9LYWx0dXJhRHJtTGljZW5zZVNjZW5hcmlvJztcbmltcG9ydCB7IEthbHR1cmFGaWx0ZXIsIEthbHR1cmFGaWx0ZXJBcmdzIH0gZnJvbSAnLi9LYWx0dXJhRmlsdGVyJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhRHJtUG9saWN5QmFzZUZpbHRlckFyZ3MgIGV4dGVuZHMgS2FsdHVyYUZpbHRlckFyZ3Mge1xuICAgIHBhcnRuZXJJZEVxdWFsPyA6IG51bWJlcjtcblx0cGFydG5lcklkSW4/IDogc3RyaW5nO1xuXHRuYW1lTGlrZT8gOiBzdHJpbmc7XG5cdHN5c3RlbU5hbWVMaWtlPyA6IHN0cmluZztcblx0cHJvdmlkZXJFcXVhbD8gOiBLYWx0dXJhRHJtUHJvdmlkZXJUeXBlO1xuXHRwcm92aWRlckluPyA6IHN0cmluZztcblx0c3RhdHVzRXF1YWw/IDogS2FsdHVyYURybVBvbGljeVN0YXR1cztcblx0c3RhdHVzSW4/IDogc3RyaW5nO1xuXHRzY2VuYXJpb0VxdWFsPyA6IEthbHR1cmFEcm1MaWNlbnNlU2NlbmFyaW87XG5cdHNjZW5hcmlvSW4/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhRHJtUG9saWN5QmFzZUZpbHRlciBleHRlbmRzIEthbHR1cmFGaWx0ZXIge1xuXG4gICAgcGFydG5lcklkRXF1YWwgOiBudW1iZXI7XG5cdHBhcnRuZXJJZEluIDogc3RyaW5nO1xuXHRuYW1lTGlrZSA6IHN0cmluZztcblx0c3lzdGVtTmFtZUxpa2UgOiBzdHJpbmc7XG5cdHByb3ZpZGVyRXF1YWwgOiBLYWx0dXJhRHJtUHJvdmlkZXJUeXBlO1xuXHRwcm92aWRlckluIDogc3RyaW5nO1xuXHRzdGF0dXNFcXVhbCA6IEthbHR1cmFEcm1Qb2xpY3lTdGF0dXM7XG5cdHN0YXR1c0luIDogc3RyaW5nO1xuXHRzY2VuYXJpb0VxdWFsIDogS2FsdHVyYURybUxpY2Vuc2VTY2VuYXJpbztcblx0c2NlbmFyaW9JbiA6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYURybVBvbGljeUJhc2VGaWx0ZXJBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYURybVBvbGljeUJhc2VGaWx0ZXInIH0sXG5cdFx0XHRcdHBhcnRuZXJJZEVxdWFsIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdHBhcnRuZXJJZEluIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdG5hbWVMaWtlIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHN5c3RlbU5hbWVMaWtlIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHByb3ZpZGVyRXF1YWwgOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhRHJtUHJvdmlkZXJUeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFEcm1Qcm92aWRlclR5cGUnIH0sXG5cdFx0XHRcdHByb3ZpZGVySW4gOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c3RhdHVzRXF1YWwgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhRHJtUG9saWN5U3RhdHVzLCBzdWJUeXBlIDogJ0thbHR1cmFEcm1Qb2xpY3lTdGF0dXMnIH0sXG5cdFx0XHRcdHN0YXR1c0luIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHNjZW5hcmlvRXF1YWwgOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhRHJtTGljZW5zZVNjZW5hcmlvLCBzdWJUeXBlIDogJ0thbHR1cmFEcm1MaWNlbnNlU2NlbmFyaW8nIH0sXG5cdFx0XHRcdHNjZW5hcmlvSW4gOiB7IHR5cGUgOiAncycgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFEcm1Qb2xpY3lCYXNlRmlsdGVyJyxLYWx0dXJhRHJtUG9saWN5QmFzZUZpbHRlcik7XG4iXX0=
