"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaUserFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaNullableBoolean_1 = require("./KalturaNullableBoolean");
var KalturaUserBaseFilter_1 = require("./KalturaUserBaseFilter");
var KalturaUserFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaUserFilter, _super);
    function KalturaUserFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaUserFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaUserFilter' },
            idOrScreenNameStartsWith: { type: 's' },
            loginEnabledEqual: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            roleIdEqual: { type: 's' },
            roleIdsEqual: { type: 's' },
            roleIdsIn: { type: 's' },
            firstNameOrLastNameStartsWith: { type: 's' },
            permissionNamesMultiLikeOr: { type: 's' },
            permissionNamesMultiLikeAnd: { type: 's' }
        });
        return result;
    };
    return KalturaUserFilter;
}(KalturaUserBaseFilter_1.KalturaUserBaseFilter));
exports.KalturaUserFilter = KalturaUserFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaUserFilter', KalturaUserFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhVXNlckZpbHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELG1FQUFrRTtBQUNsRSxpRUFBMkY7QUFjM0Y7SUFBdUMsNkNBQXFCO0lBV3hELDJCQUFZLElBQTZCO2VBRXJDLGtCQUFNLElBQUksQ0FBQztJQUNmLENBQUM7SUFFUyx3Q0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxtQkFBbUIsRUFBRTtZQUN0RSx3QkFBd0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekMsaUJBQWlCLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLCtDQUFzQixFQUFFLE9BQU8sRUFBRyx3QkFBd0IsRUFBRTtZQUNwSCxXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzVCLFlBQVksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDN0IsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMxQiw2QkFBNkIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDOUMsMEJBQTBCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzNDLDJCQUEyQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtTQUNuQyxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsd0JBQUM7QUFBRCxDQW5DQSxBQW1DQyxDQW5Dc0MsNkNBQXFCLEdBbUMzRDtBQW5DWSw4Q0FBaUI7QUFxQzlCLDJDQUFtQixDQUFDLFlBQVksQ0FBQyxtQkFBbUIsRUFBQyxpQkFBaUIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhVXNlckZpbHRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFOdWxsYWJsZUJvb2xlYW4gfSBmcm9tICcuL0thbHR1cmFOdWxsYWJsZUJvb2xlYW4nO1xuaW1wb3J0IHsgS2FsdHVyYVVzZXJCYXNlRmlsdGVyLCBLYWx0dXJhVXNlckJhc2VGaWx0ZXJBcmdzIH0gZnJvbSAnLi9LYWx0dXJhVXNlckJhc2VGaWx0ZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFVc2VyRmlsdGVyQXJncyAgZXh0ZW5kcyBLYWx0dXJhVXNlckJhc2VGaWx0ZXJBcmdzIHtcbiAgICBpZE9yU2NyZWVuTmFtZVN0YXJ0c1dpdGg/IDogc3RyaW5nO1xuXHRsb2dpbkVuYWJsZWRFcXVhbD8gOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuO1xuXHRyb2xlSWRFcXVhbD8gOiBzdHJpbmc7XG5cdHJvbGVJZHNFcXVhbD8gOiBzdHJpbmc7XG5cdHJvbGVJZHNJbj8gOiBzdHJpbmc7XG5cdGZpcnN0TmFtZU9yTGFzdE5hbWVTdGFydHNXaXRoPyA6IHN0cmluZztcblx0cGVybWlzc2lvbk5hbWVzTXVsdGlMaWtlT3I/IDogc3RyaW5nO1xuXHRwZXJtaXNzaW9uTmFtZXNNdWx0aUxpa2VBbmQ/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhVXNlckZpbHRlciBleHRlbmRzIEthbHR1cmFVc2VyQmFzZUZpbHRlciB7XG5cbiAgICBpZE9yU2NyZWVuTmFtZVN0YXJ0c1dpdGggOiBzdHJpbmc7XG5cdGxvZ2luRW5hYmxlZEVxdWFsIDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcblx0cm9sZUlkRXF1YWwgOiBzdHJpbmc7XG5cdHJvbGVJZHNFcXVhbCA6IHN0cmluZztcblx0cm9sZUlkc0luIDogc3RyaW5nO1xuXHRmaXJzdE5hbWVPckxhc3ROYW1lU3RhcnRzV2l0aCA6IHN0cmluZztcblx0cGVybWlzc2lvbk5hbWVzTXVsdGlMaWtlT3IgOiBzdHJpbmc7XG5cdHBlcm1pc3Npb25OYW1lc011bHRpTGlrZUFuZCA6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYVVzZXJGaWx0ZXJBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYVVzZXJGaWx0ZXInIH0sXG5cdFx0XHRcdGlkT3JTY3JlZW5OYW1lU3RhcnRzV2l0aCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRsb2dpbkVuYWJsZWRFcXVhbCA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFOdWxsYWJsZUJvb2xlYW4sIHN1YlR5cGUgOiAnS2FsdHVyYU51bGxhYmxlQm9vbGVhbicgfSxcblx0XHRcdFx0cm9sZUlkRXF1YWwgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0cm9sZUlkc0VxdWFsIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHJvbGVJZHNJbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRmaXJzdE5hbWVPckxhc3ROYW1lU3RhcnRzV2l0aCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRwZXJtaXNzaW9uTmFtZXNNdWx0aUxpa2VPciA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRwZXJtaXNzaW9uTmFtZXNNdWx0aUxpa2VBbmQgOiB7IHR5cGUgOiAncycgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFVc2VyRmlsdGVyJyxLYWx0dXJhVXNlckZpbHRlcik7XG4iXX0=
