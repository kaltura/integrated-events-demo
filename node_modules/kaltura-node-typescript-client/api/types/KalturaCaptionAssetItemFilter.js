"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaCaptionAssetItemFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaLanguage_1 = require("./KalturaLanguage");
var KalturaCaptionAssetFilter_1 = require("./KalturaCaptionAssetFilter");
var KalturaCaptionAssetItemFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaCaptionAssetItemFilter, _super);
    function KalturaCaptionAssetItemFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaCaptionAssetItemFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaCaptionAssetItemFilter' },
            contentLike: { type: 's' },
            contentMultiLikeOr: { type: 's' },
            contentMultiLikeAnd: { type: 's' },
            partnerDescriptionLike: { type: 's' },
            partnerDescriptionMultiLikeOr: { type: 's' },
            partnerDescriptionMultiLikeAnd: { type: 's' },
            languageEqual: { type: 'es', subTypeConstructor: KalturaLanguage_1.KalturaLanguage, subType: 'KalturaLanguage' },
            languageIn: { type: 's' },
            labelEqual: { type: 's' },
            labelIn: { type: 's' },
            startTimeGreaterThanOrEqual: { type: 'n' },
            startTimeLessThanOrEqual: { type: 'n' },
            endTimeGreaterThanOrEqual: { type: 'n' },
            endTimeLessThanOrEqual: { type: 'n' }
        });
        return result;
    };
    return KalturaCaptionAssetItemFilter;
}(KalturaCaptionAssetFilter_1.KalturaCaptionAssetFilter));
exports.KalturaCaptionAssetItemFilter = KalturaCaptionAssetItemFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaCaptionAssetItemFilter', KalturaCaptionAssetItemFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQ2FwdGlvbkFzc2V0SXRlbUZpbHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELHFEQUFvRDtBQUNwRCx5RUFBdUc7QUFvQnZHO0lBQW1ELHlEQUF5QjtJQWlCeEUsdUNBQVksSUFBeUM7ZUFFakQsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLG9EQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLCtCQUErQixFQUFFO1lBQ2xGLFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDNUIsa0JBQWtCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ25DLG1CQUFtQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNwQyxzQkFBc0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdkMsNkJBQTZCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzlDLDhCQUE4QixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMvQyxhQUFhLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLGlDQUFlLEVBQUUsT0FBTyxFQUFHLGlCQUFpQixFQUFFO1lBQ2xHLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDM0IsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMzQixPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hCLDJCQUEyQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM1Qyx3QkFBd0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekMseUJBQXlCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzFDLHNCQUFzQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtTQUM5QixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsb0NBQUM7QUFBRCxDQS9DQSxBQStDQyxDQS9Da0QscURBQXlCLEdBK0MzRTtBQS9DWSxzRUFBNkI7QUFpRDFDLDJDQUFtQixDQUFDLFlBQVksQ0FBQywrQkFBK0IsRUFBQyw2QkFBNkIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhQ2FwdGlvbkFzc2V0SXRlbUZpbHRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFMYW5ndWFnZSB9IGZyb20gJy4vS2FsdHVyYUxhbmd1YWdlJztcbmltcG9ydCB7IEthbHR1cmFDYXB0aW9uQXNzZXRGaWx0ZXIsIEthbHR1cmFDYXB0aW9uQXNzZXRGaWx0ZXJBcmdzIH0gZnJvbSAnLi9LYWx0dXJhQ2FwdGlvbkFzc2V0RmlsdGVyJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhQ2FwdGlvbkFzc2V0SXRlbUZpbHRlckFyZ3MgIGV4dGVuZHMgS2FsdHVyYUNhcHRpb25Bc3NldEZpbHRlckFyZ3Mge1xuICAgIGNvbnRlbnRMaWtlPyA6IHN0cmluZztcblx0Y29udGVudE11bHRpTGlrZU9yPyA6IHN0cmluZztcblx0Y29udGVudE11bHRpTGlrZUFuZD8gOiBzdHJpbmc7XG5cdHBhcnRuZXJEZXNjcmlwdGlvbkxpa2U/IDogc3RyaW5nO1xuXHRwYXJ0bmVyRGVzY3JpcHRpb25NdWx0aUxpa2VPcj8gOiBzdHJpbmc7XG5cdHBhcnRuZXJEZXNjcmlwdGlvbk11bHRpTGlrZUFuZD8gOiBzdHJpbmc7XG5cdGxhbmd1YWdlRXF1YWw/IDogS2FsdHVyYUxhbmd1YWdlO1xuXHRsYW5ndWFnZUluPyA6IHN0cmluZztcblx0bGFiZWxFcXVhbD8gOiBzdHJpbmc7XG5cdGxhYmVsSW4/IDogc3RyaW5nO1xuXHRzdGFydFRpbWVHcmVhdGVyVGhhbk9yRXF1YWw/IDogbnVtYmVyO1xuXHRzdGFydFRpbWVMZXNzVGhhbk9yRXF1YWw/IDogbnVtYmVyO1xuXHRlbmRUaW1lR3JlYXRlclRoYW5PckVxdWFsPyA6IG51bWJlcjtcblx0ZW5kVGltZUxlc3NUaGFuT3JFcXVhbD8gOiBudW1iZXI7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFDYXB0aW9uQXNzZXRJdGVtRmlsdGVyIGV4dGVuZHMgS2FsdHVyYUNhcHRpb25Bc3NldEZpbHRlciB7XG5cbiAgICBjb250ZW50TGlrZSA6IHN0cmluZztcblx0Y29udGVudE11bHRpTGlrZU9yIDogc3RyaW5nO1xuXHRjb250ZW50TXVsdGlMaWtlQW5kIDogc3RyaW5nO1xuXHRwYXJ0bmVyRGVzY3JpcHRpb25MaWtlIDogc3RyaW5nO1xuXHRwYXJ0bmVyRGVzY3JpcHRpb25NdWx0aUxpa2VPciA6IHN0cmluZztcblx0cGFydG5lckRlc2NyaXB0aW9uTXVsdGlMaWtlQW5kIDogc3RyaW5nO1xuXHRsYW5ndWFnZUVxdWFsIDogS2FsdHVyYUxhbmd1YWdlO1xuXHRsYW5ndWFnZUluIDogc3RyaW5nO1xuXHRsYWJlbEVxdWFsIDogc3RyaW5nO1xuXHRsYWJlbEluIDogc3RyaW5nO1xuXHRzdGFydFRpbWVHcmVhdGVyVGhhbk9yRXF1YWwgOiBudW1iZXI7XG5cdHN0YXJ0VGltZUxlc3NUaGFuT3JFcXVhbCA6IG51bWJlcjtcblx0ZW5kVGltZUdyZWF0ZXJUaGFuT3JFcXVhbCA6IG51bWJlcjtcblx0ZW5kVGltZUxlc3NUaGFuT3JFcXVhbCA6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUNhcHRpb25Bc3NldEl0ZW1GaWx0ZXJBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYUNhcHRpb25Bc3NldEl0ZW1GaWx0ZXInIH0sXG5cdFx0XHRcdGNvbnRlbnRMaWtlIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNvbnRlbnRNdWx0aUxpa2VPciA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRjb250ZW50TXVsdGlMaWtlQW5kIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHBhcnRuZXJEZXNjcmlwdGlvbkxpa2UgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0cGFydG5lckRlc2NyaXB0aW9uTXVsdGlMaWtlT3IgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0cGFydG5lckRlc2NyaXB0aW9uTXVsdGlMaWtlQW5kIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGxhbmd1YWdlRXF1YWwgOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhTGFuZ3VhZ2UsIHN1YlR5cGUgOiAnS2FsdHVyYUxhbmd1YWdlJyB9LFxuXHRcdFx0XHRsYW5ndWFnZUluIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGxhYmVsRXF1YWwgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0bGFiZWxJbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzdGFydFRpbWVHcmVhdGVyVGhhbk9yRXF1YWwgOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0c3RhcnRUaW1lTGVzc1RoYW5PckVxdWFsIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGVuZFRpbWVHcmVhdGVyVGhhbk9yRXF1YWwgOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0ZW5kVGltZUxlc3NUaGFuT3JFcXVhbCA6IHsgdHlwZSA6ICduJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUNhcHRpb25Bc3NldEl0ZW1GaWx0ZXInLEthbHR1cmFDYXB0aW9uQXNzZXRJdGVtRmlsdGVyKTtcbiJdfQ==
