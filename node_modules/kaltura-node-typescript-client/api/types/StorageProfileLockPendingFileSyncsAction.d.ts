import { KalturaObjectMetadata } from '../kaltura-object-base';
import { KalturaLockFileSyncsResponse } from './KalturaLockFileSyncsResponse';
import { KalturaFileSyncFilter } from './KalturaFileSyncFilter';
import { KalturaRequest, KalturaRequestArgs } from '../kaltura-request';
export interface StorageProfileLockPendingFileSyncsActionArgs extends KalturaRequestArgs {
    filter: KalturaFileSyncFilter;
    workerId: number;
    storageProfileId: number;
    maxCount: number;
    maxSize?: number;
}
/**
 * Build request payload for service 'storageProfile' action 'lockPendingFileSyncs'.
 *
 * Usage: storage profile lockPendingFileSyncs action locks file syncs for export by the file sync periodic worker
 *
 * Server response type:         KalturaLockFileSyncsResponse
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
export declare class StorageProfileLockPendingFileSyncsAction extends KalturaRequest<KalturaLockFileSyncsResponse> {
    filter: KalturaFileSyncFilter;
    workerId: number;
    storageProfileId: number;
    maxCount: number;
    maxSize: number;
    constructor(data: StorageProfileLockPendingFileSyncsActionArgs);
    protected _getMetadata(): KalturaObjectMetadata;
}
