"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaBaseEntryCloneOptionComponent = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaBaseEntryCloneOptions_1 = require("./KalturaBaseEntryCloneOptions");
var KalturaCloneComponentSelectorType_1 = require("./KalturaCloneComponentSelectorType");
var KalturaBaseEntryCloneOptionItem_1 = require("./KalturaBaseEntryCloneOptionItem");
var KalturaBaseEntryCloneOptionComponent = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaBaseEntryCloneOptionComponent, _super);
    function KalturaBaseEntryCloneOptionComponent(data) {
        return _super.call(this, data) || this;
    }
    KalturaBaseEntryCloneOptionComponent.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaBaseEntryCloneOptionComponent' },
            itemType: { type: 'es', subTypeConstructor: KalturaBaseEntryCloneOptions_1.KalturaBaseEntryCloneOptions, subType: 'KalturaBaseEntryCloneOptions' },
            rule: { type: 'es', subTypeConstructor: KalturaCloneComponentSelectorType_1.KalturaCloneComponentSelectorType, subType: 'KalturaCloneComponentSelectorType' }
        });
        return result;
    };
    return KalturaBaseEntryCloneOptionComponent;
}(KalturaBaseEntryCloneOptionItem_1.KalturaBaseEntryCloneOptionItem));
exports.KalturaBaseEntryCloneOptionComponent = KalturaBaseEntryCloneOptionComponent;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaBaseEntryCloneOptionComponent', KalturaBaseEntryCloneOptionComponent);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQmFzZUVudHJ5Q2xvbmVPcHRpb25Db21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCwrRUFBOEU7QUFDOUUseUZBQXdGO0FBQ3hGLHFGQUF5SDtBQVF6SDtJQUEwRCxnRUFBK0I7SUFLckYsOENBQVksSUFBZ0Q7ZUFFeEQsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLDJEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHNDQUFzQyxFQUFFO1lBQ3pGLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsMkRBQTRCLEVBQUUsT0FBTyxFQUFHLDhCQUE4QixFQUFFO1lBQ3ZILElBQUksRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcscUVBQWlDLEVBQUUsT0FBTyxFQUFHLG1DQUFtQyxFQUFFO1NBQ3BILENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCwyQ0FBQztBQUFELENBdkJBLEFBdUJDLENBdkJ5RCxpRUFBK0IsR0F1QnhGO0FBdkJZLG9GQUFvQztBQXlCakQsMkNBQW1CLENBQUMsWUFBWSxDQUFDLHNDQUFzQyxFQUFDLG9DQUFvQyxDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFCYXNlRW50cnlDbG9uZU9wdGlvbkNvbXBvbmVudC5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFCYXNlRW50cnlDbG9uZU9wdGlvbnMgfSBmcm9tICcuL0thbHR1cmFCYXNlRW50cnlDbG9uZU9wdGlvbnMnO1xuaW1wb3J0IHsgS2FsdHVyYUNsb25lQ29tcG9uZW50U2VsZWN0b3JUeXBlIH0gZnJvbSAnLi9LYWx0dXJhQ2xvbmVDb21wb25lbnRTZWxlY3RvclR5cGUnO1xuaW1wb3J0IHsgS2FsdHVyYUJhc2VFbnRyeUNsb25lT3B0aW9uSXRlbSwgS2FsdHVyYUJhc2VFbnRyeUNsb25lT3B0aW9uSXRlbUFyZ3MgfSBmcm9tICcuL0thbHR1cmFCYXNlRW50cnlDbG9uZU9wdGlvbkl0ZW0nO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFCYXNlRW50cnlDbG9uZU9wdGlvbkNvbXBvbmVudEFyZ3MgIGV4dGVuZHMgS2FsdHVyYUJhc2VFbnRyeUNsb25lT3B0aW9uSXRlbUFyZ3Mge1xuICAgIGl0ZW1UeXBlPyA6IEthbHR1cmFCYXNlRW50cnlDbG9uZU9wdGlvbnM7XG5cdHJ1bGU/IDogS2FsdHVyYUNsb25lQ29tcG9uZW50U2VsZWN0b3JUeXBlO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhQmFzZUVudHJ5Q2xvbmVPcHRpb25Db21wb25lbnQgZXh0ZW5kcyBLYWx0dXJhQmFzZUVudHJ5Q2xvbmVPcHRpb25JdGVtIHtcblxuICAgIGl0ZW1UeXBlIDogS2FsdHVyYUJhc2VFbnRyeUNsb25lT3B0aW9ucztcblx0cnVsZSA6IEthbHR1cmFDbG9uZUNvbXBvbmVudFNlbGVjdG9yVHlwZTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUJhc2VFbnRyeUNsb25lT3B0aW9uQ29tcG9uZW50QXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFCYXNlRW50cnlDbG9uZU9wdGlvbkNvbXBvbmVudCcgfSxcblx0XHRcdFx0aXRlbVR5cGUgOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQmFzZUVudHJ5Q2xvbmVPcHRpb25zLCBzdWJUeXBlIDogJ0thbHR1cmFCYXNlRW50cnlDbG9uZU9wdGlvbnMnIH0sXG5cdFx0XHRcdHJ1bGUgOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQ2xvbmVDb21wb25lbnRTZWxlY3RvclR5cGUsIHN1YlR5cGUgOiAnS2FsdHVyYUNsb25lQ29tcG9uZW50U2VsZWN0b3JUeXBlJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUJhc2VFbnRyeUNsb25lT3B0aW9uQ29tcG9uZW50JyxLYWx0dXJhQmFzZUVudHJ5Q2xvbmVPcHRpb25Db21wb25lbnQpO1xuIl19
