"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.InteractivityAddAction = void 0;
var tslib_1 = require("tslib");
var KalturaInteractivity_1 = require("./KalturaInteractivity");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'interactivity' action 'add'.
 *
 * Usage: Add a interactivity object
 *
 * Server response type:         KalturaInteractivity
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var InteractivityAddAction = /** @class */ (function (_super) {
    tslib_1.__extends(InteractivityAddAction, _super);
    function InteractivityAddAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaInteractivity', responseConstructor: KalturaInteractivity_1.KalturaInteractivity }) || this;
    }
    InteractivityAddAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'interactivity_interactivity' },
            action: { type: 'c', default: 'add' },
            entryId: { type: 's' },
            kalturaInteractivity: { type: 'o', subTypeConstructor: KalturaInteractivity_1.KalturaInteractivity, subType: 'KalturaInteractivity' }
        });
        return result;
    };
    return InteractivityAddAction;
}(kaltura_request_1.KalturaRequest));
exports.InteractivityAddAction = InteractivityAddAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9JbnRlcmFjdGl2aXR5QWRkQWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSwrREFBOEQ7QUFFOUQsc0RBQXdFO0FBT3hFOzs7Ozs7Ozs7R0FTRztBQUNIO0lBQTRDLGtEQUFvQztJQUs1RSxnQ0FBWSxJQUFpQztlQUV6QyxrQkFBTSxJQUFJLEVBQUUsRUFBQyxZQUFZLEVBQUcsR0FBRyxFQUFFLGVBQWUsRUFBRyxzQkFBc0IsRUFBRSxtQkFBbUIsRUFBRywyQ0FBb0IsRUFBRyxDQUFDO0lBQzdILENBQUM7SUFFUyw2Q0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyw2QkFBNkIsRUFBRTtZQUM3RSxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxLQUFLLEVBQUU7WUFDeEMsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixvQkFBb0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsMkNBQW9CLEVBQUUsT0FBTyxFQUFHLHNCQUFzQixFQUFFO1NBQ3pHLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCw2QkFBQztBQUFELENBeEJBLEFBd0JDLENBeEIyQyxnQ0FBYyxHQXdCekQ7QUF4Qlksd0RBQXNCIiwiZmlsZSI6ImFwaS90eXBlcy9JbnRlcmFjdGl2aXR5QWRkQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFJbnRlcmFjdGl2aXR5IH0gZnJvbSAnLi9LYWx0dXJhSW50ZXJhY3Rpdml0eSc7XG5cbmltcG9ydCB7IEthbHR1cmFSZXF1ZXN0LCBLYWx0dXJhUmVxdWVzdEFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEludGVyYWN0aXZpdHlBZGRBY3Rpb25BcmdzICBleHRlbmRzIEthbHR1cmFSZXF1ZXN0QXJncyB7XG4gICAgZW50cnlJZCA6IHN0cmluZztcblx0a2FsdHVyYUludGVyYWN0aXZpdHkgOiBLYWx0dXJhSW50ZXJhY3Rpdml0eTtcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ2ludGVyYWN0aXZpdHknIGFjdGlvbiAnYWRkJy5cbiAqXG4gKiBVc2FnZTogQWRkIGEgaW50ZXJhY3Rpdml0eSBvYmplY3RcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhSW50ZXJhY3Rpdml0eVxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgSW50ZXJhY3Rpdml0eUFkZEFjdGlvbiBleHRlbmRzIEthbHR1cmFSZXF1ZXN0PEthbHR1cmFJbnRlcmFjdGl2aXR5PiB7XG5cbiAgICBlbnRyeUlkIDogc3RyaW5nO1xuXHRrYWx0dXJhSW50ZXJhY3Rpdml0eSA6IEthbHR1cmFJbnRlcmFjdGl2aXR5O1xuXG4gICAgY29uc3RydWN0b3IoZGF0YSA6IEludGVyYWN0aXZpdHlBZGRBY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdvJywgcmVzcG9uc2VTdWJUeXBlIDogJ0thbHR1cmFJbnRlcmFjdGl2aXR5JywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IEthbHR1cmFJbnRlcmFjdGl2aXR5ICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdpbnRlcmFjdGl2aXR5X2ludGVyYWN0aXZpdHknIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdhZGQnIH0sXG5cdFx0XHRcdGVudHJ5SWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0a2FsdHVyYUludGVyYWN0aXZpdHkgOiB7IHR5cGUgOiAnbycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFJbnRlcmFjdGl2aXR5LCBzdWJUeXBlIDogJ0thbHR1cmFJbnRlcmFjdGl2aXR5JyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG4iXX0=
