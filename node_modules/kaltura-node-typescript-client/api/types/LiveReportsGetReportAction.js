"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LiveReportsGetReportAction = void 0;
var tslib_1 = require("tslib");
var KalturaLiveStatsListResponse_1 = require("./KalturaLiveStatsListResponse");
var KalturaLiveReportType_1 = require("./KalturaLiveReportType");
var KalturaLiveReportInputFilter_1 = require("./KalturaLiveReportInputFilter");
var KalturaFilterPager_1 = require("./KalturaFilterPager");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'liveReports' action 'getReport'.
 *
 *
 *
 * Server response type:         KalturaLiveStatsListResponse
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var LiveReportsGetReportAction = /** @class */ (function (_super) {
    tslib_1.__extends(LiveReportsGetReportAction, _super);
    function LiveReportsGetReportAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaLiveStatsListResponse', responseConstructor: KalturaLiveStatsListResponse_1.KalturaLiveStatsListResponse }) || this;
    }
    LiveReportsGetReportAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'livereports' },
            action: { type: 'c', default: 'getReport' },
            reportType: { type: 'es', subTypeConstructor: KalturaLiveReportType_1.KalturaLiveReportType, subType: 'KalturaLiveReportType' },
            filter: { type: 'o', subTypeConstructor: KalturaLiveReportInputFilter_1.KalturaLiveReportInputFilter, subType: 'KalturaLiveReportInputFilter' },
            pager: { type: 'o', subTypeConstructor: KalturaFilterPager_1.KalturaFilterPager, subType: 'KalturaFilterPager' }
        });
        return result;
    };
    return LiveReportsGetReportAction;
}(kaltura_request_1.KalturaRequest));
exports.LiveReportsGetReportAction = LiveReportsGetReportAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9MaXZlUmVwb3J0c0dldFJlcG9ydEFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsK0VBQThFO0FBRTlFLGlFQUFnRTtBQUNoRSwrRUFBOEU7QUFDOUUsMkRBQTBEO0FBQzFELHNEQUF3RTtBQVF4RTs7Ozs7Ozs7O0dBU0c7QUFDSDtJQUFnRCxzREFBNEM7SUFNeEYsb0NBQVksSUFBcUM7ZUFFN0Msa0JBQU0sSUFBSSxFQUFFLEVBQUMsWUFBWSxFQUFHLEdBQUcsRUFBRSxlQUFlLEVBQUcsOEJBQThCLEVBQUUsbUJBQW1CLEVBQUcsMkRBQTRCLEVBQUcsQ0FBQztJQUM3SSxDQUFDO0lBRVMsaURBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsYUFBYSxFQUFFO1lBQzdELE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLFdBQVcsRUFBRTtZQUM5QyxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLDZDQUFxQixFQUFFLE9BQU8sRUFBRyx1QkFBdUIsRUFBRTtZQUMzRyxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLDJEQUE0QixFQUFFLE9BQU8sRUFBRyw4QkFBOEIsRUFBRTtZQUNwSCxLQUFLLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLHVDQUFrQixFQUFFLE9BQU8sRUFBRyxvQkFBb0IsRUFBRTtTQUN0RixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsaUNBQUM7QUFBRCxDQTFCQSxBQTBCQyxDQTFCK0MsZ0NBQWMsR0EwQjdEO0FBMUJZLGdFQUEwQiIsImZpbGUiOiJhcGkvdHlwZXMvTGl2ZVJlcG9ydHNHZXRSZXBvcnRBY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYUxpdmVTdGF0c0xpc3RSZXNwb25zZSB9IGZyb20gJy4vS2FsdHVyYUxpdmVTdGF0c0xpc3RSZXNwb25zZSc7XG5cbmltcG9ydCB7IEthbHR1cmFMaXZlUmVwb3J0VHlwZSB9IGZyb20gJy4vS2FsdHVyYUxpdmVSZXBvcnRUeXBlJztcbmltcG9ydCB7IEthbHR1cmFMaXZlUmVwb3J0SW5wdXRGaWx0ZXIgfSBmcm9tICcuL0thbHR1cmFMaXZlUmVwb3J0SW5wdXRGaWx0ZXInO1xuaW1wb3J0IHsgS2FsdHVyYUZpbHRlclBhZ2VyIH0gZnJvbSAnLi9LYWx0dXJhRmlsdGVyUGFnZXInO1xuaW1wb3J0IHsgS2FsdHVyYVJlcXVlc3QsIEthbHR1cmFSZXF1ZXN0QXJncyB9IGZyb20gJy4uL2thbHR1cmEtcmVxdWVzdCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgTGl2ZVJlcG9ydHNHZXRSZXBvcnRBY3Rpb25BcmdzICBleHRlbmRzIEthbHR1cmFSZXF1ZXN0QXJncyB7XG4gICAgcmVwb3J0VHlwZSA6IEthbHR1cmFMaXZlUmVwb3J0VHlwZTtcblx0ZmlsdGVyPyA6IEthbHR1cmFMaXZlUmVwb3J0SW5wdXRGaWx0ZXI7XG5cdHBhZ2VyPyA6IEthbHR1cmFGaWx0ZXJQYWdlcjtcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ2xpdmVSZXBvcnRzJyBhY3Rpb24gJ2dldFJlcG9ydCcuXG4gKlxuICogXG4gKlxuICogU2VydmVyIHJlc3BvbnNlIHR5cGU6ICAgICAgICAgS2FsdHVyYUxpdmVTdGF0c0xpc3RSZXNwb25zZVxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgTGl2ZVJlcG9ydHNHZXRSZXBvcnRBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdDxLYWx0dXJhTGl2ZVN0YXRzTGlzdFJlc3BvbnNlPiB7XG5cbiAgICByZXBvcnRUeXBlIDogS2FsdHVyYUxpdmVSZXBvcnRUeXBlO1xuXHRmaWx0ZXIgOiBLYWx0dXJhTGl2ZVJlcG9ydElucHV0RmlsdGVyO1xuXHRwYWdlciA6IEthbHR1cmFGaWx0ZXJQYWdlcjtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBMaXZlUmVwb3J0c0dldFJlcG9ydEFjdGlvbkFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhLCB7cmVzcG9uc2VUeXBlIDogJ28nLCByZXNwb25zZVN1YlR5cGUgOiAnS2FsdHVyYUxpdmVTdGF0c0xpc3RSZXNwb25zZScsIHJlc3BvbnNlQ29uc3RydWN0b3IgOiBLYWx0dXJhTGl2ZVN0YXRzTGlzdFJlc3BvbnNlICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdsaXZlcmVwb3J0cycgfSxcblx0XHRcdFx0YWN0aW9uIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ2dldFJlcG9ydCcgfSxcblx0XHRcdFx0cmVwb3J0VHlwZSA6IHsgdHlwZSA6ICdlcycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFMaXZlUmVwb3J0VHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhTGl2ZVJlcG9ydFR5cGUnIH0sXG5cdFx0XHRcdGZpbHRlciA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUxpdmVSZXBvcnRJbnB1dEZpbHRlciwgc3ViVHlwZSA6ICdLYWx0dXJhTGl2ZVJlcG9ydElucHV0RmlsdGVyJyB9LFxuXHRcdFx0XHRwYWdlciA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUZpbHRlclBhZ2VyLCBzdWJUeXBlIDogJ0thbHR1cmFGaWx0ZXJQYWdlcicgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuIl19
