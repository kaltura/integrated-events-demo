"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaConvertCollectionJobData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaConvertCollectionFlavorData_1 = require("./KalturaConvertCollectionFlavorData");
var KalturaConvartableJobData_1 = require("./KalturaConvartableJobData");
var KalturaConvertCollectionJobData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaConvertCollectionJobData, _super);
    function KalturaConvertCollectionJobData(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.flavors === 'undefined')
            _this.flavors = [];
        return _this;
    }
    KalturaConvertCollectionJobData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaConvertCollectionJobData' },
            destDirLocalPath: { type: 's' },
            destDirRemoteUrl: { type: 's' },
            destFileName: { type: 's' },
            inputXmlLocalPath: { type: 's' },
            inputXmlRemoteUrl: { type: 's' },
            commandLinesStr: { type: 's' },
            flavors: { type: 'a', subTypeConstructor: KalturaConvertCollectionFlavorData_1.KalturaConvertCollectionFlavorData, subType: 'KalturaConvertCollectionFlavorData' }
        });
        return result;
    };
    return KalturaConvertCollectionJobData;
}(KalturaConvartableJobData_1.KalturaConvartableJobData));
exports.KalturaConvertCollectionJobData = KalturaConvertCollectionJobData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaConvertCollectionJobData', KalturaConvertCollectionJobData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQ29udmVydENvbGxlY3Rpb25Kb2JEYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsMkZBQTBGO0FBQzFGLHlFQUF1RztBQWF2RztJQUFxRCwyREFBeUI7SUFVMUUseUNBQVksSUFBMkM7UUFBdkQsWUFFSSxrQkFBTSxJQUFJLENBQUMsU0FFZDtRQURHLElBQUksT0FBTyxLQUFJLENBQUMsT0FBTyxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQzs7SUFDL0QsQ0FBQztJQUVTLHNEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLGlDQUFpQyxFQUFFO1lBQ3BGLGdCQUFnQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNqQyxnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDakMsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM3QixpQkFBaUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDbEMsaUJBQWlCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ2xDLGVBQWUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDaEMsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyx1RUFBa0MsRUFBRSxPQUFPLEVBQUcsb0NBQW9DLEVBQUU7U0FDeEgsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHNDQUFDO0FBQUQsQ0FsQ0EsQUFrQ0MsQ0FsQ29ELHFEQUF5QixHQWtDN0U7QUFsQ1ksMEVBQStCO0FBb0M1QywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsaUNBQWlDLEVBQUMsK0JBQStCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYUNvbnZlcnRDb2xsZWN0aW9uSm9iRGF0YS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFDb252ZXJ0Q29sbGVjdGlvbkZsYXZvckRhdGEgfSBmcm9tICcuL0thbHR1cmFDb252ZXJ0Q29sbGVjdGlvbkZsYXZvckRhdGEnO1xuaW1wb3J0IHsgS2FsdHVyYUNvbnZhcnRhYmxlSm9iRGF0YSwgS2FsdHVyYUNvbnZhcnRhYmxlSm9iRGF0YUFyZ3MgfSBmcm9tICcuL0thbHR1cmFDb252YXJ0YWJsZUpvYkRhdGEnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFDb252ZXJ0Q29sbGVjdGlvbkpvYkRhdGFBcmdzICBleHRlbmRzIEthbHR1cmFDb252YXJ0YWJsZUpvYkRhdGFBcmdzIHtcbiAgICBkZXN0RGlyTG9jYWxQYXRoPyA6IHN0cmluZztcblx0ZGVzdERpclJlbW90ZVVybD8gOiBzdHJpbmc7XG5cdGRlc3RGaWxlTmFtZT8gOiBzdHJpbmc7XG5cdGlucHV0WG1sTG9jYWxQYXRoPyA6IHN0cmluZztcblx0aW5wdXRYbWxSZW1vdGVVcmw/IDogc3RyaW5nO1xuXHRjb21tYW5kTGluZXNTdHI/IDogc3RyaW5nO1xuXHRmbGF2b3JzPyA6IEthbHR1cmFDb252ZXJ0Q29sbGVjdGlvbkZsYXZvckRhdGFbXTtcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYUNvbnZlcnRDb2xsZWN0aW9uSm9iRGF0YSBleHRlbmRzIEthbHR1cmFDb252YXJ0YWJsZUpvYkRhdGEge1xuXG4gICAgZGVzdERpckxvY2FsUGF0aCA6IHN0cmluZztcblx0ZGVzdERpclJlbW90ZVVybCA6IHN0cmluZztcblx0ZGVzdEZpbGVOYW1lIDogc3RyaW5nO1xuXHRpbnB1dFhtbExvY2FsUGF0aCA6IHN0cmluZztcblx0aW5wdXRYbWxSZW1vdGVVcmwgOiBzdHJpbmc7XG5cdGNvbW1hbmRMaW5lc1N0ciA6IHN0cmluZztcblx0Zmxhdm9ycyA6IEthbHR1cmFDb252ZXJ0Q29sbGVjdGlvbkZsYXZvckRhdGFbXTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUNvbnZlcnRDb2xsZWN0aW9uSm9iRGF0YUFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmZsYXZvcnMgPT09ICd1bmRlZmluZWQnKSB0aGlzLmZsYXZvcnMgPSBbXTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhQ29udmVydENvbGxlY3Rpb25Kb2JEYXRhJyB9LFxuXHRcdFx0XHRkZXN0RGlyTG9jYWxQYXRoIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGRlc3REaXJSZW1vdGVVcmwgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0ZGVzdEZpbGVOYW1lIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGlucHV0WG1sTG9jYWxQYXRoIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGlucHV0WG1sUmVtb3RlVXJsIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNvbW1hbmRMaW5lc1N0ciA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRmbGF2b3JzIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQ29udmVydENvbGxlY3Rpb25GbGF2b3JEYXRhLCBzdWJUeXBlIDogJ0thbHR1cmFDb252ZXJ0Q29sbGVjdGlvbkZsYXZvckRhdGEnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhQ29udmVydENvbGxlY3Rpb25Kb2JEYXRhJyxLYWx0dXJhQ29udmVydENvbGxlY3Rpb25Kb2JEYXRhKTtcbiJdfQ==
