"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaDrmLicenseAccessDetails = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaKeyValue_1 = require("./KalturaKeyValue");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaDrmLicenseAccessDetails = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaDrmLicenseAccessDetails, _super);
    function KalturaDrmLicenseAccessDetails(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.licenseParams === 'undefined')
            _this.licenseParams = [];
        return _this;
    }
    KalturaDrmLicenseAccessDetails.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaDrmLicenseAccessDetails' },
            policy: { type: 's' },
            duration: { type: 'n' },
            absolute_duration: { type: 'n' },
            licenseParams: { type: 'a', subTypeConstructor: KalturaKeyValue_1.KalturaKeyValue, subType: 'KalturaKeyValue' }
        });
        return result;
    };
    return KalturaDrmLicenseAccessDetails;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaDrmLicenseAccessDetails = KalturaDrmLicenseAccessDetails;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaDrmLicenseAccessDetails', KalturaDrmLicenseAccessDetails);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRHJtTGljZW5zZUFjY2Vzc0RldGFpbHMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxxREFBb0Q7QUFDcEQsOERBQWtGO0FBVWxGO0lBQW9ELDBEQUFpQjtJQU9qRSx3Q0FBWSxJQUEwQztRQUF0RCxZQUVJLGtCQUFNLElBQUksQ0FBQyxTQUVkO1FBREcsSUFBSSxPQUFPLEtBQUksQ0FBQyxhQUFhLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxhQUFhLEdBQUcsRUFBRSxDQUFDOztJQUMzRSxDQUFDO0lBRVMscURBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsZ0NBQWdDLEVBQUU7WUFDbkYsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN2QixRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3pCLGlCQUFpQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNsQyxhQUFhLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLGlDQUFlLEVBQUUsT0FBTyxFQUFHLGlCQUFpQixFQUFFO1NBQ3hGLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxxQ0FBQztBQUFELENBNUJBLEFBNEJDLENBNUJtRCx1Q0FBaUIsR0E0QnBFO0FBNUJZLHdFQUE4QjtBQThCM0MsMkNBQW1CLENBQUMsWUFBWSxDQUFDLGdDQUFnQyxFQUFDLDhCQUE4QixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFEcm1MaWNlbnNlQWNjZXNzRGV0YWlscy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFLZXlWYWx1ZSB9IGZyb20gJy4vS2FsdHVyYUtleVZhbHVlJztcbmltcG9ydCB7IEthbHR1cmFPYmplY3RCYXNlLCBLYWx0dXJhT2JqZWN0QmFzZUFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhRHJtTGljZW5zZUFjY2Vzc0RldGFpbHNBcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlQXJncyB7XG4gICAgcG9saWN5PyA6IHN0cmluZztcblx0ZHVyYXRpb24/IDogbnVtYmVyO1xuXHRhYnNvbHV0ZV9kdXJhdGlvbj8gOiBudW1iZXI7XG5cdGxpY2Vuc2VQYXJhbXM/IDogS2FsdHVyYUtleVZhbHVlW107XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFEcm1MaWNlbnNlQWNjZXNzRGV0YWlscyBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlIHtcblxuICAgIHBvbGljeSA6IHN0cmluZztcblx0ZHVyYXRpb24gOiBudW1iZXI7XG5cdGFic29sdXRlX2R1cmF0aW9uIDogbnVtYmVyO1xuXHRsaWNlbnNlUGFyYW1zIDogS2FsdHVyYUtleVZhbHVlW107XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFEcm1MaWNlbnNlQWNjZXNzRGV0YWlsc0FyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmxpY2Vuc2VQYXJhbXMgPT09ICd1bmRlZmluZWQnKSB0aGlzLmxpY2Vuc2VQYXJhbXMgPSBbXTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhRHJtTGljZW5zZUFjY2Vzc0RldGFpbHMnIH0sXG5cdFx0XHRcdHBvbGljeSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRkdXJhdGlvbiA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRhYnNvbHV0ZV9kdXJhdGlvbiA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRsaWNlbnNlUGFyYW1zIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhS2V5VmFsdWUsIHN1YlR5cGUgOiAnS2FsdHVyYUtleVZhbHVlJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYURybUxpY2Vuc2VBY2Nlc3NEZXRhaWxzJyxLYWx0dXJhRHJtTGljZW5zZUFjY2Vzc0RldGFpbHMpO1xuIl19
