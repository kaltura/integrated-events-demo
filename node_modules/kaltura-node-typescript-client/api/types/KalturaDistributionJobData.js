"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaDistributionJobData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaDistributionProfile_1 = require("./KalturaDistributionProfile");
var KalturaEntryDistribution_1 = require("./KalturaEntryDistribution");
var KalturaDistributionProviderType_1 = require("./KalturaDistributionProviderType");
var KalturaDistributionJobProviderData_1 = require("./KalturaDistributionJobProviderData");
var KalturaDistributionRemoteMediaFile_1 = require("./KalturaDistributionRemoteMediaFile");
var KalturaJobData_1 = require("./KalturaJobData");
var KalturaDistributionJobData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaDistributionJobData, _super);
    function KalturaDistributionJobData(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.mediaFiles === 'undefined')
            _this.mediaFiles = [];
        return _this;
    }
    KalturaDistributionJobData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaDistributionJobData' },
            distributionProfileId: { type: 'n' },
            distributionProfile: { type: 'o', subTypeConstructor: KalturaDistributionProfile_1.KalturaDistributionProfile, subType: 'KalturaDistributionProfile' },
            entryDistributionId: { type: 'n' },
            entryDistribution: { type: 'o', subTypeConstructor: KalturaEntryDistribution_1.KalturaEntryDistribution, subType: 'KalturaEntryDistribution' },
            remoteId: { type: 's' },
            providerType: { type: 'es', subTypeConstructor: KalturaDistributionProviderType_1.KalturaDistributionProviderType, subType: 'KalturaDistributionProviderType' },
            providerData: { type: 'o', subTypeConstructor: KalturaDistributionJobProviderData_1.KalturaDistributionJobProviderData, subType: 'KalturaDistributionJobProviderData' },
            results: { type: 's' },
            sentData: { type: 's' },
            mediaFiles: { type: 'a', subTypeConstructor: KalturaDistributionRemoteMediaFile_1.KalturaDistributionRemoteMediaFile, subType: 'KalturaDistributionRemoteMediaFile' }
        });
        return result;
    };
    return KalturaDistributionJobData;
}(KalturaJobData_1.KalturaJobData));
exports.KalturaDistributionJobData = KalturaDistributionJobData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaDistributionJobData', KalturaDistributionJobData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRGlzdHJpYnV0aW9uSm9iRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELDJFQUEwRTtBQUMxRSx1RUFBc0U7QUFDdEUscUZBQW9GO0FBQ3BGLDJGQUEwRjtBQUMxRiwyRkFBMEY7QUFDMUYsbURBQXNFO0FBZ0J0RTtJQUFnRCxzREFBYztJQWExRCxvQ0FBWSxJQUFzQztRQUFsRCxZQUVJLGtCQUFNLElBQUksQ0FBQyxTQUVkO1FBREcsSUFBSSxPQUFPLEtBQUksQ0FBQyxVQUFVLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDOztJQUNyRSxDQUFDO0lBRVMsaURBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsNEJBQTRCLEVBQUU7WUFDL0UscUJBQXFCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3RDLG1CQUFtQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyx1REFBMEIsRUFBRSxPQUFPLEVBQUcsNEJBQTRCLEVBQUU7WUFDN0gsbUJBQW1CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3BDLGlCQUFpQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxtREFBd0IsRUFBRSxPQUFPLEVBQUcsMEJBQTBCLEVBQUU7WUFDdkgsUUFBUSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN6QixZQUFZLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLGlFQUErQixFQUFFLE9BQU8sRUFBRyxpQ0FBaUMsRUFBRTtZQUNqSSxZQUFZLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLHVFQUFrQyxFQUFFLE9BQU8sRUFBRyxvQ0FBb0MsRUFBRTtZQUN0SSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyx1RUFBa0MsRUFBRSxPQUFPLEVBQUcsb0NBQW9DLEVBQUU7U0FDM0gsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLGlDQUFDO0FBQUQsQ0F4Q0EsQUF3Q0MsQ0F4QytDLCtCQUFjLEdBd0M3RDtBQXhDWSxnRUFBMEI7QUEwQ3ZDLDJDQUFtQixDQUFDLFlBQVksQ0FBQyw0QkFBNEIsRUFBQywwQkFBMEIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhRGlzdHJpYnV0aW9uSm9iRGF0YS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFEaXN0cmlidXRpb25Qcm9maWxlIH0gZnJvbSAnLi9LYWx0dXJhRGlzdHJpYnV0aW9uUHJvZmlsZSc7XG5pbXBvcnQgeyBLYWx0dXJhRW50cnlEaXN0cmlidXRpb24gfSBmcm9tICcuL0thbHR1cmFFbnRyeURpc3RyaWJ1dGlvbic7XG5pbXBvcnQgeyBLYWx0dXJhRGlzdHJpYnV0aW9uUHJvdmlkZXJUeXBlIH0gZnJvbSAnLi9LYWx0dXJhRGlzdHJpYnV0aW9uUHJvdmlkZXJUeXBlJztcbmltcG9ydCB7IEthbHR1cmFEaXN0cmlidXRpb25Kb2JQcm92aWRlckRhdGEgfSBmcm9tICcuL0thbHR1cmFEaXN0cmlidXRpb25Kb2JQcm92aWRlckRhdGEnO1xuaW1wb3J0IHsgS2FsdHVyYURpc3RyaWJ1dGlvblJlbW90ZU1lZGlhRmlsZSB9IGZyb20gJy4vS2FsdHVyYURpc3RyaWJ1dGlvblJlbW90ZU1lZGlhRmlsZSc7XG5pbXBvcnQgeyBLYWx0dXJhSm9iRGF0YSwgS2FsdHVyYUpvYkRhdGFBcmdzIH0gZnJvbSAnLi9LYWx0dXJhSm9iRGF0YSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYURpc3RyaWJ1dGlvbkpvYkRhdGFBcmdzICBleHRlbmRzIEthbHR1cmFKb2JEYXRhQXJncyB7XG4gICAgZGlzdHJpYnV0aW9uUHJvZmlsZUlkPyA6IG51bWJlcjtcblx0ZGlzdHJpYnV0aW9uUHJvZmlsZT8gOiBLYWx0dXJhRGlzdHJpYnV0aW9uUHJvZmlsZTtcblx0ZW50cnlEaXN0cmlidXRpb25JZD8gOiBudW1iZXI7XG5cdGVudHJ5RGlzdHJpYnV0aW9uPyA6IEthbHR1cmFFbnRyeURpc3RyaWJ1dGlvbjtcblx0cmVtb3RlSWQ/IDogc3RyaW5nO1xuXHRwcm92aWRlclR5cGU/IDogS2FsdHVyYURpc3RyaWJ1dGlvblByb3ZpZGVyVHlwZTtcblx0cHJvdmlkZXJEYXRhPyA6IEthbHR1cmFEaXN0cmlidXRpb25Kb2JQcm92aWRlckRhdGE7XG5cdHJlc3VsdHM/IDogc3RyaW5nO1xuXHRzZW50RGF0YT8gOiBzdHJpbmc7XG5cdG1lZGlhRmlsZXM/IDogS2FsdHVyYURpc3RyaWJ1dGlvblJlbW90ZU1lZGlhRmlsZVtdO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhRGlzdHJpYnV0aW9uSm9iRGF0YSBleHRlbmRzIEthbHR1cmFKb2JEYXRhIHtcblxuICAgIGRpc3RyaWJ1dGlvblByb2ZpbGVJZCA6IG51bWJlcjtcblx0ZGlzdHJpYnV0aW9uUHJvZmlsZSA6IEthbHR1cmFEaXN0cmlidXRpb25Qcm9maWxlO1xuXHRlbnRyeURpc3RyaWJ1dGlvbklkIDogbnVtYmVyO1xuXHRlbnRyeURpc3RyaWJ1dGlvbiA6IEthbHR1cmFFbnRyeURpc3RyaWJ1dGlvbjtcblx0cmVtb3RlSWQgOiBzdHJpbmc7XG5cdHByb3ZpZGVyVHlwZSA6IEthbHR1cmFEaXN0cmlidXRpb25Qcm92aWRlclR5cGU7XG5cdHByb3ZpZGVyRGF0YSA6IEthbHR1cmFEaXN0cmlidXRpb25Kb2JQcm92aWRlckRhdGE7XG5cdHJlc3VsdHMgOiBzdHJpbmc7XG5cdHNlbnREYXRhIDogc3RyaW5nO1xuXHRtZWRpYUZpbGVzIDogS2FsdHVyYURpc3RyaWJ1dGlvblJlbW90ZU1lZGlhRmlsZVtdO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhRGlzdHJpYnV0aW9uSm9iRGF0YUFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLm1lZGlhRmlsZXMgPT09ICd1bmRlZmluZWQnKSB0aGlzLm1lZGlhRmlsZXMgPSBbXTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhRGlzdHJpYnV0aW9uSm9iRGF0YScgfSxcblx0XHRcdFx0ZGlzdHJpYnV0aW9uUHJvZmlsZUlkIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGRpc3RyaWJ1dGlvblByb2ZpbGUgOiB7IHR5cGUgOiAnbycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFEaXN0cmlidXRpb25Qcm9maWxlLCBzdWJUeXBlIDogJ0thbHR1cmFEaXN0cmlidXRpb25Qcm9maWxlJyB9LFxuXHRcdFx0XHRlbnRyeURpc3RyaWJ1dGlvbklkIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGVudHJ5RGlzdHJpYnV0aW9uIDogeyB0eXBlIDogJ28nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhRW50cnlEaXN0cmlidXRpb24sIHN1YlR5cGUgOiAnS2FsdHVyYUVudHJ5RGlzdHJpYnV0aW9uJyB9LFxuXHRcdFx0XHRyZW1vdGVJZCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRwcm92aWRlclR5cGUgOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhRGlzdHJpYnV0aW9uUHJvdmlkZXJUeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFEaXN0cmlidXRpb25Qcm92aWRlclR5cGUnIH0sXG5cdFx0XHRcdHByb3ZpZGVyRGF0YSA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYURpc3RyaWJ1dGlvbkpvYlByb3ZpZGVyRGF0YSwgc3ViVHlwZSA6ICdLYWx0dXJhRGlzdHJpYnV0aW9uSm9iUHJvdmlkZXJEYXRhJyB9LFxuXHRcdFx0XHRyZXN1bHRzIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHNlbnREYXRhIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdG1lZGlhRmlsZXMgOiB7IHR5cGUgOiAnYScsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFEaXN0cmlidXRpb25SZW1vdGVNZWRpYUZpbGUsIHN1YlR5cGUgOiAnS2FsdHVyYURpc3RyaWJ1dGlvblJlbW90ZU1lZGlhRmlsZScgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFEaXN0cmlidXRpb25Kb2JEYXRhJyxLYWx0dXJhRGlzdHJpYnV0aW9uSm9iRGF0YSk7XG4iXX0=
