"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaDropFolderFile = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaDropFolderFileStatus_1 = require("./KalturaDropFolderFileStatus");
var KalturaDropFolderType_1 = require("./KalturaDropFolderType");
var KalturaDropFolderFileErrorCode_1 = require("./KalturaDropFolderFileErrorCode");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaDropFolderFile = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaDropFolderFile, _super);
    function KalturaDropFolderFile(data) {
        return _super.call(this, data) || this;
    }
    KalturaDropFolderFile.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaDropFolderFile' },
            id: { type: 'n', readOnly: true },
            partnerId: { type: 'n', readOnly: true },
            dropFolderId: { type: 'n' },
            fileName: { type: 's' },
            fileSize: { type: 'n' },
            fileSizeLastSetAt: { type: 'd', readOnly: true },
            status: { type: 'en', readOnly: true, subTypeConstructor: KalturaDropFolderFileStatus_1.KalturaDropFolderFileStatus, subType: 'KalturaDropFolderFileStatus' },
            type: { type: 'es', readOnly: true, subTypeConstructor: KalturaDropFolderType_1.KalturaDropFolderType, subType: 'KalturaDropFolderType' },
            parsedSlug: { type: 's' },
            parsedFlavor: { type: 's' },
            parsedUserId: { type: 's' },
            leadDropFolderFileId: { type: 'n' },
            deletedDropFolderFileId: { type: 'n' },
            entryId: { type: 's' },
            errorCode: { type: 'es', subTypeConstructor: KalturaDropFolderFileErrorCode_1.KalturaDropFolderFileErrorCode, subType: 'KalturaDropFolderFileErrorCode' },
            errorDescription: { type: 's' },
            lastModificationTime: { type: 's' },
            createdAt: { type: 'd', readOnly: true },
            updatedAt: { type: 'd', readOnly: true },
            uploadStartDetectedAt: { type: 'd' },
            uploadEndDetectedAt: { type: 'd' },
            importStartedAt: { type: 'd' },
            importEndedAt: { type: 'd' },
            batchJobId: { type: 'n', readOnly: true }
        });
        return result;
    };
    return KalturaDropFolderFile;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaDropFolderFile = KalturaDropFolderFile;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaDropFolderFile', KalturaDropFolderFile);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRHJvcEZvbGRlckZpbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCw2RUFBNEU7QUFDNUUsaUVBQWdFO0FBQ2hFLG1GQUFrRjtBQUNsRiw4REFBa0Y7QUFzQmxGO0lBQTJDLGlEQUFpQjtJQTJCeEQsK0JBQVksSUFBaUM7ZUFFekMsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLDRDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHVCQUF1QixFQUFFO1lBQzFFLEVBQUUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUNwQyxTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDM0MsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM3QixRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3pCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsaUJBQWlCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDbkQsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLHlEQUEyQixFQUFFLE9BQU8sRUFBRyw2QkFBNkIsRUFBRTtZQUNwSSxJQUFJLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsNkNBQXFCLEVBQUUsT0FBTyxFQUFHLHVCQUF1QixFQUFFO1lBQ3RILFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDM0IsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM3QixZQUFZLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzdCLG9CQUFvQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNyQyx1QkFBdUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDeEMsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLCtEQUE4QixFQUFFLE9BQU8sRUFBRyxnQ0FBZ0MsRUFBRTtZQUM1SCxnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDakMsb0JBQW9CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3JDLFNBQVMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUMzQyxTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDM0MscUJBQXFCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3RDLG1CQUFtQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNwQyxlQUFlLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ2hDLGFBQWEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDOUIsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1NBQ25DLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCw0QkFBQztBQUFELENBbkVBLEFBbUVDLENBbkUwQyx1Q0FBaUIsR0FtRTNEO0FBbkVZLHNEQUFxQjtBQXFFbEMsMkNBQW1CLENBQUMsWUFBWSxDQUFDLHVCQUF1QixFQUFDLHFCQUFxQixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFEcm9wRm9sZGVyRmlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFEcm9wRm9sZGVyRmlsZVN0YXR1cyB9IGZyb20gJy4vS2FsdHVyYURyb3BGb2xkZXJGaWxlU3RhdHVzJztcbmltcG9ydCB7IEthbHR1cmFEcm9wRm9sZGVyVHlwZSB9IGZyb20gJy4vS2FsdHVyYURyb3BGb2xkZXJUeXBlJztcbmltcG9ydCB7IEthbHR1cmFEcm9wRm9sZGVyRmlsZUVycm9yQ29kZSB9IGZyb20gJy4vS2FsdHVyYURyb3BGb2xkZXJGaWxlRXJyb3JDb2RlJztcbmltcG9ydCB7IEthbHR1cmFPYmplY3RCYXNlLCBLYWx0dXJhT2JqZWN0QmFzZUFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhRHJvcEZvbGRlckZpbGVBcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlQXJncyB7XG4gICAgZHJvcEZvbGRlcklkPyA6IG51bWJlcjtcblx0ZmlsZU5hbWU/IDogc3RyaW5nO1xuXHRmaWxlU2l6ZT8gOiBudW1iZXI7XG5cdHBhcnNlZFNsdWc/IDogc3RyaW5nO1xuXHRwYXJzZWRGbGF2b3I/IDogc3RyaW5nO1xuXHRwYXJzZWRVc2VySWQ/IDogc3RyaW5nO1xuXHRsZWFkRHJvcEZvbGRlckZpbGVJZD8gOiBudW1iZXI7XG5cdGRlbGV0ZWREcm9wRm9sZGVyRmlsZUlkPyA6IG51bWJlcjtcblx0ZW50cnlJZD8gOiBzdHJpbmc7XG5cdGVycm9yQ29kZT8gOiBLYWx0dXJhRHJvcEZvbGRlckZpbGVFcnJvckNvZGU7XG5cdGVycm9yRGVzY3JpcHRpb24/IDogc3RyaW5nO1xuXHRsYXN0TW9kaWZpY2F0aW9uVGltZT8gOiBzdHJpbmc7XG5cdHVwbG9hZFN0YXJ0RGV0ZWN0ZWRBdD8gOiBEYXRlO1xuXHR1cGxvYWRFbmREZXRlY3RlZEF0PyA6IERhdGU7XG5cdGltcG9ydFN0YXJ0ZWRBdD8gOiBEYXRlO1xuXHRpbXBvcnRFbmRlZEF0PyA6IERhdGU7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFEcm9wRm9sZGVyRmlsZSBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlIHtcblxuICAgIHJlYWRvbmx5IGlkIDogbnVtYmVyO1xuXHRyZWFkb25seSBwYXJ0bmVySWQgOiBudW1iZXI7XG5cdGRyb3BGb2xkZXJJZCA6IG51bWJlcjtcblx0ZmlsZU5hbWUgOiBzdHJpbmc7XG5cdGZpbGVTaXplIDogbnVtYmVyO1xuXHRyZWFkb25seSBmaWxlU2l6ZUxhc3RTZXRBdCA6IERhdGU7XG5cdHJlYWRvbmx5IHN0YXR1cyA6IEthbHR1cmFEcm9wRm9sZGVyRmlsZVN0YXR1cztcblx0cmVhZG9ubHkgdHlwZSA6IEthbHR1cmFEcm9wRm9sZGVyVHlwZTtcblx0cGFyc2VkU2x1ZyA6IHN0cmluZztcblx0cGFyc2VkRmxhdm9yIDogc3RyaW5nO1xuXHRwYXJzZWRVc2VySWQgOiBzdHJpbmc7XG5cdGxlYWREcm9wRm9sZGVyRmlsZUlkIDogbnVtYmVyO1xuXHRkZWxldGVkRHJvcEZvbGRlckZpbGVJZCA6IG51bWJlcjtcblx0ZW50cnlJZCA6IHN0cmluZztcblx0ZXJyb3JDb2RlIDogS2FsdHVyYURyb3BGb2xkZXJGaWxlRXJyb3JDb2RlO1xuXHRlcnJvckRlc2NyaXB0aW9uIDogc3RyaW5nO1xuXHRsYXN0TW9kaWZpY2F0aW9uVGltZSA6IHN0cmluZztcblx0cmVhZG9ubHkgY3JlYXRlZEF0IDogRGF0ZTtcblx0cmVhZG9ubHkgdXBkYXRlZEF0IDogRGF0ZTtcblx0dXBsb2FkU3RhcnREZXRlY3RlZEF0IDogRGF0ZTtcblx0dXBsb2FkRW5kRGV0ZWN0ZWRBdCA6IERhdGU7XG5cdGltcG9ydFN0YXJ0ZWRBdCA6IERhdGU7XG5cdGltcG9ydEVuZGVkQXQgOiBEYXRlO1xuXHRyZWFkb25seSBiYXRjaEpvYklkIDogbnVtYmVyO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhRHJvcEZvbGRlckZpbGVBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYURyb3BGb2xkZXJGaWxlJyB9LFxuXHRcdFx0XHRpZCA6IHsgdHlwZSA6ICduJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdHBhcnRuZXJJZCA6IHsgdHlwZSA6ICduJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdGRyb3BGb2xkZXJJZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRmaWxlTmFtZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRmaWxlU2l6ZSA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRmaWxlU2l6ZUxhc3RTZXRBdCA6IHsgdHlwZSA6ICdkJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdHN0YXR1cyA6IHsgdHlwZSA6ICdlbicsIHJlYWRPbmx5IDogdHJ1ZSwgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYURyb3BGb2xkZXJGaWxlU3RhdHVzLCBzdWJUeXBlIDogJ0thbHR1cmFEcm9wRm9sZGVyRmlsZVN0YXR1cycgfSxcblx0XHRcdFx0dHlwZSA6IHsgdHlwZSA6ICdlcycsIHJlYWRPbmx5IDogdHJ1ZSwgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYURyb3BGb2xkZXJUeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFEcm9wRm9sZGVyVHlwZScgfSxcblx0XHRcdFx0cGFyc2VkU2x1ZyA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRwYXJzZWRGbGF2b3IgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0cGFyc2VkVXNlcklkIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGxlYWREcm9wRm9sZGVyRmlsZUlkIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGRlbGV0ZWREcm9wRm9sZGVyRmlsZUlkIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGVudHJ5SWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0ZXJyb3JDb2RlIDogeyB0eXBlIDogJ2VzJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYURyb3BGb2xkZXJGaWxlRXJyb3JDb2RlLCBzdWJUeXBlIDogJ0thbHR1cmFEcm9wRm9sZGVyRmlsZUVycm9yQ29kZScgfSxcblx0XHRcdFx0ZXJyb3JEZXNjcmlwdGlvbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRsYXN0TW9kaWZpY2F0aW9uVGltZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRjcmVhdGVkQXQgOiB7IHR5cGUgOiAnZCcsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHR1cGRhdGVkQXQgOiB7IHR5cGUgOiAnZCcsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHR1cGxvYWRTdGFydERldGVjdGVkQXQgOiB7IHR5cGUgOiAnZCcgfSxcblx0XHRcdFx0dXBsb2FkRW5kRGV0ZWN0ZWRBdCA6IHsgdHlwZSA6ICdkJyB9LFxuXHRcdFx0XHRpbXBvcnRTdGFydGVkQXQgOiB7IHR5cGUgOiAnZCcgfSxcblx0XHRcdFx0aW1wb3J0RW5kZWRBdCA6IHsgdHlwZSA6ICdkJyB9LFxuXHRcdFx0XHRiYXRjaEpvYklkIDogeyB0eXBlIDogJ24nLCByZWFkT25seSA6IHRydWUgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFEcm9wRm9sZGVyRmlsZScsS2FsdHVyYURyb3BGb2xkZXJGaWxlKTtcbiJdfQ==
