"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StatsCollectAction = void 0;
var tslib_1 = require("tslib");
var KalturaStatsEvent_1 = require("./KalturaStatsEvent");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'stats' action 'collect'.
 *
 * Usage: Will write to the event log a single line representing the event
 * client version - will help interpret the line structure. Different client versions might have slightly different data/data formats in the line
 * event_id - number is the row number in yuval's excel
 * datetime - same format as MySql's datetime - can change and should reflect the time zone
 * session id - can be some big random number or guid
 * partner id
 * entry id
 * unique viewer
 * widget id
 * ui_conf id
 * uid - the puser id as set by the ppartner
 * current point - in milliseconds
 * duration - milliseconds
 * user ip
 * process duration - in milliseconds
 * control id
 * seek
 * new point
 * referrer
 *
 *
 * KalturaStatsEvent $event
 *
 * Server response type:         boolean
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var StatsCollectAction = /** @class */ (function (_super) {
    tslib_1.__extends(StatsCollectAction, _super);
    function StatsCollectAction(data) {
        return _super.call(this, data, { responseType: 'b', responseSubType: '', responseConstructor: null }) || this;
    }
    StatsCollectAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'stats' },
            action: { type: 'c', default: 'collect' },
            event: { type: 'o', subTypeConstructor: KalturaStatsEvent_1.KalturaStatsEvent, subType: 'KalturaStatsEvent' }
        });
        return result;
    };
    return StatsCollectAction;
}(kaltura_request_1.KalturaRequest));
exports.StatsCollectAction = StatsCollectAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9TdGF0c0NvbGxlY3RBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUlBLHlEQUF3RDtBQUN4RCxzREFBd0U7QUFNeEU7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztHQThCRztBQUNIO0lBQXdDLDhDQUF1QjtJQUkzRCw0QkFBWSxJQUE2QjtlQUVyQyxrQkFBTSxJQUFJLEVBQUUsRUFBQyxZQUFZLEVBQUcsR0FBRyxFQUFFLGVBQWUsRUFBRyxFQUFFLEVBQUUsbUJBQW1CLEVBQUcsSUFBSSxFQUFFLENBQUM7SUFDeEYsQ0FBQztJQUVTLHlDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLE9BQU8sRUFBRTtZQUN2RCxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxTQUFTLEVBQUU7WUFDNUMsS0FBSyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxxQ0FBaUIsRUFBRSxPQUFPLEVBQUcsbUJBQW1CLEVBQUU7U0FDcEYsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHlCQUFDO0FBQUQsQ0F0QkEsQUFzQkMsQ0F0QnVDLGdDQUFjLEdBc0JyRDtBQXRCWSxnREFBa0IiLCJmaWxlIjoiYXBpL3R5cGVzL1N0YXRzQ29sbGVjdEFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5cblxuaW1wb3J0IHsgS2FsdHVyYVN0YXRzRXZlbnQgfSBmcm9tICcuL0thbHR1cmFTdGF0c0V2ZW50JztcbmltcG9ydCB7IEthbHR1cmFSZXF1ZXN0LCBLYWx0dXJhUmVxdWVzdEFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFN0YXRzQ29sbGVjdEFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBldmVudCA6IEthbHR1cmFTdGF0c0V2ZW50O1xufVxuXG4vKipcbiAqIEJ1aWxkIHJlcXVlc3QgcGF5bG9hZCBmb3Igc2VydmljZSAnc3RhdHMnIGFjdGlvbiAnY29sbGVjdCcuXG4gKlxuICogVXNhZ2U6IFdpbGwgd3JpdGUgdG8gdGhlIGV2ZW50IGxvZyBhIHNpbmdsZSBsaW5lIHJlcHJlc2VudGluZyB0aGUgZXZlbnRcbiAqIGNsaWVudCB2ZXJzaW9uIC0gd2lsbCBoZWxwIGludGVycHJldCB0aGUgbGluZSBzdHJ1Y3R1cmUuIERpZmZlcmVudCBjbGllbnQgdmVyc2lvbnMgbWlnaHQgaGF2ZSBzbGlnaHRseSBkaWZmZXJlbnQgZGF0YS9kYXRhIGZvcm1hdHMgaW4gdGhlIGxpbmVcbiAqIGV2ZW50X2lkIC0gbnVtYmVyIGlzIHRoZSByb3cgbnVtYmVyIGluIHl1dmFsJ3MgZXhjZWxcbiAqIGRhdGV0aW1lIC0gc2FtZSBmb3JtYXQgYXMgTXlTcWwncyBkYXRldGltZSAtIGNhbiBjaGFuZ2UgYW5kIHNob3VsZCByZWZsZWN0IHRoZSB0aW1lIHpvbmVcbiAqIHNlc3Npb24gaWQgLSBjYW4gYmUgc29tZSBiaWcgcmFuZG9tIG51bWJlciBvciBndWlkXG4gKiBwYXJ0bmVyIGlkXG4gKiBlbnRyeSBpZFxuICogdW5pcXVlIHZpZXdlclxuICogd2lkZ2V0IGlkXG4gKiB1aV9jb25mIGlkXG4gKiB1aWQgLSB0aGUgcHVzZXIgaWQgYXMgc2V0IGJ5IHRoZSBwcGFydG5lclxuICogY3VycmVudCBwb2ludCAtIGluIG1pbGxpc2Vjb25kc1xuICogZHVyYXRpb24gLSBtaWxsaXNlY29uZHNcbiAqIHVzZXIgaXBcbiAqIHByb2Nlc3MgZHVyYXRpb24gLSBpbiBtaWxsaXNlY29uZHNcbiAqIGNvbnRyb2wgaWRcbiAqIHNlZWtcbiAqIG5ldyBwb2ludFxuICogcmVmZXJyZXJcbiAqIFxuICogXG4gKiBLYWx0dXJhU3RhdHNFdmVudCAkZXZlbnRcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBib29sZWFuXG4gKiBTZXJ2ZXIgZmFpbHVyZSByZXNwb25zZSB0eXBlOiBLYWx0dXJhQVBJRXhjZXB0aW9uXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIEthbHR1cmFSZXF1ZXN0XG4gKi9cbmV4cG9ydCBjbGFzcyBTdGF0c0NvbGxlY3RBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdDxib29sZWFuPiB7XG5cbiAgICBldmVudCA6IEthbHR1cmFTdGF0c0V2ZW50O1xuXG4gICAgY29uc3RydWN0b3IoZGF0YSA6IFN0YXRzQ29sbGVjdEFjdGlvbkFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhLCB7cmVzcG9uc2VUeXBlIDogJ2InLCByZXNwb25zZVN1YlR5cGUgOiAnJywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IG51bGwgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnc3RhdHMnIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdjb2xsZWN0JyB9LFxuXHRcdFx0XHRldmVudCA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVN0YXRzRXZlbnQsIHN1YlR5cGUgOiAnS2FsdHVyYVN0YXRzRXZlbnQnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
