"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaHttpNotification = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaEventNotificationEventObjectType_1 = require("./KalturaEventNotificationEventObjectType");
var KalturaEventNotificationEventType_1 = require("./KalturaEventNotificationEventType");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaHttpNotification = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaHttpNotification, _super);
    function KalturaHttpNotification(data) {
        return _super.call(this, data) || this;
    }
    KalturaHttpNotification.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaHttpNotification' },
            object: { type: 'o', subTypeConstructor: kaltura_object_base_1.KalturaObjectBase, subType: 'KalturaObjectBase' },
            eventObjectType: { type: 'es', subTypeConstructor: KalturaEventNotificationEventObjectType_1.KalturaEventNotificationEventObjectType, subType: 'KalturaEventNotificationEventObjectType' },
            eventNotificationJobId: { type: 'n' },
            templateId: { type: 'n' },
            templateName: { type: 's' },
            templateSystemName: { type: 's' },
            eventType: { type: 'es', subTypeConstructor: KalturaEventNotificationEventType_1.KalturaEventNotificationEventType, subType: 'KalturaEventNotificationEventType' }
        });
        return result;
    };
    return KalturaHttpNotification;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaHttpNotification = KalturaHttpNotification;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaHttpNotification', KalturaHttpNotification);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhSHR0cE5vdGlmaWNhdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELHFHQUFvRztBQUNwRyx5RkFBd0Y7QUFDeEYsOERBQWtGO0FBYWxGO0lBQTZDLG1EQUFpQjtJQVUxRCxpQ0FBWSxJQUFtQztlQUUzQyxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMsOENBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcseUJBQXlCLEVBQUU7WUFDNUUsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyx1Q0FBaUIsRUFBRSxPQUFPLEVBQUcsbUJBQW1CLEVBQUU7WUFDOUYsZUFBZSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyxpRkFBdUMsRUFBRSxPQUFPLEVBQUcseUNBQXlDLEVBQUU7WUFDcEosc0JBQXNCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3ZDLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDM0IsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM3QixrQkFBa0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDbkMsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyxxRUFBaUMsRUFBRSxPQUFPLEVBQUcsbUNBQW1DLEVBQUU7U0FDekgsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDhCQUFDO0FBQUQsQ0FqQ0EsQUFpQ0MsQ0FqQzRDLHVDQUFpQixHQWlDN0Q7QUFqQ1ksMERBQXVCO0FBbUNwQywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMseUJBQXlCLEVBQUMsdUJBQXVCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYUh0dHBOb3RpZmljYXRpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhRXZlbnROb3RpZmljYXRpb25FdmVudE9iamVjdFR5cGUgfSBmcm9tICcuL0thbHR1cmFFdmVudE5vdGlmaWNhdGlvbkV2ZW50T2JqZWN0VHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhRXZlbnROb3RpZmljYXRpb25FdmVudFR5cGUgfSBmcm9tICcuL0thbHR1cmFFdmVudE5vdGlmaWNhdGlvbkV2ZW50VHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0QmFzZSwgS2FsdHVyYU9iamVjdEJhc2VBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYUh0dHBOb3RpZmljYXRpb25BcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlQXJncyB7XG4gICAgb2JqZWN0PyA6IEthbHR1cmFPYmplY3RCYXNlO1xuXHRldmVudE9iamVjdFR5cGU/IDogS2FsdHVyYUV2ZW50Tm90aWZpY2F0aW9uRXZlbnRPYmplY3RUeXBlO1xuXHRldmVudE5vdGlmaWNhdGlvbkpvYklkPyA6IG51bWJlcjtcblx0dGVtcGxhdGVJZD8gOiBudW1iZXI7XG5cdHRlbXBsYXRlTmFtZT8gOiBzdHJpbmc7XG5cdHRlbXBsYXRlU3lzdGVtTmFtZT8gOiBzdHJpbmc7XG5cdGV2ZW50VHlwZT8gOiBLYWx0dXJhRXZlbnROb3RpZmljYXRpb25FdmVudFR5cGU7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFIdHRwTm90aWZpY2F0aW9uIGV4dGVuZHMgS2FsdHVyYU9iamVjdEJhc2Uge1xuXG4gICAgb2JqZWN0IDogS2FsdHVyYU9iamVjdEJhc2U7XG5cdGV2ZW50T2JqZWN0VHlwZSA6IEthbHR1cmFFdmVudE5vdGlmaWNhdGlvbkV2ZW50T2JqZWN0VHlwZTtcblx0ZXZlbnROb3RpZmljYXRpb25Kb2JJZCA6IG51bWJlcjtcblx0dGVtcGxhdGVJZCA6IG51bWJlcjtcblx0dGVtcGxhdGVOYW1lIDogc3RyaW5nO1xuXHR0ZW1wbGF0ZVN5c3RlbU5hbWUgOiBzdHJpbmc7XG5cdGV2ZW50VHlwZSA6IEthbHR1cmFFdmVudE5vdGlmaWNhdGlvbkV2ZW50VHlwZTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUh0dHBOb3RpZmljYXRpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYUh0dHBOb3RpZmljYXRpb24nIH0sXG5cdFx0XHRcdG9iamVjdCA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYU9iamVjdEJhc2UsIHN1YlR5cGUgOiAnS2FsdHVyYU9iamVjdEJhc2UnIH0sXG5cdFx0XHRcdGV2ZW50T2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdlcycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFFdmVudE5vdGlmaWNhdGlvbkV2ZW50T2JqZWN0VHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhRXZlbnROb3RpZmljYXRpb25FdmVudE9iamVjdFR5cGUnIH0sXG5cdFx0XHRcdGV2ZW50Tm90aWZpY2F0aW9uSm9iSWQgOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0dGVtcGxhdGVJZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHR0ZW1wbGF0ZU5hbWUgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0dGVtcGxhdGVTeXN0ZW1OYW1lIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGV2ZW50VHlwZSA6IHsgdHlwZSA6ICdlcycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFFdmVudE5vdGlmaWNhdGlvbkV2ZW50VHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhRXZlbnROb3RpZmljYXRpb25FdmVudFR5cGUnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhSHR0cE5vdGlmaWNhdGlvbicsS2FsdHVyYUh0dHBOb3RpZmljYXRpb24pO1xuIl19
