"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaESearchUserOperator = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaESearchOperatorType_1 = require("./KalturaESearchOperatorType");
var KalturaESearchUserBaseItem_1 = require("./KalturaESearchUserBaseItem");
var KalturaESearchUserOperator = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaESearchUserOperator, _super);
    function KalturaESearchUserOperator(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.searchItems === 'undefined')
            _this.searchItems = [];
        return _this;
    }
    KalturaESearchUserOperator.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaESearchUserOperator' },
            operator: { type: 'en', subTypeConstructor: KalturaESearchOperatorType_1.KalturaESearchOperatorType, subType: 'KalturaESearchOperatorType' },
            searchItems: { type: 'a', subTypeConstructor: KalturaESearchUserBaseItem_1.KalturaESearchUserBaseItem, subType: 'KalturaESearchUserBaseItem' }
        });
        return result;
    };
    return KalturaESearchUserOperator;
}(KalturaESearchUserBaseItem_1.KalturaESearchUserBaseItem));
exports.KalturaESearchUserOperator = KalturaESearchUserOperator;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaESearchUserOperator', KalturaESearchUserOperator);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRVNlYXJjaFVzZXJPcGVyYXRvci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELDJFQUEwRTtBQUMxRSwyRUFBMEc7QUFRMUc7SUFBZ0Qsc0RBQTBCO0lBS3RFLG9DQUFZLElBQXNDO1FBQWxELFlBRUksa0JBQU0sSUFBSSxDQUFDLFNBRWQ7UUFERyxJQUFJLE9BQU8sS0FBSSxDQUFDLFdBQVcsS0FBSyxXQUFXO1lBQUUsS0FBSSxDQUFDLFdBQVcsR0FBRyxFQUFFLENBQUM7O0lBQ3ZFLENBQUM7SUFFUyxpREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyw0QkFBNEIsRUFBRTtZQUMvRSxRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLHVEQUEwQixFQUFFLE9BQU8sRUFBRyw0QkFBNEIsRUFBRTtZQUNuSCxXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLHVEQUEwQixFQUFFLE9BQU8sRUFBRyw0QkFBNEIsRUFBRTtTQUM1RyxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsaUNBQUM7QUFBRCxDQXhCQSxBQXdCQyxDQXhCK0MsdURBQTBCLEdBd0J6RTtBQXhCWSxnRUFBMEI7QUEwQnZDLDJDQUFtQixDQUFDLFlBQVksQ0FBQyw0QkFBNEIsRUFBQywwQkFBMEIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhRVNlYXJjaFVzZXJPcGVyYXRvci5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFFU2VhcmNoT3BlcmF0b3JUeXBlIH0gZnJvbSAnLi9LYWx0dXJhRVNlYXJjaE9wZXJhdG9yVHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhRVNlYXJjaFVzZXJCYXNlSXRlbSwgS2FsdHVyYUVTZWFyY2hVc2VyQmFzZUl0ZW1BcmdzIH0gZnJvbSAnLi9LYWx0dXJhRVNlYXJjaFVzZXJCYXNlSXRlbSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYUVTZWFyY2hVc2VyT3BlcmF0b3JBcmdzICBleHRlbmRzIEthbHR1cmFFU2VhcmNoVXNlckJhc2VJdGVtQXJncyB7XG4gICAgb3BlcmF0b3I/IDogS2FsdHVyYUVTZWFyY2hPcGVyYXRvclR5cGU7XG5cdHNlYXJjaEl0ZW1zPyA6IEthbHR1cmFFU2VhcmNoVXNlckJhc2VJdGVtW107XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFFU2VhcmNoVXNlck9wZXJhdG9yIGV4dGVuZHMgS2FsdHVyYUVTZWFyY2hVc2VyQmFzZUl0ZW0ge1xuXG4gICAgb3BlcmF0b3IgOiBLYWx0dXJhRVNlYXJjaE9wZXJhdG9yVHlwZTtcblx0c2VhcmNoSXRlbXMgOiBLYWx0dXJhRVNlYXJjaFVzZXJCYXNlSXRlbVtdO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhRVNlYXJjaFVzZXJPcGVyYXRvckFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnNlYXJjaEl0ZW1zID09PSAndW5kZWZpbmVkJykgdGhpcy5zZWFyY2hJdGVtcyA9IFtdO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFFU2VhcmNoVXNlck9wZXJhdG9yJyB9LFxuXHRcdFx0XHRvcGVyYXRvciA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFFU2VhcmNoT3BlcmF0b3JUeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFFU2VhcmNoT3BlcmF0b3JUeXBlJyB9LFxuXHRcdFx0XHRzZWFyY2hJdGVtcyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUVTZWFyY2hVc2VyQmFzZUl0ZW0sIHN1YlR5cGUgOiAnS2FsdHVyYUVTZWFyY2hVc2VyQmFzZUl0ZW0nIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhRVNlYXJjaFVzZXJPcGVyYXRvcicsS2FsdHVyYUVTZWFyY2hVc2VyT3BlcmF0b3IpO1xuIl19
