import { KalturaObjectMetadata } from '../kaltura-object-base';
import { KalturaHttpNotificationMethod } from './KalturaHttpNotificationMethod';
import { KalturaHttpNotificationAuthenticationMethod } from './KalturaHttpNotificationAuthenticationMethod';
import { KalturaHttpNotificationSslVersion } from './KalturaHttpNotificationSslVersion';
import { KalturaHttpNotificationCertificateType } from './KalturaHttpNotificationCertificateType';
import { KalturaHttpNotificationSslKeyType } from './KalturaHttpNotificationSslKeyType';
import { KalturaKeyValue } from './KalturaKeyValue';
import { KalturaEventNotificationDispatchJobData, KalturaEventNotificationDispatchJobDataArgs } from './KalturaEventNotificationDispatchJobData';
export interface KalturaHttpNotificationDispatchJobDataArgs extends KalturaEventNotificationDispatchJobDataArgs {
    url?: string;
    method?: KalturaHttpNotificationMethod;
    contentType?: string;
    data?: string;
    timeout?: number;
    connectTimeout?: number;
    username?: string;
    password?: string;
    authenticationMethod?: KalturaHttpNotificationAuthenticationMethod;
    sslVersion?: KalturaHttpNotificationSslVersion;
    sslCertificate?: string;
    sslCertificateType?: KalturaHttpNotificationCertificateType;
    sslCertificatePassword?: string;
    sslEngine?: string;
    sslEngineDefault?: string;
    sslKeyType?: KalturaHttpNotificationSslKeyType;
    sslKey?: string;
    sslKeyPassword?: string;
    customHeaders?: KalturaKeyValue[];
    signSecret?: string;
}
export declare class KalturaHttpNotificationDispatchJobData extends KalturaEventNotificationDispatchJobData {
    url: string;
    method: KalturaHttpNotificationMethod;
    contentType: string;
    data: string;
    timeout: number;
    connectTimeout: number;
    username: string;
    password: string;
    authenticationMethod: KalturaHttpNotificationAuthenticationMethod;
    sslVersion: KalturaHttpNotificationSslVersion;
    sslCertificate: string;
    sslCertificateType: KalturaHttpNotificationCertificateType;
    sslCertificatePassword: string;
    sslEngine: string;
    sslEngineDefault: string;
    sslKeyType: KalturaHttpNotificationSslKeyType;
    sslKey: string;
    sslKeyPassword: string;
    customHeaders: KalturaKeyValue[];
    signSecret: string;
    constructor(data?: KalturaHttpNotificationDispatchJobDataArgs);
    protected _getMetadata(): KalturaObjectMetadata;
}
