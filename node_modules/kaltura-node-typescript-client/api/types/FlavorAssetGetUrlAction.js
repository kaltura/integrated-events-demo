"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.FlavorAssetGetUrlAction = void 0;
var tslib_1 = require("tslib");
var KalturaFlavorAssetUrlOptions_1 = require("./KalturaFlavorAssetUrlOptions");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'flavorAsset' action 'getUrl'.
 *
 * Usage: Get download URL for the asset
 *
 * Server response type:         string
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var FlavorAssetGetUrlAction = /** @class */ (function (_super) {
    tslib_1.__extends(FlavorAssetGetUrlAction, _super);
    function FlavorAssetGetUrlAction(data) {
        var _this = _super.call(this, data, { responseType: 's', responseSubType: '', responseConstructor: null }) || this;
        if (typeof _this.forceProxy === 'undefined')
            _this.forceProxy = false;
        return _this;
    }
    FlavorAssetGetUrlAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'flavorasset' },
            action: { type: 'c', default: 'getUrl' },
            id: { type: 's' },
            storageId: { type: 'n' },
            forceProxy: { type: 'b' },
            options: { type: 'o', subTypeConstructor: KalturaFlavorAssetUrlOptions_1.KalturaFlavorAssetUrlOptions, subType: 'KalturaFlavorAssetUrlOptions' }
        });
        return result;
    };
    return FlavorAssetGetUrlAction;
}(kaltura_request_1.KalturaRequest));
exports.FlavorAssetGetUrlAction = FlavorAssetGetUrlAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9GbGF2b3JBc3NldEdldFVybEFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBSUEsK0VBQThFO0FBQzlFLHNEQUF3RTtBQVN4RTs7Ozs7Ozs7O0dBU0c7QUFDSDtJQUE2QyxtREFBc0I7SUFPL0QsaUNBQVksSUFBa0M7UUFBOUMsWUFFSSxrQkFBTSxJQUFJLEVBQUUsRUFBQyxZQUFZLEVBQUcsR0FBRyxFQUFFLGVBQWUsRUFBRyxFQUFFLEVBQUUsbUJBQW1CLEVBQUcsSUFBSSxFQUFFLENBQUMsU0FFdkY7UUFERyxJQUFJLE9BQU8sS0FBSSxDQUFDLFVBQVUsS0FBSyxXQUFXO1lBQUUsS0FBSSxDQUFDLFVBQVUsR0FBRyxLQUFLLENBQUM7O0lBQ3hFLENBQUM7SUFFUyw4Q0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxhQUFhLEVBQUU7WUFDN0QsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsUUFBUSxFQUFFO1lBQzNDLEVBQUUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDbkIsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMxQixVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzNCLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsMkRBQTRCLEVBQUUsT0FBTyxFQUFHLDhCQUE4QixFQUFFO1NBQzVHLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCw4QkFBQztBQUFELENBN0JBLEFBNkJDLENBN0I0QyxnQ0FBYyxHQTZCMUQ7QUE3QlksMERBQXVCIiwiZmlsZSI6ImFwaS90eXBlcy9GbGF2b3JBc3NldEdldFVybEFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5cblxuaW1wb3J0IHsgS2FsdHVyYUZsYXZvckFzc2V0VXJsT3B0aW9ucyB9IGZyb20gJy4vS2FsdHVyYUZsYXZvckFzc2V0VXJsT3B0aW9ucyc7XG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBGbGF2b3JBc3NldEdldFVybEFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBpZCA6IHN0cmluZztcblx0c3RvcmFnZUlkPyA6IG51bWJlcjtcblx0Zm9yY2VQcm94eT8gOiBib29sZWFuO1xuXHRvcHRpb25zPyA6IEthbHR1cmFGbGF2b3JBc3NldFVybE9wdGlvbnM7XG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICdmbGF2b3JBc3NldCcgYWN0aW9uICdnZXRVcmwnLlxuICpcbiAqIFVzYWdlOiBHZXQgZG93bmxvYWQgVVJMIGZvciB0aGUgYXNzZXRcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBzdHJpbmdcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIEZsYXZvckFzc2V0R2V0VXJsQWN0aW9uIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3Q8c3RyaW5nPiB7XG5cbiAgICBpZCA6IHN0cmluZztcblx0c3RvcmFnZUlkIDogbnVtYmVyO1xuXHRmb3JjZVByb3h5IDogYm9vbGVhbjtcblx0b3B0aW9ucyA6IEthbHR1cmFGbGF2b3JBc3NldFVybE9wdGlvbnM7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhIDogRmxhdm9yQXNzZXRHZXRVcmxBY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdzJywgcmVzcG9uc2VTdWJUeXBlIDogJycsIHJlc3BvbnNlQ29uc3RydWN0b3IgOiBudWxsIH0pO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuZm9yY2VQcm94eSA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMuZm9yY2VQcm94eSA9IGZhbHNlO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ2ZsYXZvcmFzc2V0JyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnZ2V0VXJsJyB9LFxuXHRcdFx0XHRpZCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzdG9yYWdlSWQgOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0Zm9yY2VQcm94eSA6IHsgdHlwZSA6ICdiJyB9LFxuXHRcdFx0XHRvcHRpb25zIDogeyB0eXBlIDogJ28nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhRmxhdm9yQXNzZXRVcmxPcHRpb25zLCBzdWJUeXBlIDogJ0thbHR1cmFGbGF2b3JBc3NldFVybE9wdGlvbnMnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
