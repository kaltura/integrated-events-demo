"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ZoomVendorListAction = void 0;
var tslib_1 = require("tslib");
var KalturaZoomIntegrationSettingResponse_1 = require("./KalturaZoomIntegrationSettingResponse");
var KalturaFilterPager_1 = require("./KalturaFilterPager");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'zoomVendor' action 'list'.
 *
 * Usage: List KalturaZoomIntegrationSetting objects
 *
 * Server response type:         KalturaZoomIntegrationSettingResponse
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var ZoomVendorListAction = /** @class */ (function (_super) {
    tslib_1.__extends(ZoomVendorListAction, _super);
    function ZoomVendorListAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaZoomIntegrationSettingResponse', responseConstructor: KalturaZoomIntegrationSettingResponse_1.KalturaZoomIntegrationSettingResponse }) || this;
    }
    ZoomVendorListAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'vendor_zoomvendor' },
            action: { type: 'c', default: 'list' },
            pager: { type: 'o', subTypeConstructor: KalturaFilterPager_1.KalturaFilterPager, subType: 'KalturaFilterPager' }
        });
        return result;
    };
    return ZoomVendorListAction;
}(kaltura_request_1.KalturaRequest));
exports.ZoomVendorListAction = ZoomVendorListAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9ab29tVmVuZG9yTGlzdEFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsaUdBQWdHO0FBRWhHLDJEQUEwRDtBQUMxRCxzREFBd0U7QUFNeEU7Ozs7Ozs7OztHQVNHO0FBQ0g7SUFBMEMsZ0RBQXFEO0lBSTNGLDhCQUFZLElBQWdDO2VBRXhDLGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLHVDQUF1QyxFQUFFLG1CQUFtQixFQUFHLDZFQUFxQyxFQUFHLENBQUM7SUFDL0osQ0FBQztJQUVTLDJDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLG1CQUFtQixFQUFFO1lBQ25FLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLE1BQU0sRUFBRTtZQUN6QyxLQUFLLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLHVDQUFrQixFQUFFLE9BQU8sRUFBRyxvQkFBb0IsRUFBRTtTQUN0RixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsMkJBQUM7QUFBRCxDQXRCQSxBQXNCQyxDQXRCeUMsZ0NBQWMsR0FzQnZEO0FBdEJZLG9EQUFvQiIsImZpbGUiOiJhcGkvdHlwZXMvWm9vbVZlbmRvckxpc3RBY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVpvb21JbnRlZ3JhdGlvblNldHRpbmdSZXNwb25zZSB9IGZyb20gJy4vS2FsdHVyYVpvb21JbnRlZ3JhdGlvblNldHRpbmdSZXNwb25zZSc7XG5cbmltcG9ydCB7IEthbHR1cmFGaWx0ZXJQYWdlciB9IGZyb20gJy4vS2FsdHVyYUZpbHRlclBhZ2VyJztcbmltcG9ydCB7IEthbHR1cmFSZXF1ZXN0LCBLYWx0dXJhUmVxdWVzdEFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFpvb21WZW5kb3JMaXN0QWN0aW9uQXJncyAgZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdEFyZ3Mge1xuICAgIHBhZ2VyPyA6IEthbHR1cmFGaWx0ZXJQYWdlcjtcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ3pvb21WZW5kb3InIGFjdGlvbiAnbGlzdCcuXG4gKlxuICogVXNhZ2U6IExpc3QgS2FsdHVyYVpvb21JbnRlZ3JhdGlvblNldHRpbmcgb2JqZWN0c1xuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIEthbHR1cmFab29tSW50ZWdyYXRpb25TZXR0aW5nUmVzcG9uc2VcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIFpvb21WZW5kb3JMaXN0QWN0aW9uIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3Q8S2FsdHVyYVpvb21JbnRlZ3JhdGlvblNldHRpbmdSZXNwb25zZT4ge1xuXG4gICAgcGFnZXIgOiBLYWx0dXJhRmlsdGVyUGFnZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IFpvb21WZW5kb3JMaXN0QWN0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEsIHtyZXNwb25zZVR5cGUgOiAnbycsIHJlc3BvbnNlU3ViVHlwZSA6ICdLYWx0dXJhWm9vbUludGVncmF0aW9uU2V0dGluZ1Jlc3BvbnNlJywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IEthbHR1cmFab29tSW50ZWdyYXRpb25TZXR0aW5nUmVzcG9uc2UgIH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ3ZlbmRvcl96b29tdmVuZG9yJyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnbGlzdCcgfSxcblx0XHRcdFx0cGFnZXIgOiB7IHR5cGUgOiAnbycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFGaWx0ZXJQYWdlciwgc3ViVHlwZSA6ICdLYWx0dXJhRmlsdGVyUGFnZXInIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
