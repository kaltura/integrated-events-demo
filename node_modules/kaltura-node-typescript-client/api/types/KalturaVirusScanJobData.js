"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaVirusScanJobData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaFileContainer_1 = require("./KalturaFileContainer");
var KalturaVirusScanJobResult_1 = require("./KalturaVirusScanJobResult");
var KalturaVirusFoundAction_1 = require("./KalturaVirusFoundAction");
var KalturaJobData_1 = require("./KalturaJobData");
var KalturaVirusScanJobData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaVirusScanJobData, _super);
    function KalturaVirusScanJobData(data) {
        return _super.call(this, data) || this;
    }
    KalturaVirusScanJobData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaVirusScanJobData' },
            fileContainer: { type: 'o', subTypeConstructor: KalturaFileContainer_1.KalturaFileContainer, subType: 'KalturaFileContainer' },
            flavorAssetId: { type: 's' },
            scanResult: { type: 'en', subTypeConstructor: KalturaVirusScanJobResult_1.KalturaVirusScanJobResult, subType: 'KalturaVirusScanJobResult' },
            virusFoundAction: { type: 'en', subTypeConstructor: KalturaVirusFoundAction_1.KalturaVirusFoundAction, subType: 'KalturaVirusFoundAction' }
        });
        return result;
    };
    return KalturaVirusScanJobData;
}(KalturaJobData_1.KalturaJobData));
exports.KalturaVirusScanJobData = KalturaVirusScanJobData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaVirusScanJobData', KalturaVirusScanJobData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhVmlydXNTY2FuSm9iRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELCtEQUE4RDtBQUM5RCx5RUFBd0U7QUFDeEUscUVBQW9FO0FBQ3BFLG1EQUFzRTtBQVV0RTtJQUE2QyxtREFBYztJQU92RCxpQ0FBWSxJQUFtQztlQUUzQyxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMsOENBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcseUJBQXlCLEVBQUU7WUFDNUUsYUFBYSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRywyQ0FBb0IsRUFBRSxPQUFPLEVBQUcsc0JBQXNCLEVBQUU7WUFDM0csYUFBYSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM5QixVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLHFEQUF5QixFQUFFLE9BQU8sRUFBRywyQkFBMkIsRUFBRTtZQUNuSCxnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsaURBQXVCLEVBQUUsT0FBTyxFQUFHLHlCQUF5QixFQUFFO1NBQzVHLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCw4QkFBQztBQUFELENBM0JBLEFBMkJDLENBM0I0QywrQkFBYyxHQTJCMUQ7QUEzQlksMERBQXVCO0FBNkJwQywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMseUJBQXlCLEVBQUMsdUJBQXVCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYVZpcnVzU2NhbkpvYkRhdGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhRmlsZUNvbnRhaW5lciB9IGZyb20gJy4vS2FsdHVyYUZpbGVDb250YWluZXInO1xuaW1wb3J0IHsgS2FsdHVyYVZpcnVzU2NhbkpvYlJlc3VsdCB9IGZyb20gJy4vS2FsdHVyYVZpcnVzU2NhbkpvYlJlc3VsdCc7XG5pbXBvcnQgeyBLYWx0dXJhVmlydXNGb3VuZEFjdGlvbiB9IGZyb20gJy4vS2FsdHVyYVZpcnVzRm91bmRBY3Rpb24nO1xuaW1wb3J0IHsgS2FsdHVyYUpvYkRhdGEsIEthbHR1cmFKb2JEYXRhQXJncyB9IGZyb20gJy4vS2FsdHVyYUpvYkRhdGEnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFWaXJ1c1NjYW5Kb2JEYXRhQXJncyAgZXh0ZW5kcyBLYWx0dXJhSm9iRGF0YUFyZ3Mge1xuICAgIGZpbGVDb250YWluZXI/IDogS2FsdHVyYUZpbGVDb250YWluZXI7XG5cdGZsYXZvckFzc2V0SWQ/IDogc3RyaW5nO1xuXHRzY2FuUmVzdWx0PyA6IEthbHR1cmFWaXJ1c1NjYW5Kb2JSZXN1bHQ7XG5cdHZpcnVzRm91bmRBY3Rpb24/IDogS2FsdHVyYVZpcnVzRm91bmRBY3Rpb247XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFWaXJ1c1NjYW5Kb2JEYXRhIGV4dGVuZHMgS2FsdHVyYUpvYkRhdGEge1xuXG4gICAgZmlsZUNvbnRhaW5lciA6IEthbHR1cmFGaWxlQ29udGFpbmVyO1xuXHRmbGF2b3JBc3NldElkIDogc3RyaW5nO1xuXHRzY2FuUmVzdWx0IDogS2FsdHVyYVZpcnVzU2NhbkpvYlJlc3VsdDtcblx0dmlydXNGb3VuZEFjdGlvbiA6IEthbHR1cmFWaXJ1c0ZvdW5kQWN0aW9uO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhVmlydXNTY2FuSm9iRGF0YUFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhVmlydXNTY2FuSm9iRGF0YScgfSxcblx0XHRcdFx0ZmlsZUNvbnRhaW5lciA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUZpbGVDb250YWluZXIsIHN1YlR5cGUgOiAnS2FsdHVyYUZpbGVDb250YWluZXInIH0sXG5cdFx0XHRcdGZsYXZvckFzc2V0SWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c2NhblJlc3VsdCA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFWaXJ1c1NjYW5Kb2JSZXN1bHQsIHN1YlR5cGUgOiAnS2FsdHVyYVZpcnVzU2NhbkpvYlJlc3VsdCcgfSxcblx0XHRcdFx0dmlydXNGb3VuZEFjdGlvbiA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFWaXJ1c0ZvdW5kQWN0aW9uLCBzdWJUeXBlIDogJ0thbHR1cmFWaXJ1c0ZvdW5kQWN0aW9uJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYVZpcnVzU2NhbkpvYkRhdGEnLEthbHR1cmFWaXJ1c1NjYW5Kb2JEYXRhKTtcbiJdfQ==
