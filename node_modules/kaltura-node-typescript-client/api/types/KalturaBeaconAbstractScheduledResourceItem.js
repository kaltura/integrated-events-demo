"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaBeaconAbstractScheduledResourceItem = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaESearchItemType_1 = require("./KalturaESearchItemType");
var KalturaESearchRange_1 = require("./KalturaESearchRange");
var KalturaBeaconScheduledResourceBaseItem_1 = require("./KalturaBeaconScheduledResourceBaseItem");
var KalturaBeaconAbstractScheduledResourceItem = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaBeaconAbstractScheduledResourceItem, _super);
    function KalturaBeaconAbstractScheduledResourceItem(data) {
        return _super.call(this, data) || this;
    }
    KalturaBeaconAbstractScheduledResourceItem.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaBeaconAbstractScheduledResourceItem' },
            searchTerm: { type: 's' },
            itemType: { type: 'en', subTypeConstructor: KalturaESearchItemType_1.KalturaESearchItemType, subType: 'KalturaESearchItemType' },
            range: { type: 'o', subTypeConstructor: KalturaESearchRange_1.KalturaESearchRange, subType: 'KalturaESearchRange' }
        });
        return result;
    };
    return KalturaBeaconAbstractScheduledResourceItem;
}(KalturaBeaconScheduledResourceBaseItem_1.KalturaBeaconScheduledResourceBaseItem));
exports.KalturaBeaconAbstractScheduledResourceItem = KalturaBeaconAbstractScheduledResourceItem;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaBeaconAbstractScheduledResourceItem', KalturaBeaconAbstractScheduledResourceItem);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQmVhY29uQWJzdHJhY3RTY2hlZHVsZWRSZXNvdXJjZUl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxtRUFBa0U7QUFDbEUsNkRBQTREO0FBQzVELG1HQUE4STtBQVM5STtJQUFnRSxzRUFBc0M7SUFNbEcsb0RBQVksSUFBc0Q7ZUFFOUQsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLGlFQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDRDQUE0QyxFQUFFO1lBQy9GLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDM0IsUUFBUSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywrQ0FBc0IsRUFBRSxPQUFPLEVBQUcsd0JBQXdCLEVBQUU7WUFDM0csS0FBSyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyx5Q0FBbUIsRUFBRSxPQUFPLEVBQUcscUJBQXFCLEVBQUU7U0FDeEYsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLGlEQUFDO0FBQUQsQ0F6QkEsQUF5QkMsQ0F6QitELCtFQUFzQyxHQXlCckc7QUF6QlksZ0dBQTBDO0FBMkJ2RCwyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsNENBQTRDLEVBQUMsMENBQTBDLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYUJlYWNvbkFic3RyYWN0U2NoZWR1bGVkUmVzb3VyY2VJdGVtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYUVTZWFyY2hJdGVtVHlwZSB9IGZyb20gJy4vS2FsdHVyYUVTZWFyY2hJdGVtVHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhRVNlYXJjaFJhbmdlIH0gZnJvbSAnLi9LYWx0dXJhRVNlYXJjaFJhbmdlJztcbmltcG9ydCB7IEthbHR1cmFCZWFjb25TY2hlZHVsZWRSZXNvdXJjZUJhc2VJdGVtLCBLYWx0dXJhQmVhY29uU2NoZWR1bGVkUmVzb3VyY2VCYXNlSXRlbUFyZ3MgfSBmcm9tICcuL0thbHR1cmFCZWFjb25TY2hlZHVsZWRSZXNvdXJjZUJhc2VJdGVtJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhQmVhY29uQWJzdHJhY3RTY2hlZHVsZWRSZXNvdXJjZUl0ZW1BcmdzICBleHRlbmRzIEthbHR1cmFCZWFjb25TY2hlZHVsZWRSZXNvdXJjZUJhc2VJdGVtQXJncyB7XG4gICAgc2VhcmNoVGVybT8gOiBzdHJpbmc7XG5cdGl0ZW1UeXBlPyA6IEthbHR1cmFFU2VhcmNoSXRlbVR5cGU7XG5cdHJhbmdlPyA6IEthbHR1cmFFU2VhcmNoUmFuZ2U7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFCZWFjb25BYnN0cmFjdFNjaGVkdWxlZFJlc291cmNlSXRlbSBleHRlbmRzIEthbHR1cmFCZWFjb25TY2hlZHVsZWRSZXNvdXJjZUJhc2VJdGVtIHtcblxuICAgIHNlYXJjaFRlcm0gOiBzdHJpbmc7XG5cdGl0ZW1UeXBlIDogS2FsdHVyYUVTZWFyY2hJdGVtVHlwZTtcblx0cmFuZ2UgOiBLYWx0dXJhRVNlYXJjaFJhbmdlO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhQmVhY29uQWJzdHJhY3RTY2hlZHVsZWRSZXNvdXJjZUl0ZW1BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYUJlYWNvbkFic3RyYWN0U2NoZWR1bGVkUmVzb3VyY2VJdGVtJyB9LFxuXHRcdFx0XHRzZWFyY2hUZXJtIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGl0ZW1UeXBlIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUVTZWFyY2hJdGVtVHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhRVNlYXJjaEl0ZW1UeXBlJyB9LFxuXHRcdFx0XHRyYW5nZSA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUVTZWFyY2hSYW5nZSwgc3ViVHlwZSA6ICdLYWx0dXJhRVNlYXJjaFJhbmdlJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUJlYWNvbkFic3RyYWN0U2NoZWR1bGVkUmVzb3VyY2VJdGVtJyxLYWx0dXJhQmVhY29uQWJzdHJhY3RTY2hlZHVsZWRSZXNvdXJjZUl0ZW0pO1xuIl19
