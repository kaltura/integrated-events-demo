"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaPlaybackContext = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaPlaybackSource_1 = require("./KalturaPlaybackSource");
var KalturaCaptionPlaybackPluginData_1 = require("./KalturaCaptionPlaybackPluginData");
var KalturaFlavorAsset_1 = require("./KalturaFlavorAsset");
var KalturaRuleAction_1 = require("./KalturaRuleAction");
var KalturaAccessControlMessage_1 = require("./KalturaAccessControlMessage");
var KalturaObject_1 = require("./KalturaObject");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaPlaybackContext = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaPlaybackContext, _super);
    function KalturaPlaybackContext(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.sources === 'undefined')
            _this.sources = [];
        if (typeof _this.playbackCaptions === 'undefined')
            _this.playbackCaptions = [];
        if (typeof _this.flavorAssets === 'undefined')
            _this.flavorAssets = [];
        if (typeof _this.actions === 'undefined')
            _this.actions = [];
        if (typeof _this.messages === 'undefined')
            _this.messages = [];
        if (typeof _this.bumperData === 'undefined')
            _this.bumperData = [];
        return _this;
    }
    KalturaPlaybackContext.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaPlaybackContext' },
            sources: { type: 'a', subTypeConstructor: KalturaPlaybackSource_1.KalturaPlaybackSource, subType: 'KalturaPlaybackSource' },
            playbackCaptions: { type: 'a', subTypeConstructor: KalturaCaptionPlaybackPluginData_1.KalturaCaptionPlaybackPluginData, subType: 'KalturaCaptionPlaybackPluginData' },
            flavorAssets: { type: 'a', subTypeConstructor: KalturaFlavorAsset_1.KalturaFlavorAsset, subType: 'KalturaFlavorAsset' },
            actions: { type: 'a', subTypeConstructor: KalturaRuleAction_1.KalturaRuleAction, subType: 'KalturaRuleAction' },
            messages: { type: 'a', subTypeConstructor: KalturaAccessControlMessage_1.KalturaAccessControlMessage, subType: 'KalturaAccessControlMessage' },
            bumperData: { type: 'a', subTypeConstructor: KalturaObject_1.KalturaObject, subType: 'KalturaObject' }
        });
        return result;
    };
    return KalturaPlaybackContext;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaPlaybackContext = KalturaPlaybackContext;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaPlaybackContext', KalturaPlaybackContext);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhUGxheWJhY2tDb250ZXh0LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsaUVBQWdFO0FBQ2hFLHVGQUFzRjtBQUN0RiwyREFBMEQ7QUFDMUQseURBQXdEO0FBQ3hELDZFQUE0RTtBQUM1RSxpREFBZ0Q7QUFDaEQsOERBQWtGO0FBWWxGO0lBQTRDLGtEQUFpQjtJQVN6RCxnQ0FBWSxJQUFrQztRQUE5QyxZQUVJLGtCQUFNLElBQUksQ0FBQyxTQU9kO1FBTkcsSUFBSSxPQUFPLEtBQUksQ0FBQyxPQUFPLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDO1FBQ2pFLElBQUksT0FBTyxLQUFJLENBQUMsZ0JBQWdCLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxnQkFBZ0IsR0FBRyxFQUFFLENBQUM7UUFDN0UsSUFBSSxPQUFPLEtBQUksQ0FBQyxZQUFZLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxZQUFZLEdBQUcsRUFBRSxDQUFDO1FBQ3JFLElBQUksT0FBTyxLQUFJLENBQUMsT0FBTyxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsT0FBTyxHQUFHLEVBQUUsQ0FBQztRQUMzRCxJQUFJLE9BQU8sS0FBSSxDQUFDLFFBQVEsS0FBSyxXQUFXO1lBQUUsS0FBSSxDQUFDLFFBQVEsR0FBRyxFQUFFLENBQUM7UUFDN0QsSUFBSSxPQUFPLEtBQUksQ0FBQyxVQUFVLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDOztJQUMvRCxDQUFDO0lBRVMsNkNBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsd0JBQXdCLEVBQUU7WUFDM0UsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyw2Q0FBcUIsRUFBRSxPQUFPLEVBQUcsdUJBQXVCLEVBQUU7WUFDdkcsZ0JBQWdCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLG1FQUFnQyxFQUFFLE9BQU8sRUFBRyxrQ0FBa0MsRUFBRTtZQUN0SSxZQUFZLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLHVDQUFrQixFQUFFLE9BQU8sRUFBRyxvQkFBb0IsRUFBRTtZQUN0RyxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLHFDQUFpQixFQUFFLE9BQU8sRUFBRyxtQkFBbUIsRUFBRTtZQUMvRixRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLHlEQUEyQixFQUFFLE9BQU8sRUFBRyw2QkFBNkIsRUFBRTtZQUNwSCxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLDZCQUFhLEVBQUUsT0FBTyxFQUFHLGVBQWUsRUFBRTtTQUNqRixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsNkJBQUM7QUFBRCxDQXJDQSxBQXFDQyxDQXJDMkMsdUNBQWlCLEdBcUM1RDtBQXJDWSx3REFBc0I7QUF1Q25DLDJDQUFtQixDQUFDLFlBQVksQ0FBQyx3QkFBd0IsRUFBQyxzQkFBc0IsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhUGxheWJhY2tDb250ZXh0LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYVBsYXliYWNrU291cmNlIH0gZnJvbSAnLi9LYWx0dXJhUGxheWJhY2tTb3VyY2UnO1xuaW1wb3J0IHsgS2FsdHVyYUNhcHRpb25QbGF5YmFja1BsdWdpbkRhdGEgfSBmcm9tICcuL0thbHR1cmFDYXB0aW9uUGxheWJhY2tQbHVnaW5EYXRhJztcbmltcG9ydCB7IEthbHR1cmFGbGF2b3JBc3NldCB9IGZyb20gJy4vS2FsdHVyYUZsYXZvckFzc2V0JztcbmltcG9ydCB7IEthbHR1cmFSdWxlQWN0aW9uIH0gZnJvbSAnLi9LYWx0dXJhUnVsZUFjdGlvbic7XG5pbXBvcnQgeyBLYWx0dXJhQWNjZXNzQ29udHJvbE1lc3NhZ2UgfSBmcm9tICcuL0thbHR1cmFBY2Nlc3NDb250cm9sTWVzc2FnZSc7XG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0IH0gZnJvbSAnLi9LYWx0dXJhT2JqZWN0JztcbmltcG9ydCB7IEthbHR1cmFPYmplY3RCYXNlLCBLYWx0dXJhT2JqZWN0QmFzZUFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhUGxheWJhY2tDb250ZXh0QXJncyAgZXh0ZW5kcyBLYWx0dXJhT2JqZWN0QmFzZUFyZ3Mge1xuICAgIHNvdXJjZXM/IDogS2FsdHVyYVBsYXliYWNrU291cmNlW107XG5cdHBsYXliYWNrQ2FwdGlvbnM/IDogS2FsdHVyYUNhcHRpb25QbGF5YmFja1BsdWdpbkRhdGFbXTtcblx0Zmxhdm9yQXNzZXRzPyA6IEthbHR1cmFGbGF2b3JBc3NldFtdO1xuXHRhY3Rpb25zPyA6IEthbHR1cmFSdWxlQWN0aW9uW107XG5cdG1lc3NhZ2VzPyA6IEthbHR1cmFBY2Nlc3NDb250cm9sTWVzc2FnZVtdO1xuXHRidW1wZXJEYXRhPyA6IEthbHR1cmFPYmplY3RbXTtcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYVBsYXliYWNrQ29udGV4dCBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlIHtcblxuICAgIHNvdXJjZXMgOiBLYWx0dXJhUGxheWJhY2tTb3VyY2VbXTtcblx0cGxheWJhY2tDYXB0aW9ucyA6IEthbHR1cmFDYXB0aW9uUGxheWJhY2tQbHVnaW5EYXRhW107XG5cdGZsYXZvckFzc2V0cyA6IEthbHR1cmFGbGF2b3JBc3NldFtdO1xuXHRhY3Rpb25zIDogS2FsdHVyYVJ1bGVBY3Rpb25bXTtcblx0bWVzc2FnZXMgOiBLYWx0dXJhQWNjZXNzQ29udHJvbE1lc3NhZ2VbXTtcblx0YnVtcGVyRGF0YSA6IEthbHR1cmFPYmplY3RbXTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYVBsYXliYWNrQ29udGV4dEFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLnNvdXJjZXMgPT09ICd1bmRlZmluZWQnKSB0aGlzLnNvdXJjZXMgPSBbXTtcblx0XHRpZiAodHlwZW9mIHRoaXMucGxheWJhY2tDYXB0aW9ucyA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMucGxheWJhY2tDYXB0aW9ucyA9IFtdO1xuXHRcdGlmICh0eXBlb2YgdGhpcy5mbGF2b3JBc3NldHMgPT09ICd1bmRlZmluZWQnKSB0aGlzLmZsYXZvckFzc2V0cyA9IFtdO1xuXHRcdGlmICh0eXBlb2YgdGhpcy5hY3Rpb25zID09PSAndW5kZWZpbmVkJykgdGhpcy5hY3Rpb25zID0gW107XG5cdFx0aWYgKHR5cGVvZiB0aGlzLm1lc3NhZ2VzID09PSAndW5kZWZpbmVkJykgdGhpcy5tZXNzYWdlcyA9IFtdO1xuXHRcdGlmICh0eXBlb2YgdGhpcy5idW1wZXJEYXRhID09PSAndW5kZWZpbmVkJykgdGhpcy5idW1wZXJEYXRhID0gW107XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYVBsYXliYWNrQ29udGV4dCcgfSxcblx0XHRcdFx0c291cmNlcyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVBsYXliYWNrU291cmNlLCBzdWJUeXBlIDogJ0thbHR1cmFQbGF5YmFja1NvdXJjZScgfSxcblx0XHRcdFx0cGxheWJhY2tDYXB0aW9ucyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUNhcHRpb25QbGF5YmFja1BsdWdpbkRhdGEsIHN1YlR5cGUgOiAnS2FsdHVyYUNhcHRpb25QbGF5YmFja1BsdWdpbkRhdGEnIH0sXG5cdFx0XHRcdGZsYXZvckFzc2V0cyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUZsYXZvckFzc2V0LCBzdWJUeXBlIDogJ0thbHR1cmFGbGF2b3JBc3NldCcgfSxcblx0XHRcdFx0YWN0aW9ucyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVJ1bGVBY3Rpb24sIHN1YlR5cGUgOiAnS2FsdHVyYVJ1bGVBY3Rpb24nIH0sXG5cdFx0XHRcdG1lc3NhZ2VzIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQWNjZXNzQ29udHJvbE1lc3NhZ2UsIHN1YlR5cGUgOiAnS2FsdHVyYUFjY2Vzc0NvbnRyb2xNZXNzYWdlJyB9LFxuXHRcdFx0XHRidW1wZXJEYXRhIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhT2JqZWN0LCBzdWJUeXBlIDogJ0thbHR1cmFPYmplY3QnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhUGxheWJhY2tDb250ZXh0JyxLYWx0dXJhUGxheWJhY2tDb250ZXh0KTtcbiJdfQ==
