"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaDropFolder = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaDropFolderType_1 = require("./KalturaDropFolderType");
var KalturaDropFolderStatus_1 = require("./KalturaDropFolderStatus");
var KalturaDropFolderFileDeletePolicy_1 = require("./KalturaDropFolderFileDeletePolicy");
var KalturaDropFolderFileHandlerType_1 = require("./KalturaDropFolderFileHandlerType");
var KalturaDropFolderFileHandlerConfig_1 = require("./KalturaDropFolderFileHandlerConfig");
var KalturaDropFolderErrorCode_1 = require("./KalturaDropFolderErrorCode");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaDropFolder = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaDropFolder, _super);
    function KalturaDropFolder(data) {
        return _super.call(this, data) || this;
    }
    KalturaDropFolder.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaDropFolder' },
            id: { type: 'n', readOnly: true },
            partnerId: { type: 'n' },
            name: { type: 's' },
            description: { type: 's' },
            type: { type: 'es', subTypeConstructor: KalturaDropFolderType_1.KalturaDropFolderType, subType: 'KalturaDropFolderType' },
            status: { type: 'en', subTypeConstructor: KalturaDropFolderStatus_1.KalturaDropFolderStatus, subType: 'KalturaDropFolderStatus' },
            conversionProfileId: { type: 'n' },
            dc: { type: 'n' },
            path: { type: 's' },
            fileSizeCheckInterval: { type: 'n' },
            fileDeletePolicy: { type: 'en', subTypeConstructor: KalturaDropFolderFileDeletePolicy_1.KalturaDropFolderFileDeletePolicy, subType: 'KalturaDropFolderFileDeletePolicy' },
            fileDeleteRegex: { type: 's' },
            autoFileDeleteDays: { type: 'n' },
            fileHandlerType: { type: 'es', subTypeConstructor: KalturaDropFolderFileHandlerType_1.KalturaDropFolderFileHandlerType, subType: 'KalturaDropFolderFileHandlerType' },
            fileNamePatterns: { type: 's' },
            fileHandlerConfig: { type: 'o', subTypeConstructor: KalturaDropFolderFileHandlerConfig_1.KalturaDropFolderFileHandlerConfig, subType: 'KalturaDropFolderFileHandlerConfig' },
            tags: { type: 's' },
            errorCode: { type: 'es', subTypeConstructor: KalturaDropFolderErrorCode_1.KalturaDropFolderErrorCode, subType: 'KalturaDropFolderErrorCode' },
            errorDescription: { type: 's' },
            ignoreFileNamePatterns: { type: 's' },
            createdAt: { type: 'd', readOnly: true },
            updatedAt: { type: 'd', readOnly: true },
            lastAccessedAt: { type: 'n' },
            incremental: { type: 'b' },
            lastFileTimestamp: { type: 'n' },
            metadataProfileId: { type: 'n' },
            categoriesMetadataFieldName: { type: 's' },
            enforceEntitlement: { type: 'b' },
            shouldValidateKS: { type: 'b' }
        });
        return result;
    };
    return KalturaDropFolder;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaDropFolder = KalturaDropFolder;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaDropFolder', KalturaDropFolder);

//# sourceMappingURL=data:application/json;charset=utf8;base64,
