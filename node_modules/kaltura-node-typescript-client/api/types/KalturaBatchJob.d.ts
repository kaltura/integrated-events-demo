import { KalturaObjectMetadata } from '../kaltura-object-base';
import { KalturaBatchJobType } from './KalturaBatchJobType';
import { KalturaJobData } from './KalturaJobData';
import { KalturaBatchJobStatus } from './KalturaBatchJobStatus';
import { KalturaBatchHistoryData } from './KalturaBatchHistoryData';
import { KalturaBatchJobErrorTypes } from './KalturaBatchJobErrorTypes';
import { KalturaObjectBase, KalturaObjectBaseArgs } from '../kaltura-object-base';
export interface KalturaBatchJobArgs extends KalturaObjectBaseArgs {
    entryId?: string;
    entryName?: string;
    jobSubType?: number;
    data?: KalturaJobData;
    status?: KalturaBatchJobStatus;
    abort?: number;
    checkAgainTimeout?: number;
    message?: string;
    description?: string;
    priority?: number;
    history?: KalturaBatchHistoryData[];
    bulkJobId?: number;
    batchVersion?: number;
    parentJobId?: number;
    rootJobId?: number;
    queueTime?: number;
    finishTime?: number;
    errType?: KalturaBatchJobErrorTypes;
    errNumber?: number;
    estimatedEffort?: number;
    urgency?: number;
    schedulerId?: number;
    workerId?: number;
    batchIndex?: number;
    lastSchedulerId?: number;
    lastWorkerId?: number;
    dc?: number;
    jobObjectId?: string;
    jobObjectType?: number;
}
export declare class KalturaBatchJob extends KalturaObjectBase {
    readonly id: number;
    readonly partnerId: number;
    readonly createdAt: Date;
    readonly updatedAt: Date;
    readonly deletedAt: Date;
    readonly lockExpiration: number;
    readonly executionAttempts: number;
    readonly lockVersion: number;
    entryId: string;
    entryName: string;
    readonly jobType: KalturaBatchJobType;
    jobSubType: number;
    data: KalturaJobData;
    status: KalturaBatchJobStatus;
    abort: number;
    checkAgainTimeout: number;
    message: string;
    description: string;
    priority: number;
    history: KalturaBatchHistoryData[];
    bulkJobId: number;
    batchVersion: number;
    parentJobId: number;
    rootJobId: number;
    queueTime: number;
    finishTime: number;
    errType: KalturaBatchJobErrorTypes;
    errNumber: number;
    estimatedEffort: number;
    urgency: number;
    schedulerId: number;
    workerId: number;
    batchIndex: number;
    lastSchedulerId: number;
    lastWorkerId: number;
    dc: number;
    jobObjectId: string;
    jobObjectType: number;
    constructor(data?: KalturaBatchJobArgs);
    protected _getMetadata(): KalturaObjectMetadata;
}
