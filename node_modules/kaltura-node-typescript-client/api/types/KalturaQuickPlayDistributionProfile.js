"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaQuickPlayDistributionProfile = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaConfigurableDistributionProfile_1 = require("./KalturaConfigurableDistributionProfile");
var KalturaQuickPlayDistributionProfile = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaQuickPlayDistributionProfile, _super);
    function KalturaQuickPlayDistributionProfile(data) {
        return _super.call(this, data) || this;
    }
    KalturaQuickPlayDistributionProfile.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaQuickPlayDistributionProfile' },
            sftpHost: { type: 's' },
            sftpLogin: { type: 's' },
            sftpPass: { type: 's' },
            sftpBasePath: { type: 's' },
            channelTitle: { type: 's' },
            channelLink: { type: 's' },
            channelDescription: { type: 's' },
            channelManagingEditor: { type: 's' },
            channelLanguage: { type: 's' },
            channelImageTitle: { type: 's' },
            channelImageWidth: { type: 's' },
            channelImageHeight: { type: 's' },
            channelImageLink: { type: 's' },
            channelImageUrl: { type: 's' },
            channelCopyright: { type: 's' },
            channelGenerator: { type: 's' },
            channelRating: { type: 's' }
        });
        return result;
    };
    return KalturaQuickPlayDistributionProfile;
}(KalturaConfigurableDistributionProfile_1.KalturaConfigurableDistributionProfile));
exports.KalturaQuickPlayDistributionProfile = KalturaQuickPlayDistributionProfile;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaQuickPlayDistributionProfile', KalturaQuickPlayDistributionProfile);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhUXVpY2tQbGF5RGlzdHJpYnV0aW9uUHJvZmlsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELG1HQUE4STtBQXVCOUk7SUFBeUQsK0RBQXNDO0lBb0IzRiw2Q0FBWSxJQUErQztlQUV2RCxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMsMERBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcscUNBQXFDLEVBQUU7WUFDeEYsUUFBUSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN6QixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzFCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM3QixZQUFZLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzdCLFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDNUIsa0JBQWtCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ25DLHFCQUFxQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN0QyxlQUFlLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ2hDLGlCQUFpQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNsQyxpQkFBaUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDbEMsa0JBQWtCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ25DLGdCQUFnQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNqQyxlQUFlLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ2hDLGdCQUFnQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNqQyxnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDakMsYUFBYSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtTQUNyQixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsMENBQUM7QUFBRCxDQXJEQSxBQXFEQyxDQXJEd0QsK0VBQXNDLEdBcUQ5RjtBQXJEWSxrRkFBbUM7QUF1RGhELDJDQUFtQixDQUFDLFlBQVksQ0FBQyxxQ0FBcUMsRUFBQyxtQ0FBbUMsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhUXVpY2tQbGF5RGlzdHJpYnV0aW9uUHJvZmlsZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFDb25maWd1cmFibGVEaXN0cmlidXRpb25Qcm9maWxlLCBLYWx0dXJhQ29uZmlndXJhYmxlRGlzdHJpYnV0aW9uUHJvZmlsZUFyZ3MgfSBmcm9tICcuL0thbHR1cmFDb25maWd1cmFibGVEaXN0cmlidXRpb25Qcm9maWxlJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhUXVpY2tQbGF5RGlzdHJpYnV0aW9uUHJvZmlsZUFyZ3MgIGV4dGVuZHMgS2FsdHVyYUNvbmZpZ3VyYWJsZURpc3RyaWJ1dGlvblByb2ZpbGVBcmdzIHtcbiAgICBzZnRwSG9zdD8gOiBzdHJpbmc7XG5cdHNmdHBMb2dpbj8gOiBzdHJpbmc7XG5cdHNmdHBQYXNzPyA6IHN0cmluZztcblx0c2Z0cEJhc2VQYXRoPyA6IHN0cmluZztcblx0Y2hhbm5lbFRpdGxlPyA6IHN0cmluZztcblx0Y2hhbm5lbExpbms/IDogc3RyaW5nO1xuXHRjaGFubmVsRGVzY3JpcHRpb24/IDogc3RyaW5nO1xuXHRjaGFubmVsTWFuYWdpbmdFZGl0b3I/IDogc3RyaW5nO1xuXHRjaGFubmVsTGFuZ3VhZ2U/IDogc3RyaW5nO1xuXHRjaGFubmVsSW1hZ2VUaXRsZT8gOiBzdHJpbmc7XG5cdGNoYW5uZWxJbWFnZVdpZHRoPyA6IHN0cmluZztcblx0Y2hhbm5lbEltYWdlSGVpZ2h0PyA6IHN0cmluZztcblx0Y2hhbm5lbEltYWdlTGluaz8gOiBzdHJpbmc7XG5cdGNoYW5uZWxJbWFnZVVybD8gOiBzdHJpbmc7XG5cdGNoYW5uZWxDb3B5cmlnaHQ/IDogc3RyaW5nO1xuXHRjaGFubmVsR2VuZXJhdG9yPyA6IHN0cmluZztcblx0Y2hhbm5lbFJhdGluZz8gOiBzdHJpbmc7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFRdWlja1BsYXlEaXN0cmlidXRpb25Qcm9maWxlIGV4dGVuZHMgS2FsdHVyYUNvbmZpZ3VyYWJsZURpc3RyaWJ1dGlvblByb2ZpbGUge1xuXG4gICAgc2Z0cEhvc3QgOiBzdHJpbmc7XG5cdHNmdHBMb2dpbiA6IHN0cmluZztcblx0c2Z0cFBhc3MgOiBzdHJpbmc7XG5cdHNmdHBCYXNlUGF0aCA6IHN0cmluZztcblx0Y2hhbm5lbFRpdGxlIDogc3RyaW5nO1xuXHRjaGFubmVsTGluayA6IHN0cmluZztcblx0Y2hhbm5lbERlc2NyaXB0aW9uIDogc3RyaW5nO1xuXHRjaGFubmVsTWFuYWdpbmdFZGl0b3IgOiBzdHJpbmc7XG5cdGNoYW5uZWxMYW5ndWFnZSA6IHN0cmluZztcblx0Y2hhbm5lbEltYWdlVGl0bGUgOiBzdHJpbmc7XG5cdGNoYW5uZWxJbWFnZVdpZHRoIDogc3RyaW5nO1xuXHRjaGFubmVsSW1hZ2VIZWlnaHQgOiBzdHJpbmc7XG5cdGNoYW5uZWxJbWFnZUxpbmsgOiBzdHJpbmc7XG5cdGNoYW5uZWxJbWFnZVVybCA6IHN0cmluZztcblx0Y2hhbm5lbENvcHlyaWdodCA6IHN0cmluZztcblx0Y2hhbm5lbEdlbmVyYXRvciA6IHN0cmluZztcblx0Y2hhbm5lbFJhdGluZyA6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYVF1aWNrUGxheURpc3RyaWJ1dGlvblByb2ZpbGVBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYVF1aWNrUGxheURpc3RyaWJ1dGlvblByb2ZpbGUnIH0sXG5cdFx0XHRcdHNmdHBIb3N0IDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHNmdHBMb2dpbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzZnRwUGFzcyA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzZnRwQmFzZVBhdGggOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Y2hhbm5lbFRpdGxlIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNoYW5uZWxMaW5rIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNoYW5uZWxEZXNjcmlwdGlvbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRjaGFubmVsTWFuYWdpbmdFZGl0b3IgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Y2hhbm5lbExhbmd1YWdlIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNoYW5uZWxJbWFnZVRpdGxlIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNoYW5uZWxJbWFnZVdpZHRoIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNoYW5uZWxJbWFnZUhlaWdodCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRjaGFubmVsSW1hZ2VMaW5rIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNoYW5uZWxJbWFnZVVybCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRjaGFubmVsQ29weXJpZ2h0IDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNoYW5uZWxHZW5lcmF0b3IgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Y2hhbm5lbFJhdGluZyA6IHsgdHlwZSA6ICdzJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYVF1aWNrUGxheURpc3RyaWJ1dGlvblByb2ZpbGUnLEthbHR1cmFRdWlja1BsYXlEaXN0cmlidXRpb25Qcm9maWxlKTtcbiJdfQ==
