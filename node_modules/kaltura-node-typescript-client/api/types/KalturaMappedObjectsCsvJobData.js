"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaMappedObjectsCsvJobData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaCsvAdditionalFieldInfo_1 = require("./KalturaCsvAdditionalFieldInfo");
var KalturaKeyValue_1 = require("./KalturaKeyValue");
var KalturaExportToCsvOptions_1 = require("./KalturaExportToCsvOptions");
var KalturaExportCsvJobData_1 = require("./KalturaExportCsvJobData");
var KalturaMappedObjectsCsvJobData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaMappedObjectsCsvJobData, _super);
    function KalturaMappedObjectsCsvJobData(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.additionalFields === 'undefined')
            _this.additionalFields = [];
        if (typeof _this.mappedFields === 'undefined')
            _this.mappedFields = [];
        return _this;
    }
    KalturaMappedObjectsCsvJobData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaMappedObjectsCsvJobData' },
            metadataProfileId: { type: 'n' },
            additionalFields: { type: 'a', subTypeConstructor: KalturaCsvAdditionalFieldInfo_1.KalturaCsvAdditionalFieldInfo, subType: 'KalturaCsvAdditionalFieldInfo' },
            mappedFields: { type: 'a', subTypeConstructor: KalturaKeyValue_1.KalturaKeyValue, subType: 'KalturaKeyValue' },
            options: { type: 'o', subTypeConstructor: KalturaExportToCsvOptions_1.KalturaExportToCsvOptions, subType: 'KalturaExportToCsvOptions' }
        });
        return result;
    };
    return KalturaMappedObjectsCsvJobData;
}(KalturaExportCsvJobData_1.KalturaExportCsvJobData));
exports.KalturaMappedObjectsCsvJobData = KalturaMappedObjectsCsvJobData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaMappedObjectsCsvJobData', KalturaMappedObjectsCsvJobData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhTWFwcGVkT2JqZWN0c0NzdkpvYkRhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxpRkFBZ0Y7QUFDaEYscURBQW9EO0FBQ3BELHlFQUF3RTtBQUN4RSxxRUFBaUc7QUFVakc7SUFBb0QsMERBQXVCO0lBT3ZFLHdDQUFZLElBQTBDO1FBQXRELFlBRUksa0JBQU0sSUFBSSxDQUFDLFNBR2Q7UUFGRyxJQUFJLE9BQU8sS0FBSSxDQUFDLGdCQUFnQixLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsZ0JBQWdCLEdBQUcsRUFBRSxDQUFDO1FBQ25GLElBQUksT0FBTyxLQUFJLENBQUMsWUFBWSxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsWUFBWSxHQUFHLEVBQUUsQ0FBQzs7SUFDbkUsQ0FBQztJQUVTLHFEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLGdDQUFnQyxFQUFFO1lBQ25GLGlCQUFpQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNsQyxnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsNkRBQTZCLEVBQUUsT0FBTyxFQUFHLCtCQUErQixFQUFFO1lBQ2hJLFlBQVksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsaUNBQWUsRUFBRSxPQUFPLEVBQUcsaUJBQWlCLEVBQUU7WUFDaEcsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxxREFBeUIsRUFBRSxPQUFPLEVBQUcsMkJBQTJCLEVBQUU7U0FDdEcsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHFDQUFDO0FBQUQsQ0E3QkEsQUE2QkMsQ0E3Qm1ELGlEQUF1QixHQTZCMUU7QUE3Qlksd0VBQThCO0FBK0IzQywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsZ0NBQWdDLEVBQUMsOEJBQThCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYU1hcHBlZE9iamVjdHNDc3ZKb2JEYXRhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYUNzdkFkZGl0aW9uYWxGaWVsZEluZm8gfSBmcm9tICcuL0thbHR1cmFDc3ZBZGRpdGlvbmFsRmllbGRJbmZvJztcbmltcG9ydCB7IEthbHR1cmFLZXlWYWx1ZSB9IGZyb20gJy4vS2FsdHVyYUtleVZhbHVlJztcbmltcG9ydCB7IEthbHR1cmFFeHBvcnRUb0Nzdk9wdGlvbnMgfSBmcm9tICcuL0thbHR1cmFFeHBvcnRUb0Nzdk9wdGlvbnMnO1xuaW1wb3J0IHsgS2FsdHVyYUV4cG9ydENzdkpvYkRhdGEsIEthbHR1cmFFeHBvcnRDc3ZKb2JEYXRhQXJncyB9IGZyb20gJy4vS2FsdHVyYUV4cG9ydENzdkpvYkRhdGEnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFNYXBwZWRPYmplY3RzQ3N2Sm9iRGF0YUFyZ3MgIGV4dGVuZHMgS2FsdHVyYUV4cG9ydENzdkpvYkRhdGFBcmdzIHtcbiAgICBtZXRhZGF0YVByb2ZpbGVJZD8gOiBudW1iZXI7XG5cdGFkZGl0aW9uYWxGaWVsZHM/IDogS2FsdHVyYUNzdkFkZGl0aW9uYWxGaWVsZEluZm9bXTtcblx0bWFwcGVkRmllbGRzPyA6IEthbHR1cmFLZXlWYWx1ZVtdO1xuXHRvcHRpb25zPyA6IEthbHR1cmFFeHBvcnRUb0Nzdk9wdGlvbnM7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFNYXBwZWRPYmplY3RzQ3N2Sm9iRGF0YSBleHRlbmRzIEthbHR1cmFFeHBvcnRDc3ZKb2JEYXRhIHtcblxuICAgIG1ldGFkYXRhUHJvZmlsZUlkIDogbnVtYmVyO1xuXHRhZGRpdGlvbmFsRmllbGRzIDogS2FsdHVyYUNzdkFkZGl0aW9uYWxGaWVsZEluZm9bXTtcblx0bWFwcGVkRmllbGRzIDogS2FsdHVyYUtleVZhbHVlW107XG5cdG9wdGlvbnMgOiBLYWx0dXJhRXhwb3J0VG9Dc3ZPcHRpb25zO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhTWFwcGVkT2JqZWN0c0NzdkpvYkRhdGFBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5hZGRpdGlvbmFsRmllbGRzID09PSAndW5kZWZpbmVkJykgdGhpcy5hZGRpdGlvbmFsRmllbGRzID0gW107XG5cdFx0aWYgKHR5cGVvZiB0aGlzLm1hcHBlZEZpZWxkcyA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMubWFwcGVkRmllbGRzID0gW107XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYU1hcHBlZE9iamVjdHNDc3ZKb2JEYXRhJyB9LFxuXHRcdFx0XHRtZXRhZGF0YVByb2ZpbGVJZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRhZGRpdGlvbmFsRmllbGRzIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQ3N2QWRkaXRpb25hbEZpZWxkSW5mbywgc3ViVHlwZSA6ICdLYWx0dXJhQ3N2QWRkaXRpb25hbEZpZWxkSW5mbycgfSxcblx0XHRcdFx0bWFwcGVkRmllbGRzIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhS2V5VmFsdWUsIHN1YlR5cGUgOiAnS2FsdHVyYUtleVZhbHVlJyB9LFxuXHRcdFx0XHRvcHRpb25zIDogeyB0eXBlIDogJ28nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhRXhwb3J0VG9Dc3ZPcHRpb25zLCBzdWJUeXBlIDogJ0thbHR1cmFFeHBvcnRUb0Nzdk9wdGlvbnMnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhTWFwcGVkT2JqZWN0c0NzdkpvYkRhdGEnLEthbHR1cmFNYXBwZWRPYmplY3RzQ3N2Sm9iRGF0YSk7XG4iXX0=
