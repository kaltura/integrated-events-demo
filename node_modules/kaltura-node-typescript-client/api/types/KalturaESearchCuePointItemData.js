"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaESearchCuePointItemData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaString_1 = require("./KalturaString");
var KalturaESearchItemData_1 = require("./KalturaESearchItemData");
var KalturaESearchCuePointItemData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaESearchCuePointItemData, _super);
    function KalturaESearchCuePointItemData(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.tags === 'undefined')
            _this.tags = [];
        if (typeof _this.answers === 'undefined')
            _this.answers = [];
        return _this;
    }
    KalturaESearchCuePointItemData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaESearchCuePointItemData' },
            cuePointType: { type: 's' },
            id: { type: 's' },
            name: { type: 's' },
            text: { type: 's' },
            tags: { type: 'a', subTypeConstructor: KalturaString_1.KalturaString, subType: 'KalturaString' },
            startTime: { type: 's' },
            endTime: { type: 's' },
            subType: { type: 's' },
            question: { type: 's' },
            answers: { type: 'a', subTypeConstructor: KalturaString_1.KalturaString, subType: 'KalturaString' },
            hint: { type: 's' },
            explanation: { type: 's' },
            assetId: { type: 's' }
        });
        return result;
    };
    return KalturaESearchCuePointItemData;
}(KalturaESearchItemData_1.KalturaESearchItemData));
exports.KalturaESearchCuePointItemData = KalturaESearchCuePointItemData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaESearchCuePointItemData', KalturaESearchCuePointItemData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRVNlYXJjaEN1ZVBvaW50SXRlbURhdGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxpREFBZ0Q7QUFDaEQsbUVBQThGO0FBbUI5RjtJQUFvRCwwREFBc0I7SUFnQnRFLHdDQUFZLElBQTBDO1FBQXRELFlBRUksa0JBQU0sSUFBSSxDQUFDLFNBR2Q7UUFGRyxJQUFJLE9BQU8sS0FBSSxDQUFDLElBQUksS0FBSyxXQUFXO1lBQUUsS0FBSSxDQUFDLElBQUksR0FBRyxFQUFFLENBQUM7UUFDM0QsSUFBSSxPQUFPLEtBQUksQ0FBQyxPQUFPLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxPQUFPLEdBQUcsRUFBRSxDQUFDOztJQUN6RCxDQUFDO0lBRVMscURBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsZ0NBQWdDLEVBQUU7WUFDbkYsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM3QixFQUFFLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ25CLElBQUksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDckIsSUFBSSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNyQixJQUFJLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLDZCQUFhLEVBQUUsT0FBTyxFQUFHLGVBQWUsRUFBRTtZQUNwRixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzFCLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDeEIsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3pCLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsNkJBQWEsRUFBRSxPQUFPLEVBQUcsZUFBZSxFQUFFO1lBQ3ZGLElBQUksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDckIsV0FBVyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM1QixPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ2YsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHFDQUFDO0FBQUQsQ0EvQ0EsQUErQ0MsQ0EvQ21ELCtDQUFzQixHQStDekU7QUEvQ1ksd0VBQThCO0FBaUQzQywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsZ0NBQWdDLEVBQUMsOEJBQThCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYUVTZWFyY2hDdWVQb2ludEl0ZW1EYXRhLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYVN0cmluZyB9IGZyb20gJy4vS2FsdHVyYVN0cmluZyc7XG5pbXBvcnQgeyBLYWx0dXJhRVNlYXJjaEl0ZW1EYXRhLCBLYWx0dXJhRVNlYXJjaEl0ZW1EYXRhQXJncyB9IGZyb20gJy4vS2FsdHVyYUVTZWFyY2hJdGVtRGF0YSc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYUVTZWFyY2hDdWVQb2ludEl0ZW1EYXRhQXJncyAgZXh0ZW5kcyBLYWx0dXJhRVNlYXJjaEl0ZW1EYXRhQXJncyB7XG4gICAgY3VlUG9pbnRUeXBlPyA6IHN0cmluZztcblx0aWQ/IDogc3RyaW5nO1xuXHRuYW1lPyA6IHN0cmluZztcblx0dGV4dD8gOiBzdHJpbmc7XG5cdHRhZ3M/IDogS2FsdHVyYVN0cmluZ1tdO1xuXHRzdGFydFRpbWU/IDogc3RyaW5nO1xuXHRlbmRUaW1lPyA6IHN0cmluZztcblx0c3ViVHlwZT8gOiBzdHJpbmc7XG5cdHF1ZXN0aW9uPyA6IHN0cmluZztcblx0YW5zd2Vycz8gOiBLYWx0dXJhU3RyaW5nW107XG5cdGhpbnQ/IDogc3RyaW5nO1xuXHRleHBsYW5hdGlvbj8gOiBzdHJpbmc7XG5cdGFzc2V0SWQ/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhRVNlYXJjaEN1ZVBvaW50SXRlbURhdGEgZXh0ZW5kcyBLYWx0dXJhRVNlYXJjaEl0ZW1EYXRhIHtcblxuICAgIGN1ZVBvaW50VHlwZSA6IHN0cmluZztcblx0aWQgOiBzdHJpbmc7XG5cdG5hbWUgOiBzdHJpbmc7XG5cdHRleHQgOiBzdHJpbmc7XG5cdHRhZ3MgOiBLYWx0dXJhU3RyaW5nW107XG5cdHN0YXJ0VGltZSA6IHN0cmluZztcblx0ZW5kVGltZSA6IHN0cmluZztcblx0c3ViVHlwZSA6IHN0cmluZztcblx0cXVlc3Rpb24gOiBzdHJpbmc7XG5cdGFuc3dlcnMgOiBLYWx0dXJhU3RyaW5nW107XG5cdGhpbnQgOiBzdHJpbmc7XG5cdGV4cGxhbmF0aW9uIDogc3RyaW5nO1xuXHRhc3NldElkIDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhRVNlYXJjaEN1ZVBvaW50SXRlbURhdGFBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy50YWdzID09PSAndW5kZWZpbmVkJykgdGhpcy50YWdzID0gW107XG5cdFx0aWYgKHR5cGVvZiB0aGlzLmFuc3dlcnMgPT09ICd1bmRlZmluZWQnKSB0aGlzLmFuc3dlcnMgPSBbXTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhRVNlYXJjaEN1ZVBvaW50SXRlbURhdGEnIH0sXG5cdFx0XHRcdGN1ZVBvaW50VHlwZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRpZCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRuYW1lIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHRleHQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0dGFncyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVN0cmluZywgc3ViVHlwZSA6ICdLYWx0dXJhU3RyaW5nJyB9LFxuXHRcdFx0XHRzdGFydFRpbWUgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0ZW5kVGltZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzdWJUeXBlIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHF1ZXN0aW9uIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGFuc3dlcnMgOiB7IHR5cGUgOiAnYScsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFTdHJpbmcsIHN1YlR5cGUgOiAnS2FsdHVyYVN0cmluZycgfSxcblx0XHRcdFx0aGludCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRleHBsYW5hdGlvbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRhc3NldElkIDogeyB0eXBlIDogJ3MnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhRVNlYXJjaEN1ZVBvaW50SXRlbURhdGEnLEthbHR1cmFFU2VhcmNoQ3VlUG9pbnRJdGVtRGF0YSk7XG4iXX0=
