"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaPlayableEntryBaseFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaBaseEntryFilter_1 = require("./KalturaBaseEntryFilter");
var KalturaPlayableEntryBaseFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaPlayableEntryBaseFilter, _super);
    function KalturaPlayableEntryBaseFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaPlayableEntryBaseFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaPlayableEntryBaseFilter' },
            lastPlayedAtGreaterThanOrEqual: { type: 'd' },
            lastPlayedAtLessThanOrEqual: { type: 'd' },
            lastPlayedAtLessThanOrEqualOrNull: { type: 'd' },
            durationLessThan: { type: 'n' },
            durationGreaterThan: { type: 'n' },
            durationLessThanOrEqual: { type: 'n' },
            durationGreaterThanOrEqual: { type: 'n' },
            durationTypeMatchOr: { type: 's' }
        });
        return result;
    };
    return KalturaPlayableEntryBaseFilter;
}(KalturaBaseEntryFilter_1.KalturaBaseEntryFilter));
exports.KalturaPlayableEntryBaseFilter = KalturaPlayableEntryBaseFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaPlayableEntryBaseFilter', KalturaPlayableEntryBaseFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhUGxheWFibGVFbnRyeUJhc2VGaWx0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxtRUFBOEY7QUFjOUY7SUFBb0QsMERBQXNCO0lBV3RFLHdDQUFZLElBQTBDO2VBRWxELGtCQUFNLElBQUksQ0FBQztJQUNmLENBQUM7SUFFUyxxREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxnQ0FBZ0MsRUFBRTtZQUNuRiw4QkFBOEIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDL0MsMkJBQTJCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzVDLGlDQUFpQyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNsRCxnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDakMsbUJBQW1CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3BDLHVCQUF1QixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QywwQkFBMEIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDM0MsbUJBQW1CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQzNCLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxxQ0FBQztBQUFELENBbkNBLEFBbUNDLENBbkNtRCwrQ0FBc0IsR0FtQ3pFO0FBbkNZLHdFQUE4QjtBQXFDM0MsMkNBQW1CLENBQUMsWUFBWSxDQUFDLGdDQUFnQyxFQUFDLDhCQUE4QixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFQbGF5YWJsZUVudHJ5QmFzZUZpbHRlci5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFCYXNlRW50cnlGaWx0ZXIsIEthbHR1cmFCYXNlRW50cnlGaWx0ZXJBcmdzIH0gZnJvbSAnLi9LYWx0dXJhQmFzZUVudHJ5RmlsdGVyJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhUGxheWFibGVFbnRyeUJhc2VGaWx0ZXJBcmdzICBleHRlbmRzIEthbHR1cmFCYXNlRW50cnlGaWx0ZXJBcmdzIHtcbiAgICBsYXN0UGxheWVkQXRHcmVhdGVyVGhhbk9yRXF1YWw/IDogRGF0ZTtcblx0bGFzdFBsYXllZEF0TGVzc1RoYW5PckVxdWFsPyA6IERhdGU7XG5cdGxhc3RQbGF5ZWRBdExlc3NUaGFuT3JFcXVhbE9yTnVsbD8gOiBEYXRlO1xuXHRkdXJhdGlvbkxlc3NUaGFuPyA6IG51bWJlcjtcblx0ZHVyYXRpb25HcmVhdGVyVGhhbj8gOiBudW1iZXI7XG5cdGR1cmF0aW9uTGVzc1RoYW5PckVxdWFsPyA6IG51bWJlcjtcblx0ZHVyYXRpb25HcmVhdGVyVGhhbk9yRXF1YWw/IDogbnVtYmVyO1xuXHRkdXJhdGlvblR5cGVNYXRjaE9yPyA6IHN0cmluZztcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYVBsYXlhYmxlRW50cnlCYXNlRmlsdGVyIGV4dGVuZHMgS2FsdHVyYUJhc2VFbnRyeUZpbHRlciB7XG5cbiAgICBsYXN0UGxheWVkQXRHcmVhdGVyVGhhbk9yRXF1YWwgOiBEYXRlO1xuXHRsYXN0UGxheWVkQXRMZXNzVGhhbk9yRXF1YWwgOiBEYXRlO1xuXHRsYXN0UGxheWVkQXRMZXNzVGhhbk9yRXF1YWxPck51bGwgOiBEYXRlO1xuXHRkdXJhdGlvbkxlc3NUaGFuIDogbnVtYmVyO1xuXHRkdXJhdGlvbkdyZWF0ZXJUaGFuIDogbnVtYmVyO1xuXHRkdXJhdGlvbkxlc3NUaGFuT3JFcXVhbCA6IG51bWJlcjtcblx0ZHVyYXRpb25HcmVhdGVyVGhhbk9yRXF1YWwgOiBudW1iZXI7XG5cdGR1cmF0aW9uVHlwZU1hdGNoT3IgOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFQbGF5YWJsZUVudHJ5QmFzZUZpbHRlckFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhUGxheWFibGVFbnRyeUJhc2VGaWx0ZXInIH0sXG5cdFx0XHRcdGxhc3RQbGF5ZWRBdEdyZWF0ZXJUaGFuT3JFcXVhbCA6IHsgdHlwZSA6ICdkJyB9LFxuXHRcdFx0XHRsYXN0UGxheWVkQXRMZXNzVGhhbk9yRXF1YWwgOiB7IHR5cGUgOiAnZCcgfSxcblx0XHRcdFx0bGFzdFBsYXllZEF0TGVzc1RoYW5PckVxdWFsT3JOdWxsIDogeyB0eXBlIDogJ2QnIH0sXG5cdFx0XHRcdGR1cmF0aW9uTGVzc1RoYW4gOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0ZHVyYXRpb25HcmVhdGVyVGhhbiA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRkdXJhdGlvbkxlc3NUaGFuT3JFcXVhbCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRkdXJhdGlvbkdyZWF0ZXJUaGFuT3JFcXVhbCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRkdXJhdGlvblR5cGVNYXRjaE9yIDogeyB0eXBlIDogJ3MnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhUGxheWFibGVFbnRyeUJhc2VGaWx0ZXInLEthbHR1cmFQbGF5YWJsZUVudHJ5QmFzZUZpbHRlcik7XG4iXX0=
