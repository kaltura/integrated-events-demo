"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaRule = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaRuleAction_1 = require("./KalturaRuleAction");
var KalturaCondition_1 = require("./KalturaCondition");
var KalturaContextTypeHolder_1 = require("./KalturaContextTypeHolder");
var KalturaNullableBoolean_1 = require("./KalturaNullableBoolean");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaRule = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaRule, _super);
    function KalturaRule(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.actions === 'undefined')
            _this.actions = [];
        if (typeof _this.conditions === 'undefined')
            _this.conditions = [];
        if (typeof _this.contexts === 'undefined')
            _this.contexts = [];
        return _this;
    }
    KalturaRule.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaRule' },
            description: { type: 's' },
            ruleData: { type: 's' },
            message: { type: 's' },
            code: { type: 's' },
            actions: { type: 'a', subTypeConstructor: KalturaRuleAction_1.KalturaRuleAction, subType: 'KalturaRuleAction' },
            conditions: { type: 'a', subTypeConstructor: KalturaCondition_1.KalturaCondition, subType: 'KalturaCondition' },
            contexts: { type: 'a', subTypeConstructor: KalturaContextTypeHolder_1.KalturaContextTypeHolder, subType: 'KalturaContextTypeHolder' },
            stopProcessing: { type: 'b' },
            forceAdminValidation: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' }
        });
        return result;
    };
    return KalturaRule;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaRule = KalturaRule;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaRule', KalturaRule);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhUnVsZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELHlEQUF3RDtBQUN4RCx1REFBc0Q7QUFDdEQsdUVBQXNFO0FBQ3RFLG1FQUFrRTtBQUNsRSw4REFBa0Y7QUFlbEY7SUFBaUMsdUNBQWlCO0lBWTlDLHFCQUFZLElBQXVCO1FBQW5DLFlBRUksa0JBQU0sSUFBSSxDQUFDLFNBSWQ7UUFIRyxJQUFJLE9BQU8sS0FBSSxDQUFDLE9BQU8sS0FBSyxXQUFXO1lBQUUsS0FBSSxDQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDakUsSUFBSSxPQUFPLEtBQUksQ0FBQyxVQUFVLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxVQUFVLEdBQUcsRUFBRSxDQUFDO1FBQ2pFLElBQUksT0FBTyxLQUFJLENBQUMsUUFBUSxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsUUFBUSxHQUFHLEVBQUUsQ0FBQzs7SUFDM0QsQ0FBQztJQUVTLGtDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLGFBQWEsRUFBRTtZQUNoRSxXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzVCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixJQUFJLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3JCLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcscUNBQWlCLEVBQUUsT0FBTyxFQUFHLG1CQUFtQixFQUFFO1lBQy9GLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsbUNBQWdCLEVBQUUsT0FBTyxFQUFHLGtCQUFrQixFQUFFO1lBQ2hHLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsbURBQXdCLEVBQUUsT0FBTyxFQUFHLDBCQUEwQixFQUFFO1lBQzlHLGNBQWMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDL0Isb0JBQW9CLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLCtDQUFzQixFQUFFLE9BQU8sRUFBRyx3QkFBd0IsRUFBRTtTQUM5RyxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsa0JBQUM7QUFBRCxDQXhDQSxBQXdDQyxDQXhDZ0MsdUNBQWlCLEdBd0NqRDtBQXhDWSxrQ0FBVztBQTBDeEIsMkNBQW1CLENBQUMsWUFBWSxDQUFDLGFBQWEsRUFBQyxXQUFXLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYVJ1bGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhUnVsZUFjdGlvbiB9IGZyb20gJy4vS2FsdHVyYVJ1bGVBY3Rpb24nO1xuaW1wb3J0IHsgS2FsdHVyYUNvbmRpdGlvbiB9IGZyb20gJy4vS2FsdHVyYUNvbmRpdGlvbic7XG5pbXBvcnQgeyBLYWx0dXJhQ29udGV4dFR5cGVIb2xkZXIgfSBmcm9tICcuL0thbHR1cmFDb250ZXh0VHlwZUhvbGRlcic7XG5pbXBvcnQgeyBLYWx0dXJhTnVsbGFibGVCb29sZWFuIH0gZnJvbSAnLi9LYWx0dXJhTnVsbGFibGVCb29sZWFuJztcbmltcG9ydCB7IEthbHR1cmFPYmplY3RCYXNlLCBLYWx0dXJhT2JqZWN0QmFzZUFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhUnVsZUFyZ3MgIGV4dGVuZHMgS2FsdHVyYU9iamVjdEJhc2VBcmdzIHtcbiAgICBkZXNjcmlwdGlvbj8gOiBzdHJpbmc7XG5cdHJ1bGVEYXRhPyA6IHN0cmluZztcblx0bWVzc2FnZT8gOiBzdHJpbmc7XG5cdGNvZGU/IDogc3RyaW5nO1xuXHRhY3Rpb25zPyA6IEthbHR1cmFSdWxlQWN0aW9uW107XG5cdGNvbmRpdGlvbnM/IDogS2FsdHVyYUNvbmRpdGlvbltdO1xuXHRjb250ZXh0cz8gOiBLYWx0dXJhQ29udGV4dFR5cGVIb2xkZXJbXTtcblx0c3RvcFByb2Nlc3Npbmc/IDogYm9vbGVhbjtcblx0Zm9yY2VBZG1pblZhbGlkYXRpb24/IDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYVJ1bGUgZXh0ZW5kcyBLYWx0dXJhT2JqZWN0QmFzZSB7XG5cbiAgICBkZXNjcmlwdGlvbiA6IHN0cmluZztcblx0cnVsZURhdGEgOiBzdHJpbmc7XG5cdG1lc3NhZ2UgOiBzdHJpbmc7XG5cdGNvZGUgOiBzdHJpbmc7XG5cdGFjdGlvbnMgOiBLYWx0dXJhUnVsZUFjdGlvbltdO1xuXHRjb25kaXRpb25zIDogS2FsdHVyYUNvbmRpdGlvbltdO1xuXHRjb250ZXh0cyA6IEthbHR1cmFDb250ZXh0VHlwZUhvbGRlcltdO1xuXHRzdG9wUHJvY2Vzc2luZyA6IGJvb2xlYW47XG5cdGZvcmNlQWRtaW5WYWxpZGF0aW9uIDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYVJ1bGVBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5hY3Rpb25zID09PSAndW5kZWZpbmVkJykgdGhpcy5hY3Rpb25zID0gW107XG5cdFx0aWYgKHR5cGVvZiB0aGlzLmNvbmRpdGlvbnMgPT09ICd1bmRlZmluZWQnKSB0aGlzLmNvbmRpdGlvbnMgPSBbXTtcblx0XHRpZiAodHlwZW9mIHRoaXMuY29udGV4dHMgPT09ICd1bmRlZmluZWQnKSB0aGlzLmNvbnRleHRzID0gW107XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYVJ1bGUnIH0sXG5cdFx0XHRcdGRlc2NyaXB0aW9uIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHJ1bGVEYXRhIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdG1lc3NhZ2UgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Y29kZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRhY3Rpb25zIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhUnVsZUFjdGlvbiwgc3ViVHlwZSA6ICdLYWx0dXJhUnVsZUFjdGlvbicgfSxcblx0XHRcdFx0Y29uZGl0aW9ucyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUNvbmRpdGlvbiwgc3ViVHlwZSA6ICdLYWx0dXJhQ29uZGl0aW9uJyB9LFxuXHRcdFx0XHRjb250ZXh0cyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUNvbnRleHRUeXBlSG9sZGVyLCBzdWJUeXBlIDogJ0thbHR1cmFDb250ZXh0VHlwZUhvbGRlcicgfSxcblx0XHRcdFx0c3RvcFByb2Nlc3NpbmcgOiB7IHR5cGUgOiAnYicgfSxcblx0XHRcdFx0Zm9yY2VBZG1pblZhbGlkYXRpb24gOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuLCBzdWJUeXBlIDogJ0thbHR1cmFOdWxsYWJsZUJvb2xlYW4nIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhUnVsZScsS2FsdHVyYVJ1bGUpO1xuIl19
