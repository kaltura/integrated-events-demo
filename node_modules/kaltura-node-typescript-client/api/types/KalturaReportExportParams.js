"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaReportExportParams = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaReportExportItem_1 = require("./KalturaReportExportItem");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaReportExportParams = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaReportExportParams, _super);
    function KalturaReportExportParams(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.reportItems === 'undefined')
            _this.reportItems = [];
        return _this;
    }
    KalturaReportExportParams.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaReportExportParams' },
            recipientEmail: { type: 's' },
            timeZoneOffset: { type: 'n' },
            reportItems: { type: 'a', subTypeConstructor: KalturaReportExportItem_1.KalturaReportExportItem, subType: 'KalturaReportExportItem' },
            reportsItemsGroup: { type: 's' },
            baseUrl: { type: 's' }
        });
        return result;
    };
    return KalturaReportExportParams;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaReportExportParams = KalturaReportExportParams;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaReportExportParams', KalturaReportExportParams);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhUmVwb3J0RXhwb3J0UGFyYW1zLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QscUVBQW9FO0FBQ3BFLDhEQUFrRjtBQVdsRjtJQUErQyxxREFBaUI7SUFRNUQsbUNBQVksSUFBcUM7UUFBakQsWUFFSSxrQkFBTSxJQUFJLENBQUMsU0FFZDtRQURHLElBQUksT0FBTyxLQUFJLENBQUMsV0FBVyxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQzs7SUFDdkUsQ0FBQztJQUVTLGdEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDJCQUEyQixFQUFFO1lBQzlFLGNBQWMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDL0IsY0FBYyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMvQixXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLGlEQUF1QixFQUFFLE9BQU8sRUFBRyx5QkFBeUIsRUFBRTtZQUMvRyxpQkFBaUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDbEMsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtTQUNmLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxnQ0FBQztBQUFELENBOUJBLEFBOEJDLENBOUI4Qyx1Q0FBaUIsR0E4Qi9EO0FBOUJZLDhEQUF5QjtBQWdDdEMsMkNBQW1CLENBQUMsWUFBWSxDQUFDLDJCQUEyQixFQUFDLHlCQUF5QixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFSZXBvcnRFeHBvcnRQYXJhbXMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhUmVwb3J0RXhwb3J0SXRlbSB9IGZyb20gJy4vS2FsdHVyYVJlcG9ydEV4cG9ydEl0ZW0nO1xuaW1wb3J0IHsgS2FsdHVyYU9iamVjdEJhc2UsIEthbHR1cmFPYmplY3RCYXNlQXJncyB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFSZXBvcnRFeHBvcnRQYXJhbXNBcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlQXJncyB7XG4gICAgcmVjaXBpZW50RW1haWw/IDogc3RyaW5nO1xuXHR0aW1lWm9uZU9mZnNldD8gOiBudW1iZXI7XG5cdHJlcG9ydEl0ZW1zPyA6IEthbHR1cmFSZXBvcnRFeHBvcnRJdGVtW107XG5cdHJlcG9ydHNJdGVtc0dyb3VwPyA6IHN0cmluZztcblx0YmFzZVVybD8gOiBzdHJpbmc7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFSZXBvcnRFeHBvcnRQYXJhbXMgZXh0ZW5kcyBLYWx0dXJhT2JqZWN0QmFzZSB7XG5cbiAgICByZWNpcGllbnRFbWFpbCA6IHN0cmluZztcblx0dGltZVpvbmVPZmZzZXQgOiBudW1iZXI7XG5cdHJlcG9ydEl0ZW1zIDogS2FsdHVyYVJlcG9ydEV4cG9ydEl0ZW1bXTtcblx0cmVwb3J0c0l0ZW1zR3JvdXAgOiBzdHJpbmc7XG5cdGJhc2VVcmwgOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFSZXBvcnRFeHBvcnRQYXJhbXNBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5yZXBvcnRJdGVtcyA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMucmVwb3J0SXRlbXMgPSBbXTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhUmVwb3J0RXhwb3J0UGFyYW1zJyB9LFxuXHRcdFx0XHRyZWNpcGllbnRFbWFpbCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHR0aW1lWm9uZU9mZnNldCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRyZXBvcnRJdGVtcyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVJlcG9ydEV4cG9ydEl0ZW0sIHN1YlR5cGUgOiAnS2FsdHVyYVJlcG9ydEV4cG9ydEl0ZW0nIH0sXG5cdFx0XHRcdHJlcG9ydHNJdGVtc0dyb3VwIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGJhc2VVcmwgOiB7IHR5cGUgOiAncycgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFSZXBvcnRFeHBvcnRQYXJhbXMnLEthbHR1cmFSZXBvcnRFeHBvcnRQYXJhbXMpO1xuIl19
