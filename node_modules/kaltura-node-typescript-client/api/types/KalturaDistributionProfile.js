"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaDistributionProfile = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaDistributionProviderType_1 = require("./KalturaDistributionProviderType");
var KalturaDistributionProfileStatus_1 = require("./KalturaDistributionProfileStatus");
var KalturaDistributionProfileActionStatus_1 = require("./KalturaDistributionProfileActionStatus");
var KalturaDistributionThumbDimensions_1 = require("./KalturaDistributionThumbDimensions");
var KalturaAssetDistributionRule_1 = require("./KalturaAssetDistributionRule");
var KalturaDistributeTrigger_1 = require("./KalturaDistributeTrigger");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaDistributionProfile = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaDistributionProfile, _super);
    function KalturaDistributionProfile(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.optionalThumbDimensions === 'undefined')
            _this.optionalThumbDimensions = [];
        if (typeof _this.requiredThumbDimensions === 'undefined')
            _this.requiredThumbDimensions = [];
        if (typeof _this.optionalAssetDistributionRules === 'undefined')
            _this.optionalAssetDistributionRules = [];
        if (typeof _this.requiredAssetDistributionRules === 'undefined')
            _this.requiredAssetDistributionRules = [];
        return _this;
    }
    KalturaDistributionProfile.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaDistributionProfile' },
            id: { type: 'n', readOnly: true },
            createdAt: { type: 'd', readOnly: true },
            updatedAt: { type: 'd', readOnly: true },
            partnerId: { type: 'n', readOnly: true },
            providerType: { type: 'es', subTypeConstructor: KalturaDistributionProviderType_1.KalturaDistributionProviderType, subType: 'KalturaDistributionProviderType' },
            name: { type: 's' },
            status: { type: 'en', subTypeConstructor: KalturaDistributionProfileStatus_1.KalturaDistributionProfileStatus, subType: 'KalturaDistributionProfileStatus' },
            submitEnabled: { type: 'en', subTypeConstructor: KalturaDistributionProfileActionStatus_1.KalturaDistributionProfileActionStatus, subType: 'KalturaDistributionProfileActionStatus' },
            updateEnabled: { type: 'en', subTypeConstructor: KalturaDistributionProfileActionStatus_1.KalturaDistributionProfileActionStatus, subType: 'KalturaDistributionProfileActionStatus' },
            deleteEnabled: { type: 'en', subTypeConstructor: KalturaDistributionProfileActionStatus_1.KalturaDistributionProfileActionStatus, subType: 'KalturaDistributionProfileActionStatus' },
            reportEnabled: { type: 'en', subTypeConstructor: KalturaDistributionProfileActionStatus_1.KalturaDistributionProfileActionStatus, subType: 'KalturaDistributionProfileActionStatus' },
            autoCreateFlavors: { type: 's' },
            autoCreateThumb: { type: 's' },
            optionalFlavorParamsIds: { type: 's' },
            requiredFlavorParamsIds: { type: 's' },
            optionalThumbDimensions: { type: 'a', subTypeConstructor: KalturaDistributionThumbDimensions_1.KalturaDistributionThumbDimensions, subType: 'KalturaDistributionThumbDimensions' },
            requiredThumbDimensions: { type: 'a', subTypeConstructor: KalturaDistributionThumbDimensions_1.KalturaDistributionThumbDimensions, subType: 'KalturaDistributionThumbDimensions' },
            optionalAssetDistributionRules: { type: 'a', subTypeConstructor: KalturaAssetDistributionRule_1.KalturaAssetDistributionRule, subType: 'KalturaAssetDistributionRule' },
            requiredAssetDistributionRules: { type: 'a', subTypeConstructor: KalturaAssetDistributionRule_1.KalturaAssetDistributionRule, subType: 'KalturaAssetDistributionRule' },
            sunriseDefaultOffset: { type: 'n' },
            sunsetDefaultOffset: { type: 'n' },
            recommendedStorageProfileForDownload: { type: 'n' },
            recommendedDcForDownload: { type: 'n' },
            recommendedDcForExecute: { type: 'n' },
            distributeTrigger: { type: 'en', subTypeConstructor: KalturaDistributeTrigger_1.KalturaDistributeTrigger, subType: 'KalturaDistributeTrigger' },
            supportImageEntry: { type: 'b', readOnly: true }
        });
        return result;
    };
    return KalturaDistributionProfile;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaDistributionProfile = KalturaDistributionProfile;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaDistributionProfile', KalturaDistributionProfile);

//# sourceMappingURL=data:application/json;charset=utf8;base64,
