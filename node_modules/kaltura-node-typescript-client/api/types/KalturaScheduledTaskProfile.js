"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaScheduledTaskProfile = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaScheduledTaskProfileStatus_1 = require("./KalturaScheduledTaskProfileStatus");
var KalturaObjectFilterEngineType_1 = require("./KalturaObjectFilterEngineType");
var KalturaFilter_1 = require("./KalturaFilter");
var KalturaObjectTask_1 = require("./KalturaObjectTask");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaScheduledTaskProfile = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaScheduledTaskProfile, _super);
    function KalturaScheduledTaskProfile(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.objectTasks === 'undefined')
            _this.objectTasks = [];
        return _this;
    }
    KalturaScheduledTaskProfile.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaScheduledTaskProfile' },
            id: { type: 'n', readOnly: true },
            partnerId: { type: 'n', readOnly: true },
            name: { type: 's' },
            systemName: { type: 's' },
            description: { type: 's' },
            status: { type: 'en', subTypeConstructor: KalturaScheduledTaskProfileStatus_1.KalturaScheduledTaskProfileStatus, subType: 'KalturaScheduledTaskProfileStatus' },
            objectFilterEngineType: { type: 'es', subTypeConstructor: KalturaObjectFilterEngineType_1.KalturaObjectFilterEngineType, subType: 'KalturaObjectFilterEngineType' },
            objectFilter: { type: 'o', subTypeConstructor: KalturaFilter_1.KalturaFilter, subType: 'KalturaFilter' },
            objectTasks: { type: 'a', subTypeConstructor: KalturaObjectTask_1.KalturaObjectTask, subType: 'KalturaObjectTask' },
            createdAt: { type: 'd', readOnly: true },
            updatedAt: { type: 'd', readOnly: true },
            lastExecutionStartedAt: { type: 'd' },
            maxTotalCountAllowed: { type: 'n' }
        });
        return result;
    };
    return KalturaScheduledTaskProfile;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaScheduledTaskProfile = KalturaScheduledTaskProfile;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaScheduledTaskProfile', KalturaScheduledTaskProfile);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhU2NoZWR1bGVkVGFza1Byb2ZpbGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCx5RkFBd0Y7QUFDeEYsaUZBQWdGO0FBQ2hGLGlEQUFnRDtBQUNoRCx5REFBd0Q7QUFDeEQsOERBQWtGO0FBZWxGO0lBQWlELHVEQUFpQjtJQWdCOUQscUNBQVksSUFBdUM7UUFBbkQsWUFFSSxrQkFBTSxJQUFJLENBQUMsU0FFZDtRQURHLElBQUksT0FBTyxLQUFJLENBQUMsV0FBVyxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQzs7SUFDdkUsQ0FBQztJQUVTLGtEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDZCQUE2QixFQUFFO1lBQ2hGLEVBQUUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUNwQyxTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDM0MsSUFBSSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNyQixVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzNCLFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDNUIsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyxxRUFBaUMsRUFBRSxPQUFPLEVBQUcsbUNBQW1DLEVBQUU7WUFDL0gsc0JBQXNCLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLDZEQUE2QixFQUFFLE9BQU8sRUFBRywrQkFBK0IsRUFBRTtZQUN2SSxZQUFZLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLDZCQUFhLEVBQUUsT0FBTyxFQUFHLGVBQWUsRUFBRTtZQUM1RixXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLHFDQUFpQixFQUFFLE9BQU8sRUFBRyxtQkFBbUIsRUFBRTtZQUNuRyxTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDM0MsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQzNDLHNCQUFzQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN2QyxvQkFBb0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDNUIsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLGtDQUFDO0FBQUQsQ0E5Q0EsQUE4Q0MsQ0E5Q2dELHVDQUFpQixHQThDakU7QUE5Q1ksa0VBQTJCO0FBZ0R4QywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsNkJBQTZCLEVBQUMsMkJBQTJCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYVNjaGVkdWxlZFRhc2tQcm9maWxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYVNjaGVkdWxlZFRhc2tQcm9maWxlU3RhdHVzIH0gZnJvbSAnLi9LYWx0dXJhU2NoZWR1bGVkVGFza1Byb2ZpbGVTdGF0dXMnO1xuaW1wb3J0IHsgS2FsdHVyYU9iamVjdEZpbHRlckVuZ2luZVR5cGUgfSBmcm9tICcuL0thbHR1cmFPYmplY3RGaWx0ZXJFbmdpbmVUeXBlJztcbmltcG9ydCB7IEthbHR1cmFGaWx0ZXIgfSBmcm9tICcuL0thbHR1cmFGaWx0ZXInO1xuaW1wb3J0IHsgS2FsdHVyYU9iamVjdFRhc2sgfSBmcm9tICcuL0thbHR1cmFPYmplY3RUYXNrJztcbmltcG9ydCB7IEthbHR1cmFPYmplY3RCYXNlLCBLYWx0dXJhT2JqZWN0QmFzZUFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhU2NoZWR1bGVkVGFza1Byb2ZpbGVBcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlQXJncyB7XG4gICAgbmFtZT8gOiBzdHJpbmc7XG5cdHN5c3RlbU5hbWU/IDogc3RyaW5nO1xuXHRkZXNjcmlwdGlvbj8gOiBzdHJpbmc7XG5cdHN0YXR1cz8gOiBLYWx0dXJhU2NoZWR1bGVkVGFza1Byb2ZpbGVTdGF0dXM7XG5cdG9iamVjdEZpbHRlckVuZ2luZVR5cGU/IDogS2FsdHVyYU9iamVjdEZpbHRlckVuZ2luZVR5cGU7XG5cdG9iamVjdEZpbHRlcj8gOiBLYWx0dXJhRmlsdGVyO1xuXHRvYmplY3RUYXNrcz8gOiBLYWx0dXJhT2JqZWN0VGFza1tdO1xuXHRsYXN0RXhlY3V0aW9uU3RhcnRlZEF0PyA6IERhdGU7XG5cdG1heFRvdGFsQ291bnRBbGxvd2VkPyA6IG51bWJlcjtcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYVNjaGVkdWxlZFRhc2tQcm9maWxlIGV4dGVuZHMgS2FsdHVyYU9iamVjdEJhc2Uge1xuXG4gICAgcmVhZG9ubHkgaWQgOiBudW1iZXI7XG5cdHJlYWRvbmx5IHBhcnRuZXJJZCA6IG51bWJlcjtcblx0bmFtZSA6IHN0cmluZztcblx0c3lzdGVtTmFtZSA6IHN0cmluZztcblx0ZGVzY3JpcHRpb24gOiBzdHJpbmc7XG5cdHN0YXR1cyA6IEthbHR1cmFTY2hlZHVsZWRUYXNrUHJvZmlsZVN0YXR1cztcblx0b2JqZWN0RmlsdGVyRW5naW5lVHlwZSA6IEthbHR1cmFPYmplY3RGaWx0ZXJFbmdpbmVUeXBlO1xuXHRvYmplY3RGaWx0ZXIgOiBLYWx0dXJhRmlsdGVyO1xuXHRvYmplY3RUYXNrcyA6IEthbHR1cmFPYmplY3RUYXNrW107XG5cdHJlYWRvbmx5IGNyZWF0ZWRBdCA6IERhdGU7XG5cdHJlYWRvbmx5IHVwZGF0ZWRBdCA6IERhdGU7XG5cdGxhc3RFeGVjdXRpb25TdGFydGVkQXQgOiBEYXRlO1xuXHRtYXhUb3RhbENvdW50QWxsb3dlZCA6IG51bWJlcjtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYVNjaGVkdWxlZFRhc2tQcm9maWxlQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMub2JqZWN0VGFza3MgPT09ICd1bmRlZmluZWQnKSB0aGlzLm9iamVjdFRhc2tzID0gW107XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYVNjaGVkdWxlZFRhc2tQcm9maWxlJyB9LFxuXHRcdFx0XHRpZCA6IHsgdHlwZSA6ICduJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdHBhcnRuZXJJZCA6IHsgdHlwZSA6ICduJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdG5hbWUgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c3lzdGVtTmFtZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRkZXNjcmlwdGlvbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzdGF0dXMgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhU2NoZWR1bGVkVGFza1Byb2ZpbGVTdGF0dXMsIHN1YlR5cGUgOiAnS2FsdHVyYVNjaGVkdWxlZFRhc2tQcm9maWxlU3RhdHVzJyB9LFxuXHRcdFx0XHRvYmplY3RGaWx0ZXJFbmdpbmVUeXBlIDogeyB0eXBlIDogJ2VzJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYU9iamVjdEZpbHRlckVuZ2luZVR5cGUsIHN1YlR5cGUgOiAnS2FsdHVyYU9iamVjdEZpbHRlckVuZ2luZVR5cGUnIH0sXG5cdFx0XHRcdG9iamVjdEZpbHRlciA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUZpbHRlciwgc3ViVHlwZSA6ICdLYWx0dXJhRmlsdGVyJyB9LFxuXHRcdFx0XHRvYmplY3RUYXNrcyA6IHsgdHlwZSA6ICdhJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYU9iamVjdFRhc2ssIHN1YlR5cGUgOiAnS2FsdHVyYU9iamVjdFRhc2snIH0sXG5cdFx0XHRcdGNyZWF0ZWRBdCA6IHsgdHlwZSA6ICdkJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdHVwZGF0ZWRBdCA6IHsgdHlwZSA6ICdkJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdGxhc3RFeGVjdXRpb25TdGFydGVkQXQgOiB7IHR5cGUgOiAnZCcgfSxcblx0XHRcdFx0bWF4VG90YWxDb3VudEFsbG93ZWQgOiB7IHR5cGUgOiAnbicgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFTY2hlZHVsZWRUYXNrUHJvZmlsZScsS2FsdHVyYVNjaGVkdWxlZFRhc2tQcm9maWxlKTtcbiJdfQ==
