"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VolatileInteractivityAddAction = void 0;
var tslib_1 = require("tslib");
var KalturaVolatileInteractivity_1 = require("./KalturaVolatileInteractivity");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'volatileInteractivity' action 'add'.
 *
 * Usage: add a volatile interactivity object
 *
 * Server response type:         KalturaVolatileInteractivity
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var VolatileInteractivityAddAction = /** @class */ (function (_super) {
    tslib_1.__extends(VolatileInteractivityAddAction, _super);
    function VolatileInteractivityAddAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaVolatileInteractivity', responseConstructor: KalturaVolatileInteractivity_1.KalturaVolatileInteractivity }) || this;
    }
    VolatileInteractivityAddAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'interactivity_volatileinteractivity' },
            action: { type: 'c', default: 'add' },
            entryId: { type: 's' },
            kalturaVolatileInteractivity: { type: 'o', subTypeConstructor: KalturaVolatileInteractivity_1.KalturaVolatileInteractivity, subType: 'KalturaVolatileInteractivity' }
        });
        return result;
    };
    return VolatileInteractivityAddAction;
}(kaltura_request_1.KalturaRequest));
exports.VolatileInteractivityAddAction = VolatileInteractivityAddAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9Wb2xhdGlsZUludGVyYWN0aXZpdHlBZGRBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLCtFQUE4RTtBQUU5RSxzREFBd0U7QUFPeEU7Ozs7Ozs7OztHQVNHO0FBQ0g7SUFBb0QsMERBQTRDO0lBSzVGLHdDQUFZLElBQXlDO2VBRWpELGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLDhCQUE4QixFQUFFLG1CQUFtQixFQUFHLDJEQUE0QixFQUFHLENBQUM7SUFDN0ksQ0FBQztJQUVTLHFEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHFDQUFxQyxFQUFFO1lBQ3JGLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLEtBQUssRUFBRTtZQUN4QyxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hCLDRCQUE0QixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRywyREFBNEIsRUFBRSxPQUFPLEVBQUcsOEJBQThCLEVBQUU7U0FDakksQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHFDQUFDO0FBQUQsQ0F4QkEsQUF3QkMsQ0F4Qm1ELGdDQUFjLEdBd0JqRTtBQXhCWSx3RUFBOEIiLCJmaWxlIjoiYXBpL3R5cGVzL1ZvbGF0aWxlSW50ZXJhY3Rpdml0eUFkZEFjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVm9sYXRpbGVJbnRlcmFjdGl2aXR5IH0gZnJvbSAnLi9LYWx0dXJhVm9sYXRpbGVJbnRlcmFjdGl2aXR5JztcblxuaW1wb3J0IHsgS2FsdHVyYVJlcXVlc3QsIEthbHR1cmFSZXF1ZXN0QXJncyB9IGZyb20gJy4uL2thbHR1cmEtcmVxdWVzdCc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgVm9sYXRpbGVJbnRlcmFjdGl2aXR5QWRkQWN0aW9uQXJncyAgZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdEFyZ3Mge1xuICAgIGVudHJ5SWQgOiBzdHJpbmc7XG5cdGthbHR1cmFWb2xhdGlsZUludGVyYWN0aXZpdHkgOiBLYWx0dXJhVm9sYXRpbGVJbnRlcmFjdGl2aXR5O1xufVxuXG4vKipcbiAqIEJ1aWxkIHJlcXVlc3QgcGF5bG9hZCBmb3Igc2VydmljZSAndm9sYXRpbGVJbnRlcmFjdGl2aXR5JyBhY3Rpb24gJ2FkZCcuXG4gKlxuICogVXNhZ2U6IGFkZCBhIHZvbGF0aWxlIGludGVyYWN0aXZpdHkgb2JqZWN0XG4gKlxuICogU2VydmVyIHJlc3BvbnNlIHR5cGU6ICAgICAgICAgS2FsdHVyYVZvbGF0aWxlSW50ZXJhY3Rpdml0eVxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgVm9sYXRpbGVJbnRlcmFjdGl2aXR5QWRkQWN0aW9uIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3Q8S2FsdHVyYVZvbGF0aWxlSW50ZXJhY3Rpdml0eT4ge1xuXG4gICAgZW50cnlJZCA6IHN0cmluZztcblx0a2FsdHVyYVZvbGF0aWxlSW50ZXJhY3Rpdml0eSA6IEthbHR1cmFWb2xhdGlsZUludGVyYWN0aXZpdHk7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhIDogVm9sYXRpbGVJbnRlcmFjdGl2aXR5QWRkQWN0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEsIHtyZXNwb25zZVR5cGUgOiAnbycsIHJlc3BvbnNlU3ViVHlwZSA6ICdLYWx0dXJhVm9sYXRpbGVJbnRlcmFjdGl2aXR5JywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IEthbHR1cmFWb2xhdGlsZUludGVyYWN0aXZpdHkgIH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ2ludGVyYWN0aXZpdHlfdm9sYXRpbGVpbnRlcmFjdGl2aXR5JyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnYWRkJyB9LFxuXHRcdFx0XHRlbnRyeUlkIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGthbHR1cmFWb2xhdGlsZUludGVyYWN0aXZpdHkgOiB7IHR5cGUgOiAnbycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFWb2xhdGlsZUludGVyYWN0aXZpdHksIHN1YlR5cGUgOiAnS2FsdHVyYVZvbGF0aWxlSW50ZXJhY3Rpdml0eScgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuIl19
