"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaCaptionParams = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaLanguage_1 = require("./KalturaLanguage");
var KalturaNullableBoolean_1 = require("./KalturaNullableBoolean");
var KalturaCaptionType_1 = require("./KalturaCaptionType");
var KalturaAssetParams_1 = require("./KalturaAssetParams");
var KalturaCaptionParams = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaCaptionParams, _super);
    function KalturaCaptionParams(data) {
        return _super.call(this, data) || this;
    }
    KalturaCaptionParams.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaCaptionParams' },
            language: { type: 'es', subTypeConstructor: KalturaLanguage_1.KalturaLanguage, subType: 'KalturaLanguage' },
            isDefault: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            label: { type: 's' },
            format: { type: 'es', subTypeConstructor: KalturaCaptionType_1.KalturaCaptionType, subType: 'KalturaCaptionType' },
            sourceParamsId: { type: 'n' }
        });
        return result;
    };
    return KalturaCaptionParams;
}(KalturaAssetParams_1.KalturaAssetParams));
exports.KalturaCaptionParams = KalturaCaptionParams;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaCaptionParams', KalturaCaptionParams);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQ2FwdGlvblBhcmFtcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELHFEQUFvRDtBQUNwRCxtRUFBa0U7QUFDbEUsMkRBQTBEO0FBQzFELDJEQUFrRjtBQVdsRjtJQUEwQyxnREFBa0I7SUFReEQsOEJBQVksSUFBZ0M7ZUFFeEMsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLDJDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHNCQUFzQixFQUFFO1lBQ3pFLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsaUNBQWUsRUFBRSxPQUFPLEVBQUcsaUJBQWlCLEVBQUU7WUFDN0YsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywrQ0FBc0IsRUFBRSxPQUFPLEVBQUcsd0JBQXdCLEVBQUU7WUFDNUcsS0FBSyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN0QixNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLHVDQUFrQixFQUFFLE9BQU8sRUFBRyxvQkFBb0IsRUFBRTtZQUNqRyxjQUFjLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ3RCLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCwyQkFBQztBQUFELENBN0JBLEFBNkJDLENBN0J5Qyx1Q0FBa0IsR0E2QjNEO0FBN0JZLG9EQUFvQjtBQStCakMsMkNBQW1CLENBQUMsWUFBWSxDQUFDLHNCQUFzQixFQUFDLG9CQUFvQixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFDYXB0aW9uUGFyYW1zLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYUxhbmd1YWdlIH0gZnJvbSAnLi9LYWx0dXJhTGFuZ3VhZ2UnO1xuaW1wb3J0IHsgS2FsdHVyYU51bGxhYmxlQm9vbGVhbiB9IGZyb20gJy4vS2FsdHVyYU51bGxhYmxlQm9vbGVhbic7XG5pbXBvcnQgeyBLYWx0dXJhQ2FwdGlvblR5cGUgfSBmcm9tICcuL0thbHR1cmFDYXB0aW9uVHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhQXNzZXRQYXJhbXMsIEthbHR1cmFBc3NldFBhcmFtc0FyZ3MgfSBmcm9tICcuL0thbHR1cmFBc3NldFBhcmFtcyc7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYUNhcHRpb25QYXJhbXNBcmdzICBleHRlbmRzIEthbHR1cmFBc3NldFBhcmFtc0FyZ3Mge1xuICAgIGxhbmd1YWdlPyA6IEthbHR1cmFMYW5ndWFnZTtcblx0aXNEZWZhdWx0PyA6IEthbHR1cmFOdWxsYWJsZUJvb2xlYW47XG5cdGxhYmVsPyA6IHN0cmluZztcblx0Zm9ybWF0PyA6IEthbHR1cmFDYXB0aW9uVHlwZTtcblx0c291cmNlUGFyYW1zSWQ/IDogbnVtYmVyO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhQ2FwdGlvblBhcmFtcyBleHRlbmRzIEthbHR1cmFBc3NldFBhcmFtcyB7XG5cbiAgICBsYW5ndWFnZSA6IEthbHR1cmFMYW5ndWFnZTtcblx0aXNEZWZhdWx0IDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbjtcblx0bGFiZWwgOiBzdHJpbmc7XG5cdGZvcm1hdCA6IEthbHR1cmFDYXB0aW9uVHlwZTtcblx0c291cmNlUGFyYW1zSWQgOiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFDYXB0aW9uUGFyYW1zQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFDYXB0aW9uUGFyYW1zJyB9LFxuXHRcdFx0XHRsYW5ndWFnZSA6IHsgdHlwZSA6ICdlcycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFMYW5ndWFnZSwgc3ViVHlwZSA6ICdLYWx0dXJhTGFuZ3VhZ2UnIH0sXG5cdFx0XHRcdGlzRGVmYXVsdCA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFOdWxsYWJsZUJvb2xlYW4sIHN1YlR5cGUgOiAnS2FsdHVyYU51bGxhYmxlQm9vbGVhbicgfSxcblx0XHRcdFx0bGFiZWwgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Zm9ybWF0IDogeyB0eXBlIDogJ2VzJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUNhcHRpb25UeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFDYXB0aW9uVHlwZScgfSxcblx0XHRcdFx0c291cmNlUGFyYW1zSWQgOiB7IHR5cGUgOiAnbicgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFDYXB0aW9uUGFyYW1zJyxLYWx0dXJhQ2FwdGlvblBhcmFtcyk7XG4iXX0=
