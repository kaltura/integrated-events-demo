"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LiveChannelAppendRecordingAction = void 0;
var tslib_1 = require("tslib");
var KalturaLiveEntry_1 = require("./KalturaLiveEntry");
var KalturaEntryServerNodeType_1 = require("./KalturaEntryServerNodeType");
var KalturaDataCenterContentResource_1 = require("./KalturaDataCenterContentResource");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'liveChannel' action 'appendRecording'.
 *
 * Usage: Append recorded video to live entry
 *
 * Server response type:         KalturaLiveEntry
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var LiveChannelAppendRecordingAction = /** @class */ (function (_super) {
    tslib_1.__extends(LiveChannelAppendRecordingAction, _super);
    function LiveChannelAppendRecordingAction(data) {
        var _this = _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaLiveEntry', responseConstructor: KalturaLiveEntry_1.KalturaLiveEntry }) || this;
        if (typeof _this.isLastChunk === 'undefined')
            _this.isLastChunk = false;
        return _this;
    }
    LiveChannelAppendRecordingAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'livechannel' },
            action: { type: 'c', default: 'appendRecording' },
            entryId: { type: 's' },
            assetId: { type: 's' },
            mediaServerIndex: { type: 'es', subTypeConstructor: KalturaEntryServerNodeType_1.KalturaEntryServerNodeType, subType: 'KalturaEntryServerNodeType' },
            resource: { type: 'o', subTypeConstructor: KalturaDataCenterContentResource_1.KalturaDataCenterContentResource, subType: 'KalturaDataCenterContentResource' },
            duration: { type: 'n' },
            isLastChunk: { type: 'b' }
        });
        return result;
    };
    return LiveChannelAppendRecordingAction;
}(kaltura_request_1.KalturaRequest));
exports.LiveChannelAppendRecordingAction = LiveChannelAppendRecordingAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9MaXZlQ2hhbm5lbEFwcGVuZFJlY29yZGluZ0FjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsdURBQXNEO0FBRXRELDJFQUEwRTtBQUMxRSx1RkFBc0Y7QUFDdEYsc0RBQXdFO0FBV3hFOzs7Ozs7Ozs7R0FTRztBQUNIO0lBQXNELDREQUFnQztJQVNsRiwwQ0FBWSxJQUEyQztRQUF2RCxZQUVJLGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLGtCQUFrQixFQUFFLG1CQUFtQixFQUFHLG1DQUFnQixFQUFHLENBQUMsU0FFcEg7UUFERyxJQUFJLE9BQU8sS0FBSSxDQUFDLFdBQVcsS0FBSyxXQUFXO1lBQUUsS0FBSSxDQUFDLFdBQVcsR0FBRyxLQUFLLENBQUM7O0lBQzFFLENBQUM7SUFFUyx1REFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxhQUFhLEVBQUU7WUFDN0QsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsaUJBQWlCLEVBQUU7WUFDcEQsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hCLGdCQUFnQixFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyx1REFBMEIsRUFBRSxPQUFPLEVBQUcsNEJBQTRCLEVBQUU7WUFDM0gsUUFBUSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxtRUFBZ0MsRUFBRSxPQUFPLEVBQUcsa0NBQWtDLEVBQUU7WUFDOUgsUUFBUSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN6QixXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ25CLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCx1Q0FBQztBQUFELENBakNBLEFBaUNDLENBakNxRCxnQ0FBYyxHQWlDbkU7QUFqQ1ksNEVBQWdDIiwiZmlsZSI6ImFwaS90eXBlcy9MaXZlQ2hhbm5lbEFwcGVuZFJlY29yZGluZ0FjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhTGl2ZUVudHJ5IH0gZnJvbSAnLi9LYWx0dXJhTGl2ZUVudHJ5JztcblxuaW1wb3J0IHsgS2FsdHVyYUVudHJ5U2VydmVyTm9kZVR5cGUgfSBmcm9tICcuL0thbHR1cmFFbnRyeVNlcnZlck5vZGVUeXBlJztcbmltcG9ydCB7IEthbHR1cmFEYXRhQ2VudGVyQ29udGVudFJlc291cmNlIH0gZnJvbSAnLi9LYWx0dXJhRGF0YUNlbnRlckNvbnRlbnRSZXNvdXJjZSc7XG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBMaXZlQ2hhbm5lbEFwcGVuZFJlY29yZGluZ0FjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBlbnRyeUlkIDogc3RyaW5nO1xuXHRhc3NldElkIDogc3RyaW5nO1xuXHRtZWRpYVNlcnZlckluZGV4IDogS2FsdHVyYUVudHJ5U2VydmVyTm9kZVR5cGU7XG5cdHJlc291cmNlIDogS2FsdHVyYURhdGFDZW50ZXJDb250ZW50UmVzb3VyY2U7XG5cdGR1cmF0aW9uIDogbnVtYmVyO1xuXHRpc0xhc3RDaHVuaz8gOiBib29sZWFuO1xufVxuXG4vKipcbiAqIEJ1aWxkIHJlcXVlc3QgcGF5bG9hZCBmb3Igc2VydmljZSAnbGl2ZUNoYW5uZWwnIGFjdGlvbiAnYXBwZW5kUmVjb3JkaW5nJy5cbiAqXG4gKiBVc2FnZTogQXBwZW5kIHJlY29yZGVkIHZpZGVvIHRvIGxpdmUgZW50cnlcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhTGl2ZUVudHJ5XG4gKiBTZXJ2ZXIgZmFpbHVyZSByZXNwb25zZSB0eXBlOiBLYWx0dXJhQVBJRXhjZXB0aW9uXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIEthbHR1cmFSZXF1ZXN0XG4gKi9cbmV4cG9ydCBjbGFzcyBMaXZlQ2hhbm5lbEFwcGVuZFJlY29yZGluZ0FjdGlvbiBleHRlbmRzIEthbHR1cmFSZXF1ZXN0PEthbHR1cmFMaXZlRW50cnk+IHtcblxuICAgIGVudHJ5SWQgOiBzdHJpbmc7XG5cdGFzc2V0SWQgOiBzdHJpbmc7XG5cdG1lZGlhU2VydmVySW5kZXggOiBLYWx0dXJhRW50cnlTZXJ2ZXJOb2RlVHlwZTtcblx0cmVzb3VyY2UgOiBLYWx0dXJhRGF0YUNlbnRlckNvbnRlbnRSZXNvdXJjZTtcblx0ZHVyYXRpb24gOiBudW1iZXI7XG5cdGlzTGFzdENodW5rIDogYm9vbGVhbjtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBMaXZlQ2hhbm5lbEFwcGVuZFJlY29yZGluZ0FjdGlvbkFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhLCB7cmVzcG9uc2VUeXBlIDogJ28nLCByZXNwb25zZVN1YlR5cGUgOiAnS2FsdHVyYUxpdmVFbnRyeScsIHJlc3BvbnNlQ29uc3RydWN0b3IgOiBLYWx0dXJhTGl2ZUVudHJ5ICB9KTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmlzTGFzdENodW5rID09PSAndW5kZWZpbmVkJykgdGhpcy5pc0xhc3RDaHVuayA9IGZhbHNlO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ2xpdmVjaGFubmVsJyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnYXBwZW5kUmVjb3JkaW5nJyB9LFxuXHRcdFx0XHRlbnRyeUlkIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGFzc2V0SWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0bWVkaWFTZXJ2ZXJJbmRleCA6IHsgdHlwZSA6ICdlcycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFFbnRyeVNlcnZlck5vZGVUeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFFbnRyeVNlcnZlck5vZGVUeXBlJyB9LFxuXHRcdFx0XHRyZXNvdXJjZSA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYURhdGFDZW50ZXJDb250ZW50UmVzb3VyY2UsIHN1YlR5cGUgOiAnS2FsdHVyYURhdGFDZW50ZXJDb250ZW50UmVzb3VyY2UnIH0sXG5cdFx0XHRcdGR1cmF0aW9uIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGlzTGFzdENodW5rIDogeyB0eXBlIDogJ2InIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
