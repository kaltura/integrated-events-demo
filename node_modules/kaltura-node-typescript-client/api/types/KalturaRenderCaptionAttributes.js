"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaRenderCaptionAttributes = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaBorderStyle_1 = require("./KalturaBorderStyle");
var KalturaCaptionsAlignment_1 = require("./KalturaCaptionsAlignment");
var KalturaCaptionAttributes_1 = require("./KalturaCaptionAttributes");
var KalturaRenderCaptionAttributes = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaRenderCaptionAttributes, _super);
    function KalturaRenderCaptionAttributes(data) {
        return _super.call(this, data) || this;
    }
    KalturaRenderCaptionAttributes.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaRenderCaptionAttributes' },
            fontName: { type: 's' },
            fontSize: { type: 'n' },
            primaryColour: { type: 's' },
            borderStyle: { type: 'en', subTypeConstructor: KalturaBorderStyle_1.KalturaBorderStyle, subType: 'KalturaBorderStyle' },
            backColour: { type: 's' },
            outlineColour: { type: 's' },
            shadow: { type: 'n' },
            bold: { type: 'b' },
            italic: { type: 'b' },
            underline: { type: 'b' },
            alignment: { type: 'en', subTypeConstructor: KalturaCaptionsAlignment_1.KalturaCaptionsAlignment, subType: 'KalturaCaptionsAlignment' },
            captionAssetId: { type: 's' }
        });
        return result;
    };
    return KalturaRenderCaptionAttributes;
}(KalturaCaptionAttributes_1.KalturaCaptionAttributes));
exports.KalturaRenderCaptionAttributes = KalturaRenderCaptionAttributes;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaRenderCaptionAttributes', KalturaRenderCaptionAttributes);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhUmVuZGVyQ2FwdGlvbkF0dHJpYnV0ZXMudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCwyREFBMEQ7QUFDMUQsdUVBQXNFO0FBQ3RFLHVFQUFvRztBQWtCcEc7SUFBb0QsMERBQXdCO0lBZXhFLHdDQUFZLElBQTBDO2VBRWxELGtCQUFNLElBQUksQ0FBQztJQUNmLENBQUM7SUFFUyxxREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxnQ0FBZ0MsRUFBRTtZQUNuRixRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3pCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsYUFBYSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM5QixXQUFXLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLHVDQUFrQixFQUFFLE9BQU8sRUFBRyxvQkFBb0IsRUFBRTtZQUN0RyxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzNCLGFBQWEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDOUIsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN2QixJQUFJLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3JCLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdkIsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMxQixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLG1EQUF3QixFQUFFLE9BQU8sRUFBRywwQkFBMEIsRUFBRTtZQUNoSCxjQUFjLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ3RCLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxxQ0FBQztBQUFELENBM0NBLEFBMkNDLENBM0NtRCxtREFBd0IsR0EyQzNFO0FBM0NZLHdFQUE4QjtBQTZDM0MsMkNBQW1CLENBQUMsWUFBWSxDQUFDLGdDQUFnQyxFQUFDLDhCQUE4QixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFSZW5kZXJDYXB0aW9uQXR0cmlidXRlcy5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFCb3JkZXJTdHlsZSB9IGZyb20gJy4vS2FsdHVyYUJvcmRlclN0eWxlJztcbmltcG9ydCB7IEthbHR1cmFDYXB0aW9uc0FsaWdubWVudCB9IGZyb20gJy4vS2FsdHVyYUNhcHRpb25zQWxpZ25tZW50JztcbmltcG9ydCB7IEthbHR1cmFDYXB0aW9uQXR0cmlidXRlcywgS2FsdHVyYUNhcHRpb25BdHRyaWJ1dGVzQXJncyB9IGZyb20gJy4vS2FsdHVyYUNhcHRpb25BdHRyaWJ1dGVzJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhUmVuZGVyQ2FwdGlvbkF0dHJpYnV0ZXNBcmdzICBleHRlbmRzIEthbHR1cmFDYXB0aW9uQXR0cmlidXRlc0FyZ3Mge1xuICAgIGZvbnROYW1lPyA6IHN0cmluZztcblx0Zm9udFNpemU/IDogbnVtYmVyO1xuXHRwcmltYXJ5Q29sb3VyPyA6IHN0cmluZztcblx0Ym9yZGVyU3R5bGU/IDogS2FsdHVyYUJvcmRlclN0eWxlO1xuXHRiYWNrQ29sb3VyPyA6IHN0cmluZztcblx0b3V0bGluZUNvbG91cj8gOiBzdHJpbmc7XG5cdHNoYWRvdz8gOiBudW1iZXI7XG5cdGJvbGQ/IDogYm9vbGVhbjtcblx0aXRhbGljPyA6IGJvb2xlYW47XG5cdHVuZGVybGluZT8gOiBib29sZWFuO1xuXHRhbGlnbm1lbnQ/IDogS2FsdHVyYUNhcHRpb25zQWxpZ25tZW50O1xuXHRjYXB0aW9uQXNzZXRJZD8gOiBzdHJpbmc7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFSZW5kZXJDYXB0aW9uQXR0cmlidXRlcyBleHRlbmRzIEthbHR1cmFDYXB0aW9uQXR0cmlidXRlcyB7XG5cbiAgICBmb250TmFtZSA6IHN0cmluZztcblx0Zm9udFNpemUgOiBudW1iZXI7XG5cdHByaW1hcnlDb2xvdXIgOiBzdHJpbmc7XG5cdGJvcmRlclN0eWxlIDogS2FsdHVyYUJvcmRlclN0eWxlO1xuXHRiYWNrQ29sb3VyIDogc3RyaW5nO1xuXHRvdXRsaW5lQ29sb3VyIDogc3RyaW5nO1xuXHRzaGFkb3cgOiBudW1iZXI7XG5cdGJvbGQgOiBib29sZWFuO1xuXHRpdGFsaWMgOiBib29sZWFuO1xuXHR1bmRlcmxpbmUgOiBib29sZWFuO1xuXHRhbGlnbm1lbnQgOiBLYWx0dXJhQ2FwdGlvbnNBbGlnbm1lbnQ7XG5cdGNhcHRpb25Bc3NldElkIDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhUmVuZGVyQ2FwdGlvbkF0dHJpYnV0ZXNBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYVJlbmRlckNhcHRpb25BdHRyaWJ1dGVzJyB9LFxuXHRcdFx0XHRmb250TmFtZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRmb250U2l6ZSA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRwcmltYXJ5Q29sb3VyIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGJvcmRlclN0eWxlIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUJvcmRlclN0eWxlLCBzdWJUeXBlIDogJ0thbHR1cmFCb3JkZXJTdHlsZScgfSxcblx0XHRcdFx0YmFja0NvbG91ciA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRvdXRsaW5lQ29sb3VyIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHNoYWRvdyA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRib2xkIDogeyB0eXBlIDogJ2InIH0sXG5cdFx0XHRcdGl0YWxpYyA6IHsgdHlwZSA6ICdiJyB9LFxuXHRcdFx0XHR1bmRlcmxpbmUgOiB7IHR5cGUgOiAnYicgfSxcblx0XHRcdFx0YWxpZ25tZW50IDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUNhcHRpb25zQWxpZ25tZW50LCBzdWJUeXBlIDogJ0thbHR1cmFDYXB0aW9uc0FsaWdubWVudCcgfSxcblx0XHRcdFx0Y2FwdGlvbkFzc2V0SWQgOiB7IHR5cGUgOiAncycgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFSZW5kZXJDYXB0aW9uQXR0cmlidXRlcycsS2FsdHVyYVJlbmRlckNhcHRpb25BdHRyaWJ1dGVzKTtcbiJdfQ==
