"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ConfMapsGetMapNamesAction = void 0;
var tslib_1 = require("tslib");
var KalturaString_1 = require("./KalturaString");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'confMaps' action 'getMapNames'.
 *
 * Usage: List configuration maps names
 *
 * Server response type:         KalturaString[]
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var ConfMapsGetMapNamesAction = /** @class */ (function (_super) {
    tslib_1.__extends(ConfMapsGetMapNamesAction, _super);
    function ConfMapsGetMapNamesAction(data) {
        return _super.call(this, data, { responseType: 'a', responseSubType: 'KalturaString', responseConstructor: KalturaString_1.KalturaString }) || this;
    }
    ConfMapsGetMapNamesAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'confmaps_confmaps' },
            action: { type: 'c', default: 'getMapNames' }
        });
        return result;
    };
    return ConfMapsGetMapNamesAction;
}(kaltura_request_1.KalturaRequest));
exports.ConfMapsGetMapNamesAction = ConfMapsGetMapNamesAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9Db25mTWFwc0dldE1hcE5hbWVzQWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxpREFBZ0Q7QUFFaEQsc0RBQXdFO0FBTXhFOzs7Ozs7Ozs7R0FTRztBQUNIO0lBQStDLHFEQUErQjtJQUkxRSxtQ0FBWSxJQUFxQztlQUU3QyxrQkFBTSxJQUFJLEVBQUUsRUFBQyxZQUFZLEVBQUcsR0FBRyxFQUFFLGVBQWUsRUFBRyxlQUFlLEVBQUUsbUJBQW1CLEVBQUcsNkJBQWEsRUFBRyxDQUFDO0lBQy9HLENBQUM7SUFFUyxnREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxtQkFBbUIsRUFBRTtZQUNuRSxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxhQUFhLEVBQUU7U0FDdkMsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLGdDQUFDO0FBQUQsQ0FyQkEsQUFxQkMsQ0FyQjhDLGdDQUFjLEdBcUI1RDtBQXJCWSw4REFBeUIiLCJmaWxlIjoiYXBpL3R5cGVzL0NvbmZNYXBzR2V0TWFwTmFtZXNBY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVN0cmluZyB9IGZyb20gJy4vS2FsdHVyYVN0cmluZyc7XG5cbmltcG9ydCB7IEthbHR1cmFSZXF1ZXN0LCBLYWx0dXJhUmVxdWVzdEFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIENvbmZNYXBzR2V0TWFwTmFtZXNBY3Rpb25BcmdzICBleHRlbmRzIEthbHR1cmFSZXF1ZXN0QXJncyB7XG4gICAgXG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICdjb25mTWFwcycgYWN0aW9uICdnZXRNYXBOYW1lcycuXG4gKlxuICogVXNhZ2U6IExpc3QgY29uZmlndXJhdGlvbiBtYXBzIG5hbWVzXG4gKlxuICogU2VydmVyIHJlc3BvbnNlIHR5cGU6ICAgICAgICAgS2FsdHVyYVN0cmluZ1tdXG4gKiBTZXJ2ZXIgZmFpbHVyZSByZXNwb25zZSB0eXBlOiBLYWx0dXJhQVBJRXhjZXB0aW9uXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIEthbHR1cmFSZXF1ZXN0XG4gKi9cbmV4cG9ydCBjbGFzcyBDb25mTWFwc0dldE1hcE5hbWVzQWN0aW9uIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3Q8S2FsdHVyYVN0cmluZ1tdPiB7XG5cbiAgICBcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogQ29uZk1hcHNHZXRNYXBOYW1lc0FjdGlvbkFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhLCB7cmVzcG9uc2VUeXBlIDogJ2EnLCByZXNwb25zZVN1YlR5cGUgOiAnS2FsdHVyYVN0cmluZycsIHJlc3BvbnNlQ29uc3RydWN0b3IgOiBLYWx0dXJhU3RyaW5nICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdjb25mbWFwc19jb25mbWFwcycgfSxcblx0XHRcdFx0YWN0aW9uIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ2dldE1hcE5hbWVzJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG4iXX0=
