"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaConversionProfileAssetParamsFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaConversionProfileFilter_1 = require("./KalturaConversionProfileFilter");
var KalturaAssetParamsFilter_1 = require("./KalturaAssetParamsFilter");
var KalturaConversionProfileAssetParamsBaseFilter_1 = require("./KalturaConversionProfileAssetParamsBaseFilter");
var KalturaConversionProfileAssetParamsFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaConversionProfileAssetParamsFilter, _super);
    function KalturaConversionProfileAssetParamsFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaConversionProfileAssetParamsFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaConversionProfileAssetParamsFilter' },
            conversionProfileIdFilter: { type: 'o', subTypeConstructor: KalturaConversionProfileFilter_1.KalturaConversionProfileFilter, subType: 'KalturaConversionProfileFilter' },
            assetParamsIdFilter: { type: 'o', subTypeConstructor: KalturaAssetParamsFilter_1.KalturaAssetParamsFilter, subType: 'KalturaAssetParamsFilter' }
        });
        return result;
    };
    return KalturaConversionProfileAssetParamsFilter;
}(KalturaConversionProfileAssetParamsBaseFilter_1.KalturaConversionProfileAssetParamsBaseFilter));
exports.KalturaConversionProfileAssetParamsFilter = KalturaConversionProfileAssetParamsFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaConversionProfileAssetParamsFilter', KalturaConversionProfileAssetParamsFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQ29udmVyc2lvblByb2ZpbGVBc3NldFBhcmFtc0ZpbHRlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELG1GQUFrRjtBQUNsRix1RUFBc0U7QUFDdEUsaUhBQW1LO0FBUW5LO0lBQStELHFFQUE2QztJQUt4RyxtREFBWSxJQUFxRDtlQUU3RCxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMsZ0VBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsMkNBQTJDLEVBQUU7WUFDOUYseUJBQXlCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLCtEQUE4QixFQUFFLE9BQU8sRUFBRyxnQ0FBZ0MsRUFBRTtZQUMzSSxtQkFBbUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsbURBQXdCLEVBQUUsT0FBTyxFQUFHLDBCQUEwQixFQUFFO1NBQ2hILENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxnREFBQztBQUFELENBdkJBLEFBdUJDLENBdkI4RCw2RkFBNkMsR0F1QjNHO0FBdkJZLDhGQUF5QztBQXlCdEQsMkNBQW1CLENBQUMsWUFBWSxDQUFDLDJDQUEyQyxFQUFDLHlDQUF5QyxDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFDb252ZXJzaW9uUHJvZmlsZUFzc2V0UGFyYW1zRmlsdGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYUNvbnZlcnNpb25Qcm9maWxlRmlsdGVyIH0gZnJvbSAnLi9LYWx0dXJhQ29udmVyc2lvblByb2ZpbGVGaWx0ZXInO1xuaW1wb3J0IHsgS2FsdHVyYUFzc2V0UGFyYW1zRmlsdGVyIH0gZnJvbSAnLi9LYWx0dXJhQXNzZXRQYXJhbXNGaWx0ZXInO1xuaW1wb3J0IHsgS2FsdHVyYUNvbnZlcnNpb25Qcm9maWxlQXNzZXRQYXJhbXNCYXNlRmlsdGVyLCBLYWx0dXJhQ29udmVyc2lvblByb2ZpbGVBc3NldFBhcmFtc0Jhc2VGaWx0ZXJBcmdzIH0gZnJvbSAnLi9LYWx0dXJhQ29udmVyc2lvblByb2ZpbGVBc3NldFBhcmFtc0Jhc2VGaWx0ZXInO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFDb252ZXJzaW9uUHJvZmlsZUFzc2V0UGFyYW1zRmlsdGVyQXJncyAgZXh0ZW5kcyBLYWx0dXJhQ29udmVyc2lvblByb2ZpbGVBc3NldFBhcmFtc0Jhc2VGaWx0ZXJBcmdzIHtcbiAgICBjb252ZXJzaW9uUHJvZmlsZUlkRmlsdGVyPyA6IEthbHR1cmFDb252ZXJzaW9uUHJvZmlsZUZpbHRlcjtcblx0YXNzZXRQYXJhbXNJZEZpbHRlcj8gOiBLYWx0dXJhQXNzZXRQYXJhbXNGaWx0ZXI7XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFDb252ZXJzaW9uUHJvZmlsZUFzc2V0UGFyYW1zRmlsdGVyIGV4dGVuZHMgS2FsdHVyYUNvbnZlcnNpb25Qcm9maWxlQXNzZXRQYXJhbXNCYXNlRmlsdGVyIHtcblxuICAgIGNvbnZlcnNpb25Qcm9maWxlSWRGaWx0ZXIgOiBLYWx0dXJhQ29udmVyc2lvblByb2ZpbGVGaWx0ZXI7XG5cdGFzc2V0UGFyYW1zSWRGaWx0ZXIgOiBLYWx0dXJhQXNzZXRQYXJhbXNGaWx0ZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFDb252ZXJzaW9uUHJvZmlsZUFzc2V0UGFyYW1zRmlsdGVyQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFDb252ZXJzaW9uUHJvZmlsZUFzc2V0UGFyYW1zRmlsdGVyJyB9LFxuXHRcdFx0XHRjb252ZXJzaW9uUHJvZmlsZUlkRmlsdGVyIDogeyB0eXBlIDogJ28nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQ29udmVyc2lvblByb2ZpbGVGaWx0ZXIsIHN1YlR5cGUgOiAnS2FsdHVyYUNvbnZlcnNpb25Qcm9maWxlRmlsdGVyJyB9LFxuXHRcdFx0XHRhc3NldFBhcmFtc0lkRmlsdGVyIDogeyB0eXBlIDogJ28nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQXNzZXRQYXJhbXNGaWx0ZXIsIHN1YlR5cGUgOiAnS2FsdHVyYUFzc2V0UGFyYW1zRmlsdGVyJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUNvbnZlcnNpb25Qcm9maWxlQXNzZXRQYXJhbXNGaWx0ZXInLEthbHR1cmFDb252ZXJzaW9uUHJvZmlsZUFzc2V0UGFyYW1zRmlsdGVyKTtcbiJdfQ==
