"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.VolatileInteractivityUpdateAction = void 0;
var tslib_1 = require("tslib");
var KalturaVolatileInteractivity_1 = require("./KalturaVolatileInteractivity");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'volatileInteractivity' action 'update'.
 *
 * Usage: Update a volatile interactivity object
 *
 * Server response type:         KalturaVolatileInteractivity
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var VolatileInteractivityUpdateAction = /** @class */ (function (_super) {
    tslib_1.__extends(VolatileInteractivityUpdateAction, _super);
    function VolatileInteractivityUpdateAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaVolatileInteractivity', responseConstructor: KalturaVolatileInteractivity_1.KalturaVolatileInteractivity }) || this;
    }
    VolatileInteractivityUpdateAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'interactivity_volatileinteractivity' },
            action: { type: 'c', default: 'update' },
            entryId: { type: 's' },
            version: { type: 'n' },
            kalturaVolatileInteractivity: { type: 'o', subTypeConstructor: KalturaVolatileInteractivity_1.KalturaVolatileInteractivity, subType: 'KalturaVolatileInteractivity' }
        });
        return result;
    };
    return VolatileInteractivityUpdateAction;
}(kaltura_request_1.KalturaRequest));
exports.VolatileInteractivityUpdateAction = VolatileInteractivityUpdateAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9Wb2xhdGlsZUludGVyYWN0aXZpdHlVcGRhdGVBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLCtFQUE4RTtBQUU5RSxzREFBd0U7QUFReEU7Ozs7Ozs7OztHQVNHO0FBQ0g7SUFBdUQsNkRBQTRDO0lBTS9GLDJDQUFZLElBQTRDO2VBRXBELGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLDhCQUE4QixFQUFFLG1CQUFtQixFQUFHLDJEQUE0QixFQUFHLENBQUM7SUFDN0ksQ0FBQztJQUVTLHdEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHFDQUFxQyxFQUFFO1lBQ3JGLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLFFBQVEsRUFBRTtZQUMzQyxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hCLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDeEIsNEJBQTRCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLDJEQUE0QixFQUFFLE9BQU8sRUFBRyw4QkFBOEIsRUFBRTtTQUNqSSxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsd0NBQUM7QUFBRCxDQTFCQSxBQTBCQyxDQTFCc0QsZ0NBQWMsR0EwQnBFO0FBMUJZLDhFQUFpQyIsImZpbGUiOiJhcGkvdHlwZXMvVm9sYXRpbGVJbnRlcmFjdGl2aXR5VXBkYXRlQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFWb2xhdGlsZUludGVyYWN0aXZpdHkgfSBmcm9tICcuL0thbHR1cmFWb2xhdGlsZUludGVyYWN0aXZpdHknO1xuXG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBWb2xhdGlsZUludGVyYWN0aXZpdHlVcGRhdGVBY3Rpb25BcmdzICBleHRlbmRzIEthbHR1cmFSZXF1ZXN0QXJncyB7XG4gICAgZW50cnlJZCA6IHN0cmluZztcblx0dmVyc2lvbiA6IG51bWJlcjtcblx0a2FsdHVyYVZvbGF0aWxlSW50ZXJhY3Rpdml0eSA6IEthbHR1cmFWb2xhdGlsZUludGVyYWN0aXZpdHk7XG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICd2b2xhdGlsZUludGVyYWN0aXZpdHknIGFjdGlvbiAndXBkYXRlJy5cbiAqXG4gKiBVc2FnZTogVXBkYXRlIGEgdm9sYXRpbGUgaW50ZXJhY3Rpdml0eSBvYmplY3RcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhVm9sYXRpbGVJbnRlcmFjdGl2aXR5XG4gKiBTZXJ2ZXIgZmFpbHVyZSByZXNwb25zZSB0eXBlOiBLYWx0dXJhQVBJRXhjZXB0aW9uXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIEthbHR1cmFSZXF1ZXN0XG4gKi9cbmV4cG9ydCBjbGFzcyBWb2xhdGlsZUludGVyYWN0aXZpdHlVcGRhdGVBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdDxLYWx0dXJhVm9sYXRpbGVJbnRlcmFjdGl2aXR5PiB7XG5cbiAgICBlbnRyeUlkIDogc3RyaW5nO1xuXHR2ZXJzaW9uIDogbnVtYmVyO1xuXHRrYWx0dXJhVm9sYXRpbGVJbnRlcmFjdGl2aXR5IDogS2FsdHVyYVZvbGF0aWxlSW50ZXJhY3Rpdml0eTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBWb2xhdGlsZUludGVyYWN0aXZpdHlVcGRhdGVBY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdvJywgcmVzcG9uc2VTdWJUeXBlIDogJ0thbHR1cmFWb2xhdGlsZUludGVyYWN0aXZpdHknLCByZXNwb25zZUNvbnN0cnVjdG9yIDogS2FsdHVyYVZvbGF0aWxlSW50ZXJhY3Rpdml0eSAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnaW50ZXJhY3Rpdml0eV92b2xhdGlsZWludGVyYWN0aXZpdHknIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICd1cGRhdGUnIH0sXG5cdFx0XHRcdGVudHJ5SWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0dmVyc2lvbiA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRrYWx0dXJhVm9sYXRpbGVJbnRlcmFjdGl2aXR5IDogeyB0eXBlIDogJ28nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhVm9sYXRpbGVJbnRlcmFjdGl2aXR5LCBzdWJUeXBlIDogJ0thbHR1cmFWb2xhdGlsZUludGVyYWN0aXZpdHknIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
