"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaAnswerCuePoint = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaNullableBoolean_1 = require("./KalturaNullableBoolean");
var KalturaString_1 = require("./KalturaString");
var KalturaCuePoint_1 = require("./KalturaCuePoint");
var KalturaAnswerCuePoint = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaAnswerCuePoint, _super);
    function KalturaAnswerCuePoint(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.correctAnswerKeys === 'undefined')
            _this.correctAnswerKeys = [];
        return _this;
    }
    KalturaAnswerCuePoint.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaAnswerCuePoint' },
            parentId: { type: 's' },
            quizUserEntryId: { type: 's' },
            answerKey: { type: 's' },
            openAnswer: { type: 's' },
            isCorrect: { type: 'en', readOnly: true, subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' },
            correctAnswerKeys: { type: 'a', readOnly: true, subTypeConstructor: KalturaString_1.KalturaString, subType: 'KalturaString' },
            explanation: { type: 's', readOnly: true },
            feedback: { type: 's' }
        });
        return result;
    };
    return KalturaAnswerCuePoint;
}(KalturaCuePoint_1.KalturaCuePoint));
exports.KalturaAnswerCuePoint = KalturaAnswerCuePoint;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaAnswerCuePoint', KalturaAnswerCuePoint);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQW5zd2VyQ3VlUG9pbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxtRUFBa0U7QUFDbEUsaURBQWdEO0FBQ2hELHFEQUF5RTtBQVd6RTtJQUEyQyxpREFBZTtJQVd0RCwrQkFBWSxJQUFpQztRQUE3QyxZQUVJLGtCQUFNLElBQUksQ0FBQyxTQUVkO1FBREcsSUFBSSxPQUFPLEtBQUksQ0FBQyxpQkFBaUIsS0FBSyxXQUFXO1lBQUUsS0FBSSxDQUFDLGlCQUFpQixHQUFHLEVBQUUsQ0FBQzs7SUFDbkYsQ0FBQztJQUVTLDRDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHVCQUF1QixFQUFFO1lBQzFFLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsZUFBZSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNoQyxTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzFCLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDM0IsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLCtDQUFzQixFQUFFLE9BQU8sRUFBRyx3QkFBd0IsRUFBRTtZQUM3SCxpQkFBaUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyw2QkFBYSxFQUFFLE9BQU8sRUFBRyxlQUFlLEVBQUU7WUFDbEgsV0FBVyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQzdDLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDaEIsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDRCQUFDO0FBQUQsQ0FwQ0EsQUFvQ0MsQ0FwQzBDLGlDQUFlLEdBb0N6RDtBQXBDWSxzREFBcUI7QUFzQ2xDLDJDQUFtQixDQUFDLFlBQVksQ0FBQyx1QkFBdUIsRUFBQyxxQkFBcUIsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhQW5zd2VyQ3VlUG9pbnQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhTnVsbGFibGVCb29sZWFuIH0gZnJvbSAnLi9LYWx0dXJhTnVsbGFibGVCb29sZWFuJztcbmltcG9ydCB7IEthbHR1cmFTdHJpbmcgfSBmcm9tICcuL0thbHR1cmFTdHJpbmcnO1xuaW1wb3J0IHsgS2FsdHVyYUN1ZVBvaW50LCBLYWx0dXJhQ3VlUG9pbnRBcmdzIH0gZnJvbSAnLi9LYWx0dXJhQ3VlUG9pbnQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFBbnN3ZXJDdWVQb2ludEFyZ3MgIGV4dGVuZHMgS2FsdHVyYUN1ZVBvaW50QXJncyB7XG4gICAgcGFyZW50SWQ/IDogc3RyaW5nO1xuXHRxdWl6VXNlckVudHJ5SWQ/IDogc3RyaW5nO1xuXHRhbnN3ZXJLZXk/IDogc3RyaW5nO1xuXHRvcGVuQW5zd2VyPyA6IHN0cmluZztcblx0ZmVlZGJhY2s/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhQW5zd2VyQ3VlUG9pbnQgZXh0ZW5kcyBLYWx0dXJhQ3VlUG9pbnQge1xuXG4gICAgcGFyZW50SWQgOiBzdHJpbmc7XG5cdHF1aXpVc2VyRW50cnlJZCA6IHN0cmluZztcblx0YW5zd2VyS2V5IDogc3RyaW5nO1xuXHRvcGVuQW5zd2VyIDogc3RyaW5nO1xuXHRyZWFkb25seSBpc0NvcnJlY3QgOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuO1xuXHRyZWFkb25seSBjb3JyZWN0QW5zd2VyS2V5cyA6IEthbHR1cmFTdHJpbmdbXTtcblx0cmVhZG9ubHkgZXhwbGFuYXRpb24gOiBzdHJpbmc7XG5cdGZlZWRiYWNrIDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhQW5zd2VyQ3VlUG9pbnRBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgICAgIGlmICh0eXBlb2YgdGhpcy5jb3JyZWN0QW5zd2VyS2V5cyA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMuY29ycmVjdEFuc3dlcktleXMgPSBbXTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhQW5zd2VyQ3VlUG9pbnQnIH0sXG5cdFx0XHRcdHBhcmVudElkIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHF1aXpVc2VyRW50cnlJZCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRhbnN3ZXJLZXkgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0b3BlbkFuc3dlciA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRpc0NvcnJlY3QgOiB7IHR5cGUgOiAnZW4nLCByZWFkT25seSA6IHRydWUsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFOdWxsYWJsZUJvb2xlYW4sIHN1YlR5cGUgOiAnS2FsdHVyYU51bGxhYmxlQm9vbGVhbicgfSxcblx0XHRcdFx0Y29ycmVjdEFuc3dlcktleXMgOiB7IHR5cGUgOiAnYScsIHJlYWRPbmx5IDogdHJ1ZSwgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVN0cmluZywgc3ViVHlwZSA6ICdLYWx0dXJhU3RyaW5nJyB9LFxuXHRcdFx0XHRleHBsYW5hdGlvbiA6IHsgdHlwZSA6ICdzJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdGZlZWRiYWNrIDogeyB0eXBlIDogJ3MnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhQW5zd2VyQ3VlUG9pbnQnLEthbHR1cmFBbnN3ZXJDdWVQb2ludCk7XG4iXX0=
