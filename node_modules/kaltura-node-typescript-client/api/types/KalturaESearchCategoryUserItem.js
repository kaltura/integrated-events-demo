"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaESearchCategoryUserItem = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaESearchCategoryUserFieldName_1 = require("./KalturaESearchCategoryUserFieldName");
var KalturaCategoryUserPermissionLevel_1 = require("./KalturaCategoryUserPermissionLevel");
var KalturaESearchAbstractCategoryItem_1 = require("./KalturaESearchAbstractCategoryItem");
var KalturaESearchCategoryUserItem = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaESearchCategoryUserItem, _super);
    function KalturaESearchCategoryUserItem(data) {
        return _super.call(this, data) || this;
    }
    KalturaESearchCategoryUserItem.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaESearchCategoryUserItem' },
            fieldName: { type: 'es', subTypeConstructor: KalturaESearchCategoryUserFieldName_1.KalturaESearchCategoryUserFieldName, subType: 'KalturaESearchCategoryUserFieldName' },
            permissionLevel: { type: 'en', subTypeConstructor: KalturaCategoryUserPermissionLevel_1.KalturaCategoryUserPermissionLevel, subType: 'KalturaCategoryUserPermissionLevel' },
            permissionName: { type: 's' }
        });
        return result;
    };
    return KalturaESearchCategoryUserItem;
}(KalturaESearchAbstractCategoryItem_1.KalturaESearchAbstractCategoryItem));
exports.KalturaESearchCategoryUserItem = KalturaESearchCategoryUserItem;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaESearchCategoryUserItem', KalturaESearchCategoryUserItem);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRVNlYXJjaENhdGVnb3J5VXNlckl0ZW0udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCw2RkFBNEY7QUFDNUYsMkZBQTBGO0FBQzFGLDJGQUFrSTtBQVNsSTtJQUFvRCwwREFBa0M7SUFNbEYsd0NBQVksSUFBMEM7ZUFFbEQsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLHFEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLGdDQUFnQyxFQUFFO1lBQ25GLFNBQVMsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcseUVBQW1DLEVBQUUsT0FBTyxFQUFHLHFDQUFxQyxFQUFFO1lBQ3RJLGVBQWUsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsdUVBQWtDLEVBQUUsT0FBTyxFQUFHLG9DQUFvQyxFQUFFO1lBQzFJLGNBQWMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDdEIsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHFDQUFDO0FBQUQsQ0F6QkEsQUF5QkMsQ0F6Qm1ELHVFQUFrQyxHQXlCckY7QUF6Qlksd0VBQThCO0FBMkIzQywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsZ0NBQWdDLEVBQUMsOEJBQThCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYUVTZWFyY2hDYXRlZ29yeVVzZXJJdGVtLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYUVTZWFyY2hDYXRlZ29yeVVzZXJGaWVsZE5hbWUgfSBmcm9tICcuL0thbHR1cmFFU2VhcmNoQ2F0ZWdvcnlVc2VyRmllbGROYW1lJztcbmltcG9ydCB7IEthbHR1cmFDYXRlZ29yeVVzZXJQZXJtaXNzaW9uTGV2ZWwgfSBmcm9tICcuL0thbHR1cmFDYXRlZ29yeVVzZXJQZXJtaXNzaW9uTGV2ZWwnO1xuaW1wb3J0IHsgS2FsdHVyYUVTZWFyY2hBYnN0cmFjdENhdGVnb3J5SXRlbSwgS2FsdHVyYUVTZWFyY2hBYnN0cmFjdENhdGVnb3J5SXRlbUFyZ3MgfSBmcm9tICcuL0thbHR1cmFFU2VhcmNoQWJzdHJhY3RDYXRlZ29yeUl0ZW0nO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFFU2VhcmNoQ2F0ZWdvcnlVc2VySXRlbUFyZ3MgIGV4dGVuZHMgS2FsdHVyYUVTZWFyY2hBYnN0cmFjdENhdGVnb3J5SXRlbUFyZ3Mge1xuICAgIGZpZWxkTmFtZT8gOiBLYWx0dXJhRVNlYXJjaENhdGVnb3J5VXNlckZpZWxkTmFtZTtcblx0cGVybWlzc2lvbkxldmVsPyA6IEthbHR1cmFDYXRlZ29yeVVzZXJQZXJtaXNzaW9uTGV2ZWw7XG5cdHBlcm1pc3Npb25OYW1lPyA6IHN0cmluZztcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYUVTZWFyY2hDYXRlZ29yeVVzZXJJdGVtIGV4dGVuZHMgS2FsdHVyYUVTZWFyY2hBYnN0cmFjdENhdGVnb3J5SXRlbSB7XG5cbiAgICBmaWVsZE5hbWUgOiBLYWx0dXJhRVNlYXJjaENhdGVnb3J5VXNlckZpZWxkTmFtZTtcblx0cGVybWlzc2lvbkxldmVsIDogS2FsdHVyYUNhdGVnb3J5VXNlclBlcm1pc3Npb25MZXZlbDtcblx0cGVybWlzc2lvbk5hbWUgOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFFU2VhcmNoQ2F0ZWdvcnlVc2VySXRlbUFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgb2JqZWN0VHlwZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdLYWx0dXJhRVNlYXJjaENhdGVnb3J5VXNlckl0ZW0nIH0sXG5cdFx0XHRcdGZpZWxkTmFtZSA6IHsgdHlwZSA6ICdlcycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFFU2VhcmNoQ2F0ZWdvcnlVc2VyRmllbGROYW1lLCBzdWJUeXBlIDogJ0thbHR1cmFFU2VhcmNoQ2F0ZWdvcnlVc2VyRmllbGROYW1lJyB9LFxuXHRcdFx0XHRwZXJtaXNzaW9uTGV2ZWwgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQ2F0ZWdvcnlVc2VyUGVybWlzc2lvbkxldmVsLCBzdWJUeXBlIDogJ0thbHR1cmFDYXRlZ29yeVVzZXJQZXJtaXNzaW9uTGV2ZWwnIH0sXG5cdFx0XHRcdHBlcm1pc3Npb25OYW1lIDogeyB0eXBlIDogJ3MnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhRVNlYXJjaENhdGVnb3J5VXNlckl0ZW0nLEthbHR1cmFFU2VhcmNoQ2F0ZWdvcnlVc2VySXRlbSk7XG4iXX0=
