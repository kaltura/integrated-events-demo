"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AccessControlProfileUpdateAction = void 0;
var tslib_1 = require("tslib");
var KalturaAccessControlProfile_1 = require("./KalturaAccessControlProfile");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'accessControlProfile' action 'update'.
 *
 * Usage: Update access control profile by id
 *
 * Server response type:         KalturaAccessControlProfile
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var AccessControlProfileUpdateAction = /** @class */ (function (_super) {
    tslib_1.__extends(AccessControlProfileUpdateAction, _super);
    function AccessControlProfileUpdateAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaAccessControlProfile', responseConstructor: KalturaAccessControlProfile_1.KalturaAccessControlProfile }) || this;
    }
    AccessControlProfileUpdateAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'accesscontrolprofile' },
            action: { type: 'c', default: 'update' },
            id: { type: 'n' },
            accessControlProfile: { type: 'o', subTypeConstructor: KalturaAccessControlProfile_1.KalturaAccessControlProfile, subType: 'KalturaAccessControlProfile' }
        });
        return result;
    };
    return AccessControlProfileUpdateAction;
}(kaltura_request_1.KalturaRequest));
exports.AccessControlProfileUpdateAction = AccessControlProfileUpdateAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9BY2Nlc3NDb250cm9sUHJvZmlsZVVwZGF0ZUFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsNkVBQTRFO0FBRTVFLHNEQUF3RTtBQU94RTs7Ozs7Ozs7O0dBU0c7QUFDSDtJQUFzRCw0REFBMkM7SUFLN0YsMENBQVksSUFBMkM7ZUFFbkQsa0JBQU0sSUFBSSxFQUFFLEVBQUMsWUFBWSxFQUFHLEdBQUcsRUFBRSxlQUFlLEVBQUcsNkJBQTZCLEVBQUUsbUJBQW1CLEVBQUcseURBQTJCLEVBQUcsQ0FBQztJQUMzSSxDQUFDO0lBRVMsdURBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsc0JBQXNCLEVBQUU7WUFDdEUsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsUUFBUSxFQUFFO1lBQzNDLEVBQUUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDbkIsb0JBQW9CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLHlEQUEyQixFQUFFLE9BQU8sRUFBRyw2QkFBNkIsRUFBRTtTQUN2SCxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsdUNBQUM7QUFBRCxDQXhCQSxBQXdCQyxDQXhCcUQsZ0NBQWMsR0F3Qm5FO0FBeEJZLDRFQUFnQyIsImZpbGUiOiJhcGkvdHlwZXMvQWNjZXNzQ29udHJvbFByb2ZpbGVVcGRhdGVBY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYUFjY2Vzc0NvbnRyb2xQcm9maWxlIH0gZnJvbSAnLi9LYWx0dXJhQWNjZXNzQ29udHJvbFByb2ZpbGUnO1xuXG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBBY2Nlc3NDb250cm9sUHJvZmlsZVVwZGF0ZUFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBpZCA6IG51bWJlcjtcblx0YWNjZXNzQ29udHJvbFByb2ZpbGUgOiBLYWx0dXJhQWNjZXNzQ29udHJvbFByb2ZpbGU7XG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICdhY2Nlc3NDb250cm9sUHJvZmlsZScgYWN0aW9uICd1cGRhdGUnLlxuICpcbiAqIFVzYWdlOiBVcGRhdGUgYWNjZXNzIGNvbnRyb2wgcHJvZmlsZSBieSBpZFxuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIEthbHR1cmFBY2Nlc3NDb250cm9sUHJvZmlsZVxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdFxuICovXG5leHBvcnQgY2xhc3MgQWNjZXNzQ29udHJvbFByb2ZpbGVVcGRhdGVBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhUmVxdWVzdDxLYWx0dXJhQWNjZXNzQ29udHJvbFByb2ZpbGU+IHtcblxuICAgIGlkIDogbnVtYmVyO1xuXHRhY2Nlc3NDb250cm9sUHJvZmlsZSA6IEthbHR1cmFBY2Nlc3NDb250cm9sUHJvZmlsZTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBBY2Nlc3NDb250cm9sUHJvZmlsZVVwZGF0ZUFjdGlvbkFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhLCB7cmVzcG9uc2VUeXBlIDogJ28nLCByZXNwb25zZVN1YlR5cGUgOiAnS2FsdHVyYUFjY2Vzc0NvbnRyb2xQcm9maWxlJywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IEthbHR1cmFBY2Nlc3NDb250cm9sUHJvZmlsZSAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnYWNjZXNzY29udHJvbHByb2ZpbGUnIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICd1cGRhdGUnIH0sXG5cdFx0XHRcdGlkIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGFjY2Vzc0NvbnRyb2xQcm9maWxlIDogeyB0eXBlIDogJ28nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhQWNjZXNzQ29udHJvbFByb2ZpbGUsIHN1YlR5cGUgOiAnS2FsdHVyYUFjY2Vzc0NvbnRyb2xQcm9maWxlJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG4iXX0=
