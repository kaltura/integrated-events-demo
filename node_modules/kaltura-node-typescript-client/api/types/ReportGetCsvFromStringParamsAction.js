"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ReportGetCsvFromStringParamsAction = void 0;
var tslib_1 = require("tslib");
var kaltura_file_request_1 = require("../kaltura-file-request");
/**
 * Build request payload for service 'report' action 'getCsvFromStringParams'.
 *
 * Usage: Returns report CSV file executed by string params with the following convention: param1=value1;param2=value2
 * excludedFields can be supplied comma separated
 *
 * Server response type:         { url: string }
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaFileRequest
 */
var ReportGetCsvFromStringParamsAction = /** @class */ (function (_super) {
    tslib_1.__extends(ReportGetCsvFromStringParamsAction, _super);
    function ReportGetCsvFromStringParamsAction(data) {
        return _super.call(this, data) || this;
    }
    ReportGetCsvFromStringParamsAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'report' },
            action: { type: 'c', default: 'getCsvFromStringParams' },
            id: { type: 'n' },
            params: { type: 's' },
            excludedFields: { type: 's' }
        });
        return result;
    };
    return ReportGetCsvFromStringParamsAction;
}(kaltura_file_request_1.KalturaFileRequest));
exports.ReportGetCsvFromStringParamsAction = ReportGetCsvFromStringParamsAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9SZXBvcnRHZXRDc3ZGcm9tU3RyaW5nUGFyYW1zQWN0aW9uLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFJQSxnRUFBcUY7QUFRckY7Ozs7Ozs7Ozs7R0FVRztBQUNIO0lBQXdELDhEQUFrQjtJQU10RSw0Q0FBWSxJQUE2QztlQUVyRCxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMseURBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsUUFBUSxFQUFFO1lBQ3hELE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHdCQUF3QixFQUFFO1lBQzNELEVBQUUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDbkIsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN2QixjQUFjLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ3RCLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCx5Q0FBQztBQUFELENBMUJBLEFBMEJDLENBMUJ1RCx5Q0FBa0IsR0EwQnpFO0FBMUJZLGdGQUFrQyIsImZpbGUiOiJhcGkvdHlwZXMvUmVwb3J0R2V0Q3N2RnJvbVN0cmluZ1BhcmFtc0FjdGlvbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5cblxuaW1wb3J0IHsgS2FsdHVyYUZpbGVSZXF1ZXN0LCBLYWx0dXJhRmlsZVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1maWxlLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIFJlcG9ydEdldENzdkZyb21TdHJpbmdQYXJhbXNBY3Rpb25BcmdzICBleHRlbmRzIEthbHR1cmFGaWxlUmVxdWVzdEFyZ3Mge1xuICAgIGlkIDogbnVtYmVyO1xuXHRwYXJhbXM/IDogc3RyaW5nO1xuXHRleGNsdWRlZEZpZWxkcz8gOiBzdHJpbmc7XG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICdyZXBvcnQnIGFjdGlvbiAnZ2V0Q3N2RnJvbVN0cmluZ1BhcmFtcycuXG4gKlxuICogVXNhZ2U6IFJldHVybnMgcmVwb3J0IENTViBmaWxlIGV4ZWN1dGVkIGJ5IHN0cmluZyBwYXJhbXMgd2l0aCB0aGUgZm9sbG93aW5nIGNvbnZlbnRpb246IHBhcmFtMT12YWx1ZTE7cGFyYW0yPXZhbHVlMlxuICogZXhjbHVkZWRGaWVsZHMgY2FuIGJlIHN1cHBsaWVkIGNvbW1hIHNlcGFyYXRlZFxuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIHsgdXJsOiBzdHJpbmcgfVxuICogU2VydmVyIGZhaWx1cmUgcmVzcG9uc2UgdHlwZTogS2FsdHVyYUFQSUV4Y2VwdGlvblxuICogQGNsYXNzXG4gKiBAZXh0ZW5kcyBLYWx0dXJhRmlsZVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIFJlcG9ydEdldENzdkZyb21TdHJpbmdQYXJhbXNBY3Rpb24gZXh0ZW5kcyBLYWx0dXJhRmlsZVJlcXVlc3Qge1xuXG4gICAgaWQgOiBudW1iZXI7XG5cdHBhcmFtcyA6IHN0cmluZztcblx0ZXhjbHVkZWRGaWVsZHMgOiBzdHJpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhIDogUmVwb3J0R2V0Q3N2RnJvbVN0cmluZ1BhcmFtc0FjdGlvbkFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdyZXBvcnQnIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdnZXRDc3ZGcm9tU3RyaW5nUGFyYW1zJyB9LFxuXHRcdFx0XHRpZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRwYXJhbXMgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0ZXhjbHVkZWRGaWVsZHMgOiB7IHR5cGUgOiAncycgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuIl19
