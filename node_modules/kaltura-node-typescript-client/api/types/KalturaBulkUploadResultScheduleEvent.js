"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaBulkUploadResultScheduleEvent = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaBulkUploadResult_1 = require("./KalturaBulkUploadResult");
var KalturaBulkUploadResultScheduleEvent = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaBulkUploadResultScheduleEvent, _super);
    function KalturaBulkUploadResultScheduleEvent(data) {
        return _super.call(this, data) || this;
    }
    KalturaBulkUploadResultScheduleEvent.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaBulkUploadResultScheduleEvent' },
            referenceId: { type: 's' },
            templateEntryId: { type: 's' },
            eventType: { type: 'n' },
            title: { type: 's' },
            description: { type: 's' },
            tags: { type: 's' },
            categoryIds: { type: 's' },
            resourceId: { type: 's' },
            startTime: { type: 'd' },
            duration: { type: 'n' },
            endTime: { type: 'd' },
            recurrence: { type: 's' },
            coEditors: { type: 's' },
            coPublishers: { type: 's' },
            eventOrganizerId: { type: 's' },
            contentOwnerId: { type: 's' },
            templateEntryType: { type: 's' }
        });
        return result;
    };
    return KalturaBulkUploadResultScheduleEvent;
}(KalturaBulkUploadResult_1.KalturaBulkUploadResult));
exports.KalturaBulkUploadResultScheduleEvent = KalturaBulkUploadResultScheduleEvent;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaBulkUploadResultScheduleEvent', KalturaBulkUploadResultScheduleEvent);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhQnVsa1VwbG9hZFJlc3VsdFNjaGVkdWxlRXZlbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxxRUFBaUc7QUF1QmpHO0lBQTBELGdFQUF1QjtJQW9CN0UsOENBQVksSUFBZ0Q7ZUFFeEQsa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLDJEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHNDQUFzQyxFQUFFO1lBQ3pGLFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDNUIsZUFBZSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNoQyxTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzFCLEtBQUssRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdEIsV0FBVyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM1QixJQUFJLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3JCLFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDNUIsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMzQixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzFCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzNCLFNBQVMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDMUIsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM3QixnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDakMsY0FBYyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMvQixpQkFBaUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDekIsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDJDQUFDO0FBQUQsQ0FyREEsQUFxREMsQ0FyRHlELGlEQUF1QixHQXFEaEY7QUFyRFksb0ZBQW9DO0FBdURqRCwyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsc0NBQXNDLEVBQUMsb0NBQW9DLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYUJ1bGtVcGxvYWRSZXN1bHRTY2hlZHVsZUV2ZW50LmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYUJ1bGtVcGxvYWRSZXN1bHQsIEthbHR1cmFCdWxrVXBsb2FkUmVzdWx0QXJncyB9IGZyb20gJy4vS2FsdHVyYUJ1bGtVcGxvYWRSZXN1bHQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFCdWxrVXBsb2FkUmVzdWx0U2NoZWR1bGVFdmVudEFyZ3MgIGV4dGVuZHMgS2FsdHVyYUJ1bGtVcGxvYWRSZXN1bHRBcmdzIHtcbiAgICByZWZlcmVuY2VJZD8gOiBzdHJpbmc7XG5cdHRlbXBsYXRlRW50cnlJZD8gOiBzdHJpbmc7XG5cdGV2ZW50VHlwZT8gOiBudW1iZXI7XG5cdHRpdGxlPyA6IHN0cmluZztcblx0ZGVzY3JpcHRpb24/IDogc3RyaW5nO1xuXHR0YWdzPyA6IHN0cmluZztcblx0Y2F0ZWdvcnlJZHM/IDogc3RyaW5nO1xuXHRyZXNvdXJjZUlkPyA6IHN0cmluZztcblx0c3RhcnRUaW1lPyA6IERhdGU7XG5cdGR1cmF0aW9uPyA6IG51bWJlcjtcblx0ZW5kVGltZT8gOiBEYXRlO1xuXHRyZWN1cnJlbmNlPyA6IHN0cmluZztcblx0Y29FZGl0b3JzPyA6IHN0cmluZztcblx0Y29QdWJsaXNoZXJzPyA6IHN0cmluZztcblx0ZXZlbnRPcmdhbml6ZXJJZD8gOiBzdHJpbmc7XG5cdGNvbnRlbnRPd25lcklkPyA6IHN0cmluZztcblx0dGVtcGxhdGVFbnRyeVR5cGU/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhQnVsa1VwbG9hZFJlc3VsdFNjaGVkdWxlRXZlbnQgZXh0ZW5kcyBLYWx0dXJhQnVsa1VwbG9hZFJlc3VsdCB7XG5cbiAgICByZWZlcmVuY2VJZCA6IHN0cmluZztcblx0dGVtcGxhdGVFbnRyeUlkIDogc3RyaW5nO1xuXHRldmVudFR5cGUgOiBudW1iZXI7XG5cdHRpdGxlIDogc3RyaW5nO1xuXHRkZXNjcmlwdGlvbiA6IHN0cmluZztcblx0dGFncyA6IHN0cmluZztcblx0Y2F0ZWdvcnlJZHMgOiBzdHJpbmc7XG5cdHJlc291cmNlSWQgOiBzdHJpbmc7XG5cdHN0YXJ0VGltZSA6IERhdGU7XG5cdGR1cmF0aW9uIDogbnVtYmVyO1xuXHRlbmRUaW1lIDogRGF0ZTtcblx0cmVjdXJyZW5jZSA6IHN0cmluZztcblx0Y29FZGl0b3JzIDogc3RyaW5nO1xuXHRjb1B1Ymxpc2hlcnMgOiBzdHJpbmc7XG5cdGV2ZW50T3JnYW5pemVySWQgOiBzdHJpbmc7XG5cdGNvbnRlbnRPd25lcklkIDogc3RyaW5nO1xuXHR0ZW1wbGF0ZUVudHJ5VHlwZSA6IHN0cmluZztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUJ1bGtVcGxvYWRSZXN1bHRTY2hlZHVsZUV2ZW50QXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFCdWxrVXBsb2FkUmVzdWx0U2NoZWR1bGVFdmVudCcgfSxcblx0XHRcdFx0cmVmZXJlbmNlSWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0dGVtcGxhdGVFbnRyeUlkIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGV2ZW50VHlwZSA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHR0aXRsZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRkZXNjcmlwdGlvbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHR0YWdzIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNhdGVnb3J5SWRzIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdHJlc291cmNlSWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c3RhcnRUaW1lIDogeyB0eXBlIDogJ2QnIH0sXG5cdFx0XHRcdGR1cmF0aW9uIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdGVuZFRpbWUgOiB7IHR5cGUgOiAnZCcgfSxcblx0XHRcdFx0cmVjdXJyZW5jZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRjb0VkaXRvcnMgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Y29QdWJsaXNoZXJzIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGV2ZW50T3JnYW5pemVySWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Y29udGVudE93bmVySWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0dGVtcGxhdGVFbnRyeVR5cGUgOiB7IHR5cGUgOiAncycgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFCdWxrVXBsb2FkUmVzdWx0U2NoZWR1bGVFdmVudCcsS2FsdHVyYUJ1bGtVcGxvYWRSZXN1bHRTY2hlZHVsZUV2ZW50KTtcbiJdfQ==
