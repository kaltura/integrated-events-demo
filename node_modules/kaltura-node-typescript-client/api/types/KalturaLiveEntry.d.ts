import { KalturaObjectMetadata } from '../kaltura-object-base';
import { KalturaRecordStatus } from './KalturaRecordStatus';
import { KalturaDVRStatus } from './KalturaDVRStatus';
import { KalturaLiveStreamConfiguration } from './KalturaLiveStreamConfiguration';
import { KalturaLivePublishStatus } from './KalturaLivePublishStatus';
import { KalturaLiveStreamPushPublishConfiguration } from './KalturaLiveStreamPushPublishConfiguration';
import { KalturaLiveEntryRecordingOptions } from './KalturaLiveEntryRecordingOptions';
import { KalturaEntryServerNodeStatus } from './KalturaEntryServerNodeStatus';
import { KalturaNullableBoolean } from './KalturaNullableBoolean';
import { KalturaViewMode } from './KalturaViewMode';
import { KalturaRecordingStatus } from './KalturaRecordingStatus';
import { KalturaMediaEntry, KalturaMediaEntryArgs } from './KalturaMediaEntry';
export interface KalturaLiveEntryArgs extends KalturaMediaEntryArgs {
    offlineMessage?: string;
    recordStatus?: KalturaRecordStatus;
    dvrStatus?: KalturaDVRStatus;
    dvrWindow?: number;
    lastElapsedRecordingTime?: number;
    liveStreamConfigurations?: KalturaLiveStreamConfiguration[];
    recordedEntryId?: string;
    pushPublishEnabled?: KalturaLivePublishStatus;
    publishConfigurations?: KalturaLiveStreamPushPublishConfiguration[];
    currentBroadcastStartTime?: number;
    recordingOptions?: KalturaLiveEntryRecordingOptions;
    segmentDuration?: number;
    explicitLive?: KalturaNullableBoolean;
    viewMode?: KalturaViewMode;
    recordingStatus?: KalturaRecordingStatus;
    broadcastTime?: number;
}
export declare class KalturaLiveEntry extends KalturaMediaEntry {
    offlineMessage: string;
    recordStatus: KalturaRecordStatus;
    dvrStatus: KalturaDVRStatus;
    dvrWindow: number;
    lastElapsedRecordingTime: number;
    liveStreamConfigurations: KalturaLiveStreamConfiguration[];
    recordedEntryId: string;
    pushPublishEnabled: KalturaLivePublishStatus;
    publishConfigurations: KalturaLiveStreamPushPublishConfiguration[];
    readonly firstBroadcast: number;
    readonly lastBroadcast: number;
    currentBroadcastStartTime: number;
    recordingOptions: KalturaLiveEntryRecordingOptions;
    readonly liveStatus: KalturaEntryServerNodeStatus;
    segmentDuration: number;
    explicitLive: KalturaNullableBoolean;
    viewMode: KalturaViewMode;
    recordingStatus: KalturaRecordingStatus;
    readonly lastBroadcastEndTime: number;
    broadcastTime: number;
    constructor(data?: KalturaLiveEntryArgs);
    protected _getMetadata(): KalturaObjectMetadata;
}
