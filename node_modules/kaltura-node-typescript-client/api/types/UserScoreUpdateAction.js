"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.UserScoreUpdateAction = void 0;
var tslib_1 = require("tslib");
var KalturaUserScorePropertiesResponse_1 = require("./KalturaUserScorePropertiesResponse");
var KalturaGameObjectType_1 = require("./KalturaGameObjectType");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'userScore' action 'update'.
 *
 *
 *
 * Server response type:         KalturaUserScorePropertiesResponse
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var UserScoreUpdateAction = /** @class */ (function (_super) {
    tslib_1.__extends(UserScoreUpdateAction, _super);
    function UserScoreUpdateAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaUserScorePropertiesResponse', responseConstructor: KalturaUserScorePropertiesResponse_1.KalturaUserScorePropertiesResponse }) || this;
    }
    UserScoreUpdateAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'game_userscore' },
            action: { type: 'c', default: 'update' },
            gameObjectId: { type: 's' },
            gameObjectType: { type: 'es', subTypeConstructor: KalturaGameObjectType_1.KalturaGameObjectType, subType: 'KalturaGameObjectType' },
            userId: { type: 's' },
            score: { type: 'n' }
        });
        return result;
    };
    return UserScoreUpdateAction;
}(kaltura_request_1.KalturaRequest));
exports.UserScoreUpdateAction = UserScoreUpdateAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9Vc2VyU2NvcmVVcGRhdGVBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLDJGQUEwRjtBQUUxRixpRUFBZ0U7QUFDaEUsc0RBQXdFO0FBU3hFOzs7Ozs7Ozs7R0FTRztBQUNIO0lBQTJDLGlEQUFrRDtJQU96RiwrQkFBWSxJQUFnQztlQUV4QyxrQkFBTSxJQUFJLEVBQUUsRUFBQyxZQUFZLEVBQUcsR0FBRyxFQUFFLGVBQWUsRUFBRyxvQ0FBb0MsRUFBRSxtQkFBbUIsRUFBRyx1RUFBa0MsRUFBRyxDQUFDO0lBQ3pKLENBQUM7SUFFUyw0Q0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxnQkFBZ0IsRUFBRTtZQUNoRSxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxRQUFRLEVBQUU7WUFDM0MsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM3QixjQUFjLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLDZDQUFxQixFQUFFLE9BQU8sRUFBRyx1QkFBdUIsRUFBRTtZQUMvRyxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3ZCLEtBQUssRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7U0FDYixDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsNEJBQUM7QUFBRCxDQTVCQSxBQTRCQyxDQTVCMEMsZ0NBQWMsR0E0QnhEO0FBNUJZLHNEQUFxQiIsImZpbGUiOiJhcGkvdHlwZXMvVXNlclNjb3JlVXBkYXRlQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFVc2VyU2NvcmVQcm9wZXJ0aWVzUmVzcG9uc2UgfSBmcm9tICcuL0thbHR1cmFVc2VyU2NvcmVQcm9wZXJ0aWVzUmVzcG9uc2UnO1xuXG5pbXBvcnQgeyBLYWx0dXJhR2FtZU9iamVjdFR5cGUgfSBmcm9tICcuL0thbHR1cmFHYW1lT2JqZWN0VHlwZSc7XG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBVc2VyU2NvcmVVcGRhdGVBY3Rpb25BcmdzICBleHRlbmRzIEthbHR1cmFSZXF1ZXN0QXJncyB7XG4gICAgZ2FtZU9iamVjdElkIDogc3RyaW5nO1xuXHRnYW1lT2JqZWN0VHlwZSA6IEthbHR1cmFHYW1lT2JqZWN0VHlwZTtcblx0dXNlcklkIDogc3RyaW5nO1xuXHRzY29yZSA6IG51bWJlcjtcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ3VzZXJTY29yZScgYWN0aW9uICd1cGRhdGUnLlxuICpcbiAqIFxuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIEthbHR1cmFVc2VyU2NvcmVQcm9wZXJ0aWVzUmVzcG9uc2VcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIFVzZXJTY29yZVVwZGF0ZUFjdGlvbiBleHRlbmRzIEthbHR1cmFSZXF1ZXN0PEthbHR1cmFVc2VyU2NvcmVQcm9wZXJ0aWVzUmVzcG9uc2U+IHtcblxuICAgIGdhbWVPYmplY3RJZCA6IHN0cmluZztcblx0Z2FtZU9iamVjdFR5cGUgOiBLYWx0dXJhR2FtZU9iamVjdFR5cGU7XG5cdHVzZXJJZCA6IHN0cmluZztcblx0c2NvcmUgOiBudW1iZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhIDogVXNlclNjb3JlVXBkYXRlQWN0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEsIHtyZXNwb25zZVR5cGUgOiAnbycsIHJlc3BvbnNlU3ViVHlwZSA6ICdLYWx0dXJhVXNlclNjb3JlUHJvcGVydGllc1Jlc3BvbnNlJywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IEthbHR1cmFVc2VyU2NvcmVQcm9wZXJ0aWVzUmVzcG9uc2UgIH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ2dhbWVfdXNlcnNjb3JlJyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAndXBkYXRlJyB9LFxuXHRcdFx0XHRnYW1lT2JqZWN0SWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0Z2FtZU9iamVjdFR5cGUgOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhR2FtZU9iamVjdFR5cGUsIHN1YlR5cGUgOiAnS2FsdHVyYUdhbWVPYmplY3RUeXBlJyB9LFxuXHRcdFx0XHR1c2VySWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c2NvcmUgOiB7IHR5cGUgOiAnbicgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuIl19
