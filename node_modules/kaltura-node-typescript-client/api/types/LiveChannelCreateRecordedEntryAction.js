"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.LiveChannelCreateRecordedEntryAction = void 0;
var tslib_1 = require("tslib");
var KalturaLiveEntry_1 = require("./KalturaLiveEntry");
var KalturaEntryServerNodeType_1 = require("./KalturaEntryServerNodeType");
var KalturaEntryServerNodeStatus_1 = require("./KalturaEntryServerNodeStatus");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'liveChannel' action 'createRecordedEntry'.
 *
 * Usage: Create recorded entry id if it doesn't exist and make sure it happens on the DC that the live entry was created on
 *
 * Server response type:         KalturaLiveEntry
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var LiveChannelCreateRecordedEntryAction = /** @class */ (function (_super) {
    tslib_1.__extends(LiveChannelCreateRecordedEntryAction, _super);
    function LiveChannelCreateRecordedEntryAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaLiveEntry', responseConstructor: KalturaLiveEntry_1.KalturaLiveEntry }) || this;
    }
    LiveChannelCreateRecordedEntryAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'livechannel' },
            action: { type: 'c', default: 'createRecordedEntry' },
            entryId: { type: 's' },
            mediaServerIndex: { type: 'es', subTypeConstructor: KalturaEntryServerNodeType_1.KalturaEntryServerNodeType, subType: 'KalturaEntryServerNodeType' },
            liveEntryStatus: { type: 'en', subTypeConstructor: KalturaEntryServerNodeStatus_1.KalturaEntryServerNodeStatus, subType: 'KalturaEntryServerNodeStatus' }
        });
        return result;
    };
    return LiveChannelCreateRecordedEntryAction;
}(kaltura_request_1.KalturaRequest));
exports.LiveChannelCreateRecordedEntryAction = LiveChannelCreateRecordedEntryAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9MaXZlQ2hhbm5lbENyZWF0ZVJlY29yZGVkRW50cnlBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLHVEQUFzRDtBQUV0RCwyRUFBMEU7QUFDMUUsK0VBQThFO0FBQzlFLHNEQUF3RTtBQVF4RTs7Ozs7Ozs7O0dBU0c7QUFDSDtJQUEwRCxnRUFBZ0M7SUFNdEYsOENBQVksSUFBK0M7ZUFFdkQsa0JBQU0sSUFBSSxFQUFFLEVBQUMsWUFBWSxFQUFHLEdBQUcsRUFBRSxlQUFlLEVBQUcsa0JBQWtCLEVBQUUsbUJBQW1CLEVBQUcsbUNBQWdCLEVBQUcsQ0FBQztJQUNySCxDQUFDO0lBRVMsMkRBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsYUFBYSxFQUFFO1lBQzdELE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHFCQUFxQixFQUFFO1lBQ3hELE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDeEIsZ0JBQWdCLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLHVEQUEwQixFQUFFLE9BQU8sRUFBRyw0QkFBNEIsRUFBRTtZQUMzSCxlQUFlLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLDJEQUE0QixFQUFFLE9BQU8sRUFBRyw4QkFBOEIsRUFBRTtTQUNySCxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsMkNBQUM7QUFBRCxDQTFCQSxBQTBCQyxDQTFCeUQsZ0NBQWMsR0EwQnZFO0FBMUJZLG9GQUFvQyIsImZpbGUiOiJhcGkvdHlwZXMvTGl2ZUNoYW5uZWxDcmVhdGVSZWNvcmRlZEVudHJ5QWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFMaXZlRW50cnkgfSBmcm9tICcuL0thbHR1cmFMaXZlRW50cnknO1xuXG5pbXBvcnQgeyBLYWx0dXJhRW50cnlTZXJ2ZXJOb2RlVHlwZSB9IGZyb20gJy4vS2FsdHVyYUVudHJ5U2VydmVyTm9kZVR5cGUnO1xuaW1wb3J0IHsgS2FsdHVyYUVudHJ5U2VydmVyTm9kZVN0YXR1cyB9IGZyb20gJy4vS2FsdHVyYUVudHJ5U2VydmVyTm9kZVN0YXR1cyc7XG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBMaXZlQ2hhbm5lbENyZWF0ZVJlY29yZGVkRW50cnlBY3Rpb25BcmdzICBleHRlbmRzIEthbHR1cmFSZXF1ZXN0QXJncyB7XG4gICAgZW50cnlJZCA6IHN0cmluZztcblx0bWVkaWFTZXJ2ZXJJbmRleCA6IEthbHR1cmFFbnRyeVNlcnZlck5vZGVUeXBlO1xuXHRsaXZlRW50cnlTdGF0dXMgOiBLYWx0dXJhRW50cnlTZXJ2ZXJOb2RlU3RhdHVzO1xufVxuXG4vKipcbiAqIEJ1aWxkIHJlcXVlc3QgcGF5bG9hZCBmb3Igc2VydmljZSAnbGl2ZUNoYW5uZWwnIGFjdGlvbiAnY3JlYXRlUmVjb3JkZWRFbnRyeScuXG4gKlxuICogVXNhZ2U6IENyZWF0ZSByZWNvcmRlZCBlbnRyeSBpZCBpZiBpdCBkb2Vzbid0IGV4aXN0IGFuZCBtYWtlIHN1cmUgaXQgaGFwcGVucyBvbiB0aGUgREMgdGhhdCB0aGUgbGl2ZSBlbnRyeSB3YXMgY3JlYXRlZCBvblxuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIEthbHR1cmFMaXZlRW50cnlcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIExpdmVDaGFubmVsQ3JlYXRlUmVjb3JkZWRFbnRyeUFjdGlvbiBleHRlbmRzIEthbHR1cmFSZXF1ZXN0PEthbHR1cmFMaXZlRW50cnk+IHtcblxuICAgIGVudHJ5SWQgOiBzdHJpbmc7XG5cdG1lZGlhU2VydmVySW5kZXggOiBLYWx0dXJhRW50cnlTZXJ2ZXJOb2RlVHlwZTtcblx0bGl2ZUVudHJ5U3RhdHVzIDogS2FsdHVyYUVudHJ5U2VydmVyTm9kZVN0YXR1cztcblxuICAgIGNvbnN0cnVjdG9yKGRhdGEgOiBMaXZlQ2hhbm5lbENyZWF0ZVJlY29yZGVkRW50cnlBY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdvJywgcmVzcG9uc2VTdWJUeXBlIDogJ0thbHR1cmFMaXZlRW50cnknLCByZXNwb25zZUNvbnN0cnVjdG9yIDogS2FsdHVyYUxpdmVFbnRyeSAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnbGl2ZWNoYW5uZWwnIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdjcmVhdGVSZWNvcmRlZEVudHJ5JyB9LFxuXHRcdFx0XHRlbnRyeUlkIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdG1lZGlhU2VydmVySW5kZXggOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhRW50cnlTZXJ2ZXJOb2RlVHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhRW50cnlTZXJ2ZXJOb2RlVHlwZScgfSxcblx0XHRcdFx0bGl2ZUVudHJ5U3RhdHVzIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUVudHJ5U2VydmVyTm9kZVN0YXR1cywgc3ViVHlwZSA6ICdLYWx0dXJhRW50cnlTZXJ2ZXJOb2RlU3RhdHVzJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG4iXX0=
