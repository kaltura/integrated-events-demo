"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaEntryContextDataResult = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaString_1 = require("./KalturaString");
var KalturaRuleAction_1 = require("./KalturaRuleAction");
var KalturaFlavorAsset_1 = require("./KalturaFlavorAsset");
var KalturaPluginData_1 = require("./KalturaPluginData");
var KalturaContextDataResult_1 = require("./KalturaContextDataResult");
var KalturaEntryContextDataResult = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaEntryContextDataResult, _super);
    function KalturaEntryContextDataResult(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.accessControlMessages === 'undefined')
            _this.accessControlMessages = [];
        if (typeof _this.accessControlActions === 'undefined')
            _this.accessControlActions = [];
        if (typeof _this.flavorAssets === 'undefined')
            _this.flavorAssets = [];
        return _this;
    }
    KalturaEntryContextDataResult.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaEntryContextDataResult' },
            isSiteRestricted: { type: 'b' },
            isCountryRestricted: { type: 'b' },
            isSessionRestricted: { type: 'b' },
            isIpAddressRestricted: { type: 'b' },
            isUserAgentRestricted: { type: 'b' },
            previewLength: { type: 'n' },
            isScheduledNow: { type: 'b' },
            isAdmin: { type: 'b' },
            streamerType: { type: 's' },
            mediaProtocol: { type: 's' },
            storageProfilesXML: { type: 's' },
            accessControlMessages: { type: 'a', subTypeConstructor: KalturaString_1.KalturaString, subType: 'KalturaString' },
            accessControlActions: { type: 'a', subTypeConstructor: KalturaRuleAction_1.KalturaRuleAction, subType: 'KalturaRuleAction' },
            flavorAssets: { type: 'a', subTypeConstructor: KalturaFlavorAsset_1.KalturaFlavorAsset, subType: 'KalturaFlavorAsset' },
            msDuration: { type: 'n' },
            pluginData: { type: 'm', subTypeConstructor: KalturaPluginData_1.KalturaPluginData, subType: 'KalturaPluginData' }
        });
        return result;
    };
    return KalturaEntryContextDataResult;
}(KalturaContextDataResult_1.KalturaContextDataResult));
exports.KalturaEntryContextDataResult = KalturaEntryContextDataResult;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaEntryContextDataResult', KalturaEntryContextDataResult);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRW50cnlDb250ZXh0RGF0YVJlc3VsdC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELGlEQUFnRDtBQUNoRCx5REFBd0Q7QUFDeEQsMkRBQTBEO0FBQzFELHlEQUF3RDtBQUN4RCx1RUFBb0c7QUFzQnBHO0lBQW1ELHlEQUF3QjtJQW1CdkUsdUNBQVksSUFBeUM7UUFBckQsWUFFSSxrQkFBTSxJQUFJLENBQUMsU0FJZDtRQUhHLElBQUksT0FBTyxLQUFJLENBQUMscUJBQXFCLEtBQUssV0FBVztZQUFFLEtBQUksQ0FBQyxxQkFBcUIsR0FBRyxFQUFFLENBQUM7UUFDN0YsSUFBSSxPQUFPLEtBQUksQ0FBQyxvQkFBb0IsS0FBSyxXQUFXO1lBQUUsS0FBSSxDQUFDLG9CQUFvQixHQUFHLEVBQUUsQ0FBQztRQUNyRixJQUFJLE9BQU8sS0FBSSxDQUFDLFlBQVksS0FBSyxXQUFXO1lBQUUsS0FBSSxDQUFDLFlBQVksR0FBRyxFQUFFLENBQUM7O0lBQ25FLENBQUM7SUFFUyxvREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRywrQkFBK0IsRUFBRTtZQUNsRixnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDakMsbUJBQW1CLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3BDLG1CQUFtQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNwQyxxQkFBcUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdEMscUJBQXFCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3RDLGFBQWEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDOUIsY0FBYyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMvQixPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3hCLFlBQVksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDN0IsYUFBYSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM5QixrQkFBa0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDbkMscUJBQXFCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLDZCQUFhLEVBQUUsT0FBTyxFQUFHLGVBQWUsRUFBRTtZQUNyRyxvQkFBb0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcscUNBQWlCLEVBQUUsT0FBTyxFQUFHLG1CQUFtQixFQUFFO1lBQzVHLFlBQVksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsdUNBQWtCLEVBQUUsT0FBTyxFQUFHLG9CQUFvQixFQUFFO1lBQ3RHLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDM0IsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxxQ0FBaUIsRUFBRSxPQUFPLEVBQUcsbUJBQW1CLEVBQUU7U0FDekYsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLG9DQUFDO0FBQUQsQ0F0REEsQUFzREMsQ0F0RGtELG1EQUF3QixHQXNEMUU7QUF0RFksc0VBQTZCO0FBd0QxQywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsK0JBQStCLEVBQUMsNkJBQTZCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYUVudHJ5Q29udGV4dERhdGFSZXN1bHQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhU3RyaW5nIH0gZnJvbSAnLi9LYWx0dXJhU3RyaW5nJztcbmltcG9ydCB7IEthbHR1cmFSdWxlQWN0aW9uIH0gZnJvbSAnLi9LYWx0dXJhUnVsZUFjdGlvbic7XG5pbXBvcnQgeyBLYWx0dXJhRmxhdm9yQXNzZXQgfSBmcm9tICcuL0thbHR1cmFGbGF2b3JBc3NldCc7XG5pbXBvcnQgeyBLYWx0dXJhUGx1Z2luRGF0YSB9IGZyb20gJy4vS2FsdHVyYVBsdWdpbkRhdGEnO1xuaW1wb3J0IHsgS2FsdHVyYUNvbnRleHREYXRhUmVzdWx0LCBLYWx0dXJhQ29udGV4dERhdGFSZXN1bHRBcmdzIH0gZnJvbSAnLi9LYWx0dXJhQ29udGV4dERhdGFSZXN1bHQnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFFbnRyeUNvbnRleHREYXRhUmVzdWx0QXJncyAgZXh0ZW5kcyBLYWx0dXJhQ29udGV4dERhdGFSZXN1bHRBcmdzIHtcbiAgICBpc1NpdGVSZXN0cmljdGVkPyA6IGJvb2xlYW47XG5cdGlzQ291bnRyeVJlc3RyaWN0ZWQ/IDogYm9vbGVhbjtcblx0aXNTZXNzaW9uUmVzdHJpY3RlZD8gOiBib29sZWFuO1xuXHRpc0lwQWRkcmVzc1Jlc3RyaWN0ZWQ/IDogYm9vbGVhbjtcblx0aXNVc2VyQWdlbnRSZXN0cmljdGVkPyA6IGJvb2xlYW47XG5cdHByZXZpZXdMZW5ndGg/IDogbnVtYmVyO1xuXHRpc1NjaGVkdWxlZE5vdz8gOiBib29sZWFuO1xuXHRpc0FkbWluPyA6IGJvb2xlYW47XG5cdHN0cmVhbWVyVHlwZT8gOiBzdHJpbmc7XG5cdG1lZGlhUHJvdG9jb2w/IDogc3RyaW5nO1xuXHRzdG9yYWdlUHJvZmlsZXNYTUw/IDogc3RyaW5nO1xuXHRhY2Nlc3NDb250cm9sTWVzc2FnZXM/IDogS2FsdHVyYVN0cmluZ1tdO1xuXHRhY2Nlc3NDb250cm9sQWN0aW9ucz8gOiBLYWx0dXJhUnVsZUFjdGlvbltdO1xuXHRmbGF2b3JBc3NldHM/IDogS2FsdHVyYUZsYXZvckFzc2V0W107XG5cdG1zRHVyYXRpb24/IDogbnVtYmVyO1xuXHRwbHVnaW5EYXRhPyA6IHsgW2tleSA6IHN0cmluZ10gOiBLYWx0dXJhUGx1Z2luRGF0YX07XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFFbnRyeUNvbnRleHREYXRhUmVzdWx0IGV4dGVuZHMgS2FsdHVyYUNvbnRleHREYXRhUmVzdWx0IHtcblxuICAgIGlzU2l0ZVJlc3RyaWN0ZWQgOiBib29sZWFuO1xuXHRpc0NvdW50cnlSZXN0cmljdGVkIDogYm9vbGVhbjtcblx0aXNTZXNzaW9uUmVzdHJpY3RlZCA6IGJvb2xlYW47XG5cdGlzSXBBZGRyZXNzUmVzdHJpY3RlZCA6IGJvb2xlYW47XG5cdGlzVXNlckFnZW50UmVzdHJpY3RlZCA6IGJvb2xlYW47XG5cdHByZXZpZXdMZW5ndGggOiBudW1iZXI7XG5cdGlzU2NoZWR1bGVkTm93IDogYm9vbGVhbjtcblx0aXNBZG1pbiA6IGJvb2xlYW47XG5cdHN0cmVhbWVyVHlwZSA6IHN0cmluZztcblx0bWVkaWFQcm90b2NvbCA6IHN0cmluZztcblx0c3RvcmFnZVByb2ZpbGVzWE1MIDogc3RyaW5nO1xuXHRhY2Nlc3NDb250cm9sTWVzc2FnZXMgOiBLYWx0dXJhU3RyaW5nW107XG5cdGFjY2Vzc0NvbnRyb2xBY3Rpb25zIDogS2FsdHVyYVJ1bGVBY3Rpb25bXTtcblx0Zmxhdm9yQXNzZXRzIDogS2FsdHVyYUZsYXZvckFzc2V0W107XG5cdG1zRHVyYXRpb24gOiBudW1iZXI7XG5cdHBsdWdpbkRhdGEgOiB7IFtrZXkgOiBzdHJpbmddIDogS2FsdHVyYVBsdWdpbkRhdGF9O1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhRW50cnlDb250ZXh0RGF0YVJlc3VsdEFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmFjY2Vzc0NvbnRyb2xNZXNzYWdlcyA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMuYWNjZXNzQ29udHJvbE1lc3NhZ2VzID0gW107XG5cdFx0aWYgKHR5cGVvZiB0aGlzLmFjY2Vzc0NvbnRyb2xBY3Rpb25zID09PSAndW5kZWZpbmVkJykgdGhpcy5hY2Nlc3NDb250cm9sQWN0aW9ucyA9IFtdO1xuXHRcdGlmICh0eXBlb2YgdGhpcy5mbGF2b3JBc3NldHMgPT09ICd1bmRlZmluZWQnKSB0aGlzLmZsYXZvckFzc2V0cyA9IFtdO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFFbnRyeUNvbnRleHREYXRhUmVzdWx0JyB9LFxuXHRcdFx0XHRpc1NpdGVSZXN0cmljdGVkIDogeyB0eXBlIDogJ2InIH0sXG5cdFx0XHRcdGlzQ291bnRyeVJlc3RyaWN0ZWQgOiB7IHR5cGUgOiAnYicgfSxcblx0XHRcdFx0aXNTZXNzaW9uUmVzdHJpY3RlZCA6IHsgdHlwZSA6ICdiJyB9LFxuXHRcdFx0XHRpc0lwQWRkcmVzc1Jlc3RyaWN0ZWQgOiB7IHR5cGUgOiAnYicgfSxcblx0XHRcdFx0aXNVc2VyQWdlbnRSZXN0cmljdGVkIDogeyB0eXBlIDogJ2InIH0sXG5cdFx0XHRcdHByZXZpZXdMZW5ndGggOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0aXNTY2hlZHVsZWROb3cgOiB7IHR5cGUgOiAnYicgfSxcblx0XHRcdFx0aXNBZG1pbiA6IHsgdHlwZSA6ICdiJyB9LFxuXHRcdFx0XHRzdHJlYW1lclR5cGUgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0bWVkaWFQcm90b2NvbCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRzdG9yYWdlUHJvZmlsZXNYTUwgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0YWNjZXNzQ29udHJvbE1lc3NhZ2VzIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhU3RyaW5nLCBzdWJUeXBlIDogJ0thbHR1cmFTdHJpbmcnIH0sXG5cdFx0XHRcdGFjY2Vzc0NvbnRyb2xBY3Rpb25zIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhUnVsZUFjdGlvbiwgc3ViVHlwZSA6ICdLYWx0dXJhUnVsZUFjdGlvbicgfSxcblx0XHRcdFx0Zmxhdm9yQXNzZXRzIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhRmxhdm9yQXNzZXQsIHN1YlR5cGUgOiAnS2FsdHVyYUZsYXZvckFzc2V0JyB9LFxuXHRcdFx0XHRtc0R1cmF0aW9uIDogeyB0eXBlIDogJ24nIH0sXG5cdFx0XHRcdHBsdWdpbkRhdGEgOiB7IHR5cGUgOiAnbScsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFQbHVnaW5EYXRhLCBzdWJUeXBlIDogJ0thbHR1cmFQbHVnaW5EYXRhJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUVudHJ5Q29udGV4dERhdGFSZXN1bHQnLEthbHR1cmFFbnRyeUNvbnRleHREYXRhUmVzdWx0KTtcbiJdfQ==
