"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaESearchNestedOperator = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaESearchOperatorType_1 = require("./KalturaESearchOperatorType");
var KalturaESearchEntryNestedBaseItem_1 = require("./KalturaESearchEntryNestedBaseItem");
var KalturaESearchNestedOperator = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaESearchNestedOperator, _super);
    function KalturaESearchNestedOperator(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.searchItems === 'undefined')
            _this.searchItems = [];
        return _this;
    }
    KalturaESearchNestedOperator.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaESearchNestedOperator' },
            operator: { type: 'en', subTypeConstructor: KalturaESearchOperatorType_1.KalturaESearchOperatorType, subType: 'KalturaESearchOperatorType' },
            searchItems: { type: 'a', subTypeConstructor: KalturaESearchEntryNestedBaseItem_1.KalturaESearchEntryNestedBaseItem, subType: 'KalturaESearchEntryNestedBaseItem' }
        });
        return result;
    };
    return KalturaESearchNestedOperator;
}(KalturaESearchEntryNestedBaseItem_1.KalturaESearchEntryNestedBaseItem));
exports.KalturaESearchNestedOperator = KalturaESearchNestedOperator;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaESearchNestedOperator', KalturaESearchNestedOperator);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRVNlYXJjaE5lc3RlZE9wZXJhdG9yLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsMkVBQTBFO0FBQzFFLHlGQUErSDtBQVEvSDtJQUFrRCx3REFBaUM7SUFLL0Usc0NBQVksSUFBd0M7UUFBcEQsWUFFSSxrQkFBTSxJQUFJLENBQUMsU0FFZDtRQURHLElBQUksT0FBTyxLQUFJLENBQUMsV0FBVyxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsV0FBVyxHQUFHLEVBQUUsQ0FBQzs7SUFDdkUsQ0FBQztJQUVTLG1EQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDhCQUE4QixFQUFFO1lBQ2pGLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsdURBQTBCLEVBQUUsT0FBTyxFQUFHLDRCQUE0QixFQUFFO1lBQ25ILFdBQVcsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcscUVBQWlDLEVBQUUsT0FBTyxFQUFHLG1DQUFtQyxFQUFFO1NBQzFILENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxtQ0FBQztBQUFELENBeEJBLEFBd0JDLENBeEJpRCxxRUFBaUMsR0F3QmxGO0FBeEJZLG9FQUE0QjtBQTBCekMsMkNBQW1CLENBQUMsWUFBWSxDQUFDLDhCQUE4QixFQUFDLDRCQUE0QixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFFU2VhcmNoTmVzdGVkT3BlcmF0b3IuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhRVNlYXJjaE9wZXJhdG9yVHlwZSB9IGZyb20gJy4vS2FsdHVyYUVTZWFyY2hPcGVyYXRvclR5cGUnO1xuaW1wb3J0IHsgS2FsdHVyYUVTZWFyY2hFbnRyeU5lc3RlZEJhc2VJdGVtLCBLYWx0dXJhRVNlYXJjaEVudHJ5TmVzdGVkQmFzZUl0ZW1BcmdzIH0gZnJvbSAnLi9LYWx0dXJhRVNlYXJjaEVudHJ5TmVzdGVkQmFzZUl0ZW0nO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFFU2VhcmNoTmVzdGVkT3BlcmF0b3JBcmdzICBleHRlbmRzIEthbHR1cmFFU2VhcmNoRW50cnlOZXN0ZWRCYXNlSXRlbUFyZ3Mge1xuICAgIG9wZXJhdG9yPyA6IEthbHR1cmFFU2VhcmNoT3BlcmF0b3JUeXBlO1xuXHRzZWFyY2hJdGVtcz8gOiBLYWx0dXJhRVNlYXJjaEVudHJ5TmVzdGVkQmFzZUl0ZW1bXTtcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYUVTZWFyY2hOZXN0ZWRPcGVyYXRvciBleHRlbmRzIEthbHR1cmFFU2VhcmNoRW50cnlOZXN0ZWRCYXNlSXRlbSB7XG5cbiAgICBvcGVyYXRvciA6IEthbHR1cmFFU2VhcmNoT3BlcmF0b3JUeXBlO1xuXHRzZWFyY2hJdGVtcyA6IEthbHR1cmFFU2VhcmNoRW50cnlOZXN0ZWRCYXNlSXRlbVtdO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhRVNlYXJjaE5lc3RlZE9wZXJhdG9yQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgICAgICBpZiAodHlwZW9mIHRoaXMuc2VhcmNoSXRlbXMgPT09ICd1bmRlZmluZWQnKSB0aGlzLnNlYXJjaEl0ZW1zID0gW107XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYUVTZWFyY2hOZXN0ZWRPcGVyYXRvcicgfSxcblx0XHRcdFx0b3BlcmF0b3IgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhRVNlYXJjaE9wZXJhdG9yVHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhRVNlYXJjaE9wZXJhdG9yVHlwZScgfSxcblx0XHRcdFx0c2VhcmNoSXRlbXMgOiB7IHR5cGUgOiAnYScsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFFU2VhcmNoRW50cnlOZXN0ZWRCYXNlSXRlbSwgc3ViVHlwZSA6ICdLYWx0dXJhRVNlYXJjaEVudHJ5TmVzdGVkQmFzZUl0ZW0nIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbkthbHR1cmFUeXBlc0ZhY3RvcnkucmVnaXN0ZXJUeXBlKCdLYWx0dXJhRVNlYXJjaE5lc3RlZE9wZXJhdG9yJyxLYWx0dXJhRVNlYXJjaE5lc3RlZE9wZXJhdG9yKTtcbiJdfQ==
