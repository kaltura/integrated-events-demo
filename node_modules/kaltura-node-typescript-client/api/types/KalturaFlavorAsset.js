"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaFlavorAsset = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaFlavorAssetStatus_1 = require("./KalturaFlavorAssetStatus");
var KalturaLanguage_1 = require("./KalturaLanguage");
var KalturaNullableBoolean_1 = require("./KalturaNullableBoolean");
var KalturaAsset_1 = require("./KalturaAsset");
var KalturaFlavorAsset = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaFlavorAsset, _super);
    function KalturaFlavorAsset(data) {
        return _super.call(this, data) || this;
    }
    KalturaFlavorAsset.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaFlavorAsset' },
            flavorParamsId: { type: 'n' },
            width: { type: 'n', readOnly: true },
            height: { type: 'n', readOnly: true },
            bitrate: { type: 'n', readOnly: true },
            frameRate: { type: 'n', readOnly: true },
            isOriginal: { type: 'b', readOnly: true },
            isWeb: { type: 'b', readOnly: true },
            containerFormat: { type: 's', readOnly: true },
            videoCodecId: { type: 's', readOnly: true },
            status: { type: 'en', readOnly: true, subTypeConstructor: KalturaFlavorAssetStatus_1.KalturaFlavorAssetStatus, subType: 'KalturaFlavorAssetStatus' },
            language: { type: 'es', subTypeConstructor: KalturaLanguage_1.KalturaLanguage, subType: 'KalturaLanguage' },
            label: { type: 's' },
            isDefault: { type: 'en', subTypeConstructor: KalturaNullableBoolean_1.KalturaNullableBoolean, subType: 'KalturaNullableBoolean' }
        });
        return result;
    };
    return KalturaFlavorAsset;
}(KalturaAsset_1.KalturaAsset));
exports.KalturaFlavorAsset = KalturaFlavorAsset;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaFlavorAsset', KalturaFlavorAsset);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRmxhdm9yQXNzZXQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCx1RUFBc0U7QUFDdEUscURBQW9EO0FBQ3BELG1FQUFrRTtBQUNsRSwrQ0FBZ0U7QUFVaEU7SUFBd0MsOENBQVk7SUFnQmhELDRCQUFZLElBQThCO2VBRXRDLGtCQUFNLElBQUksQ0FBQztJQUNmLENBQUM7SUFFUyx5Q0FBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxvQkFBb0IsRUFBRTtZQUN2RSxjQUFjLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQy9CLEtBQUssRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUN2QyxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDeEMsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQ3pDLFNBQVMsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUMzQyxVQUFVLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDNUMsS0FBSyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFO1lBQ3ZDLGVBQWUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsUUFBUSxFQUFHLElBQUksRUFBRTtZQUNqRCxZQUFZLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLFFBQVEsRUFBRyxJQUFJLEVBQUU7WUFDOUMsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxRQUFRLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLG1EQUF3QixFQUFFLE9BQU8sRUFBRywwQkFBMEIsRUFBRTtZQUM5SCxRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLGlDQUFlLEVBQUUsT0FBTyxFQUFHLGlCQUFpQixFQUFFO1lBQzdGLEtBQUssRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdEIsU0FBUyxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRywrQ0FBc0IsRUFBRSxPQUFPLEVBQUcsd0JBQXdCLEVBQUU7U0FDbkcsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHlCQUFDO0FBQUQsQ0E3Q0EsQUE2Q0MsQ0E3Q3VDLDJCQUFZLEdBNkNuRDtBQTdDWSxnREFBa0I7QUErQy9CLDJDQUFtQixDQUFDLFlBQVksQ0FBQyxvQkFBb0IsRUFBQyxrQkFBa0IsQ0FBQyxDQUFDIiwiZmlsZSI6ImFwaS90eXBlcy9LYWx0dXJhRmxhdm9yQXNzZXQuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhRmxhdm9yQXNzZXRTdGF0dXMgfSBmcm9tICcuL0thbHR1cmFGbGF2b3JBc3NldFN0YXR1cyc7XG5pbXBvcnQgeyBLYWx0dXJhTGFuZ3VhZ2UgfSBmcm9tICcuL0thbHR1cmFMYW5ndWFnZSc7XG5pbXBvcnQgeyBLYWx0dXJhTnVsbGFibGVCb29sZWFuIH0gZnJvbSAnLi9LYWx0dXJhTnVsbGFibGVCb29sZWFuJztcbmltcG9ydCB7IEthbHR1cmFBc3NldCwgS2FsdHVyYUFzc2V0QXJncyB9IGZyb20gJy4vS2FsdHVyYUFzc2V0JztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhRmxhdm9yQXNzZXRBcmdzICBleHRlbmRzIEthbHR1cmFBc3NldEFyZ3Mge1xuICAgIGZsYXZvclBhcmFtc0lkPyA6IG51bWJlcjtcblx0bGFuZ3VhZ2U/IDogS2FsdHVyYUxhbmd1YWdlO1xuXHRsYWJlbD8gOiBzdHJpbmc7XG5cdGlzRGVmYXVsdD8gOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhRmxhdm9yQXNzZXQgZXh0ZW5kcyBLYWx0dXJhQXNzZXQge1xuXG4gICAgZmxhdm9yUGFyYW1zSWQgOiBudW1iZXI7XG5cdHJlYWRvbmx5IHdpZHRoIDogbnVtYmVyO1xuXHRyZWFkb25seSBoZWlnaHQgOiBudW1iZXI7XG5cdHJlYWRvbmx5IGJpdHJhdGUgOiBudW1iZXI7XG5cdHJlYWRvbmx5IGZyYW1lUmF0ZSA6IG51bWJlcjtcblx0cmVhZG9ubHkgaXNPcmlnaW5hbCA6IGJvb2xlYW47XG5cdHJlYWRvbmx5IGlzV2ViIDogYm9vbGVhbjtcblx0cmVhZG9ubHkgY29udGFpbmVyRm9ybWF0IDogc3RyaW5nO1xuXHRyZWFkb25seSB2aWRlb0NvZGVjSWQgOiBzdHJpbmc7XG5cdHJlYWRvbmx5IHN0YXR1cyA6IEthbHR1cmFGbGF2b3JBc3NldFN0YXR1cztcblx0bGFuZ3VhZ2UgOiBLYWx0dXJhTGFuZ3VhZ2U7XG5cdGxhYmVsIDogc3RyaW5nO1xuXHRpc0RlZmF1bHQgOiBLYWx0dXJhTnVsbGFibGVCb29sZWFuO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhRmxhdm9yQXNzZXRBcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYUZsYXZvckFzc2V0JyB9LFxuXHRcdFx0XHRmbGF2b3JQYXJhbXNJZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHR3aWR0aCA6IHsgdHlwZSA6ICduJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdGhlaWdodCA6IHsgdHlwZSA6ICduJywgcmVhZE9ubHkgOiB0cnVlIH0sXG5cdFx0XHRcdGJpdHJhdGUgOiB7IHR5cGUgOiAnbicsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRmcmFtZVJhdGUgOiB7IHR5cGUgOiAnbicsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRpc09yaWdpbmFsIDogeyB0eXBlIDogJ2InLCByZWFkT25seSA6IHRydWUgfSxcblx0XHRcdFx0aXNXZWIgOiB7IHR5cGUgOiAnYicsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRjb250YWluZXJGb3JtYXQgOiB7IHR5cGUgOiAncycsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHR2aWRlb0NvZGVjSWQgOiB7IHR5cGUgOiAncycsIHJlYWRPbmx5IDogdHJ1ZSB9LFxuXHRcdFx0XHRzdGF0dXMgOiB7IHR5cGUgOiAnZW4nLCByZWFkT25seSA6IHRydWUsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFGbGF2b3JBc3NldFN0YXR1cywgc3ViVHlwZSA6ICdLYWx0dXJhRmxhdm9yQXNzZXRTdGF0dXMnIH0sXG5cdFx0XHRcdGxhbmd1YWdlIDogeyB0eXBlIDogJ2VzJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUxhbmd1YWdlLCBzdWJUeXBlIDogJ0thbHR1cmFMYW5ndWFnZScgfSxcblx0XHRcdFx0bGFiZWwgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0aXNEZWZhdWx0IDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYU51bGxhYmxlQm9vbGVhbiwgc3ViVHlwZSA6ICdLYWx0dXJhTnVsbGFibGVCb29sZWFuJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUZsYXZvckFzc2V0JyxLYWx0dXJhRmxhdm9yQXNzZXQpO1xuIl19
