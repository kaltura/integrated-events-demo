"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaDropFolderContentProcessorJobData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaDropFolderContentFileHandlerMatchPolicy_1 = require("./KalturaDropFolderContentFileHandlerMatchPolicy");
var KalturaJobData_1 = require("./KalturaJobData");
var KalturaDropFolderContentProcessorJobData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaDropFolderContentProcessorJobData, _super);
    function KalturaDropFolderContentProcessorJobData(data) {
        return _super.call(this, data) || this;
    }
    KalturaDropFolderContentProcessorJobData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaDropFolderContentProcessorJobData' },
            dropFolderId: { type: 'n' },
            dropFolderFileIds: { type: 's' },
            parsedSlug: { type: 's' },
            contentMatchPolicy: { type: 'en', subTypeConstructor: KalturaDropFolderContentFileHandlerMatchPolicy_1.KalturaDropFolderContentFileHandlerMatchPolicy, subType: 'KalturaDropFolderContentFileHandlerMatchPolicy' },
            conversionProfileId: { type: 'n' },
            parsedUserId: { type: 's' }
        });
        return result;
    };
    return KalturaDropFolderContentProcessorJobData;
}(KalturaJobData_1.KalturaJobData));
exports.KalturaDropFolderContentProcessorJobData = KalturaDropFolderContentProcessorJobData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaDropFolderContentProcessorJobData', KalturaDropFolderContentProcessorJobData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRHJvcEZvbGRlckNvbnRlbnRQcm9jZXNzb3JKb2JEYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QsbUhBQWtIO0FBQ2xILG1EQUFzRTtBQVl0RTtJQUE4RCxvRUFBYztJQVN4RSxrREFBWSxJQUFvRDtlQUU1RCxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMsK0RBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsMENBQTBDLEVBQUU7WUFDN0YsWUFBWSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUM3QixpQkFBaUIsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDbEMsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMzQixrQkFBa0IsRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsK0ZBQThDLEVBQUUsT0FBTyxFQUFHLGdEQUFnRCxFQUFFO1lBQ3JLLG1CQUFtQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNwQyxZQUFZLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ3BCLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCwrQ0FBQztBQUFELENBL0JBLEFBK0JDLENBL0I2RCwrQkFBYyxHQStCM0U7QUEvQlksNEZBQXdDO0FBaUNyRCwyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsMENBQTBDLEVBQUMsd0NBQXdDLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYURyb3BGb2xkZXJDb250ZW50UHJvY2Vzc29ySm9iRGF0YS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFEcm9wRm9sZGVyQ29udGVudEZpbGVIYW5kbGVyTWF0Y2hQb2xpY3kgfSBmcm9tICcuL0thbHR1cmFEcm9wRm9sZGVyQ29udGVudEZpbGVIYW5kbGVyTWF0Y2hQb2xpY3knO1xuaW1wb3J0IHsgS2FsdHVyYUpvYkRhdGEsIEthbHR1cmFKb2JEYXRhQXJncyB9IGZyb20gJy4vS2FsdHVyYUpvYkRhdGEnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFEcm9wRm9sZGVyQ29udGVudFByb2Nlc3NvckpvYkRhdGFBcmdzICBleHRlbmRzIEthbHR1cmFKb2JEYXRhQXJncyB7XG4gICAgZHJvcEZvbGRlcklkPyA6IG51bWJlcjtcblx0ZHJvcEZvbGRlckZpbGVJZHM/IDogc3RyaW5nO1xuXHRwYXJzZWRTbHVnPyA6IHN0cmluZztcblx0Y29udGVudE1hdGNoUG9saWN5PyA6IEthbHR1cmFEcm9wRm9sZGVyQ29udGVudEZpbGVIYW5kbGVyTWF0Y2hQb2xpY3k7XG5cdGNvbnZlcnNpb25Qcm9maWxlSWQ/IDogbnVtYmVyO1xuXHRwYXJzZWRVc2VySWQ/IDogc3RyaW5nO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhRHJvcEZvbGRlckNvbnRlbnRQcm9jZXNzb3JKb2JEYXRhIGV4dGVuZHMgS2FsdHVyYUpvYkRhdGEge1xuXG4gICAgZHJvcEZvbGRlcklkIDogbnVtYmVyO1xuXHRkcm9wRm9sZGVyRmlsZUlkcyA6IHN0cmluZztcblx0cGFyc2VkU2x1ZyA6IHN0cmluZztcblx0Y29udGVudE1hdGNoUG9saWN5IDogS2FsdHVyYURyb3BGb2xkZXJDb250ZW50RmlsZUhhbmRsZXJNYXRjaFBvbGljeTtcblx0Y29udmVyc2lvblByb2ZpbGVJZCA6IG51bWJlcjtcblx0cGFyc2VkVXNlcklkIDogc3RyaW5nO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YT8gOiBLYWx0dXJhRHJvcEZvbGRlckNvbnRlbnRQcm9jZXNzb3JKb2JEYXRhQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFEcm9wRm9sZGVyQ29udGVudFByb2Nlc3NvckpvYkRhdGEnIH0sXG5cdFx0XHRcdGRyb3BGb2xkZXJJZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRkcm9wRm9sZGVyRmlsZUlkcyA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRwYXJzZWRTbHVnIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGNvbnRlbnRNYXRjaFBvbGljeSA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFEcm9wRm9sZGVyQ29udGVudEZpbGVIYW5kbGVyTWF0Y2hQb2xpY3ksIHN1YlR5cGUgOiAnS2FsdHVyYURyb3BGb2xkZXJDb250ZW50RmlsZUhhbmRsZXJNYXRjaFBvbGljeScgfSxcblx0XHRcdFx0Y29udmVyc2lvblByb2ZpbGVJZCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRwYXJzZWRVc2VySWQgOiB7IHR5cGUgOiAncycgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFEcm9wRm9sZGVyQ29udGVudFByb2Nlc3NvckpvYkRhdGEnLEthbHR1cmFEcm9wRm9sZGVyQ29udGVudFByb2Nlc3NvckpvYkRhdGEpO1xuIl19
