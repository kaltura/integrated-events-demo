"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaESearchHistoryFilter = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaESearchRange_1 = require("./KalturaESearchRange");
var KalturaESearchHistoryAggregationItem_1 = require("./KalturaESearchHistoryAggregationItem");
var KalturaESearchBaseFilter_1 = require("./KalturaESearchBaseFilter");
var KalturaESearchHistoryFilter = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaESearchHistoryFilter, _super);
    function KalturaESearchHistoryFilter(data) {
        return _super.call(this, data) || this;
    }
    KalturaESearchHistoryFilter.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaESearchHistoryFilter' },
            searchTermStartsWith: { type: 's' },
            searchedObjectIn: { type: 's' },
            timestampRange: { type: 'o', subTypeConstructor: KalturaESearchRange_1.KalturaESearchRange, subType: 'KalturaESearchRange' },
            aggregation: { type: 'o', subTypeConstructor: KalturaESearchHistoryAggregationItem_1.KalturaESearchHistoryAggregationItem, subType: 'KalturaESearchHistoryAggregationItem' }
        });
        return result;
    };
    return KalturaESearchHistoryFilter;
}(KalturaESearchBaseFilter_1.KalturaESearchBaseFilter));
exports.KalturaESearchHistoryFilter = KalturaESearchHistoryFilter;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaESearchHistoryFilter', KalturaESearchHistoryFilter);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRVNlYXJjaEhpc3RvcnlGaWx0ZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCw2REFBNEQ7QUFDNUQsK0ZBQThGO0FBQzlGLHVFQUFvRztBQVVwRztJQUFpRCx1REFBd0I7SUFPckUscUNBQVksSUFBdUM7ZUFFL0Msa0JBQU0sSUFBSSxDQUFDO0lBQ2YsQ0FBQztJQUVTLGtEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDZCQUE2QixFQUFFO1lBQ2hGLG9CQUFvQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNyQyxnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDakMsY0FBYyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyx5Q0FBbUIsRUFBRSxPQUFPLEVBQUcscUJBQXFCLEVBQUU7WUFDMUcsV0FBVyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRywyRUFBb0MsRUFBRSxPQUFPLEVBQUcsc0NBQXNDLEVBQUU7U0FDaEksQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLGtDQUFDO0FBQUQsQ0EzQkEsQUEyQkMsQ0EzQmdELG1EQUF3QixHQTJCeEU7QUEzQlksa0VBQTJCO0FBNkJ4QywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsNkJBQTZCLEVBQUMsMkJBQTJCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYUVTZWFyY2hIaXN0b3J5RmlsdGVyLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFUeXBlc0ZhY3RvcnkgfSBmcm9tICcuLi9rYWx0dXJhLXR5cGVzLWZhY3RvcnknO1xuaW1wb3J0IHsgS2FsdHVyYUVTZWFyY2hSYW5nZSB9IGZyb20gJy4vS2FsdHVyYUVTZWFyY2hSYW5nZSc7XG5pbXBvcnQgeyBLYWx0dXJhRVNlYXJjaEhpc3RvcnlBZ2dyZWdhdGlvbkl0ZW0gfSBmcm9tICcuL0thbHR1cmFFU2VhcmNoSGlzdG9yeUFnZ3JlZ2F0aW9uSXRlbSc7XG5pbXBvcnQgeyBLYWx0dXJhRVNlYXJjaEJhc2VGaWx0ZXIsIEthbHR1cmFFU2VhcmNoQmFzZUZpbHRlckFyZ3MgfSBmcm9tICcuL0thbHR1cmFFU2VhcmNoQmFzZUZpbHRlcic7XG5cbmV4cG9ydCBpbnRlcmZhY2UgS2FsdHVyYUVTZWFyY2hIaXN0b3J5RmlsdGVyQXJncyAgZXh0ZW5kcyBLYWx0dXJhRVNlYXJjaEJhc2VGaWx0ZXJBcmdzIHtcbiAgICBzZWFyY2hUZXJtU3RhcnRzV2l0aD8gOiBzdHJpbmc7XG5cdHNlYXJjaGVkT2JqZWN0SW4/IDogc3RyaW5nO1xuXHR0aW1lc3RhbXBSYW5nZT8gOiBLYWx0dXJhRVNlYXJjaFJhbmdlO1xuXHRhZ2dyZWdhdGlvbj8gOiBLYWx0dXJhRVNlYXJjaEhpc3RvcnlBZ2dyZWdhdGlvbkl0ZW07XG59XG5cblxuZXhwb3J0IGNsYXNzIEthbHR1cmFFU2VhcmNoSGlzdG9yeUZpbHRlciBleHRlbmRzIEthbHR1cmFFU2VhcmNoQmFzZUZpbHRlciB7XG5cbiAgICBzZWFyY2hUZXJtU3RhcnRzV2l0aCA6IHN0cmluZztcblx0c2VhcmNoZWRPYmplY3RJbiA6IHN0cmluZztcblx0dGltZXN0YW1wUmFuZ2UgOiBLYWx0dXJhRVNlYXJjaFJhbmdlO1xuXHRhZ2dyZWdhdGlvbiA6IEthbHR1cmFFU2VhcmNoSGlzdG9yeUFnZ3JlZ2F0aW9uSXRlbTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUVTZWFyY2hIaXN0b3J5RmlsdGVyQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFFU2VhcmNoSGlzdG9yeUZpbHRlcicgfSxcblx0XHRcdFx0c2VhcmNoVGVybVN0YXJ0c1dpdGggOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c2VhcmNoZWRPYmplY3RJbiA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHR0aW1lc3RhbXBSYW5nZSA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUVTZWFyY2hSYW5nZSwgc3ViVHlwZSA6ICdLYWx0dXJhRVNlYXJjaFJhbmdlJyB9LFxuXHRcdFx0XHRhZ2dyZWdhdGlvbiA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYUVTZWFyY2hIaXN0b3J5QWdncmVnYXRpb25JdGVtLCBzdWJUeXBlIDogJ0thbHR1cmFFU2VhcmNoSGlzdG9yeUFnZ3JlZ2F0aW9uSXRlbScgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFFU2VhcmNoSGlzdG9yeUZpbHRlcicsS2FsdHVyYUVTZWFyY2hIaXN0b3J5RmlsdGVyKTtcbiJdfQ==
