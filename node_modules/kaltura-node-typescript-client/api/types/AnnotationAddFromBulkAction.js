"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.AnnotationAddFromBulkAction = void 0;
var tslib_1 = require("tslib");
var KalturaCuePointListResponse_1 = require("./KalturaCuePointListResponse");
var kaltura_upload_request_1 = require("../kaltura-upload-request");
/**
 * Build request payload for service 'annotation' action 'addFromBulk'.
 *
 * Usage: Allows you to add multiple cue points objects by uploading XML that contains multiple cue point definitions
 *
 * Server response type:         KalturaCuePointListResponse
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaUploadRequest
 */
var AnnotationAddFromBulkAction = /** @class */ (function (_super) {
    tslib_1.__extends(AnnotationAddFromBulkAction, _super);
    function AnnotationAddFromBulkAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaCuePointListResponse', responseConstructor: KalturaCuePointListResponse_1.KalturaCuePointListResponse }) || this;
    }
    AnnotationAddFromBulkAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'annotation_annotation' },
            action: { type: 'c', default: 'addFromBulk' },
            fileData: { type: 'f' }
        });
        return result;
    };
    return AnnotationAddFromBulkAction;
}(kaltura_upload_request_1.KalturaUploadRequest));
exports.AnnotationAddFromBulkAction = AnnotationAddFromBulkAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9Bbm5vdGF0aW9uQWRkRnJvbUJ1bGtBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLDZFQUE0RTtBQUU1RSxvRUFBMkY7QUFNM0Y7Ozs7Ozs7OztHQVNHO0FBQ0g7SUFBaUQsdURBQWlEO0lBSTlGLHFDQUFZLElBQXNDO2VBRTlDLGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLDZCQUE2QixFQUFFLG1CQUFtQixFQUFHLHlEQUEyQixFQUFHLENBQUM7SUFDM0ksQ0FBQztJQUVTLGtEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHVCQUF1QixFQUFFO1lBQ3ZFLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLGFBQWEsRUFBRTtZQUNoRCxRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1NBQ2hCLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxrQ0FBQztBQUFELENBdEJBLEFBc0JDLENBdEJnRCw2Q0FBb0IsR0FzQnBFO0FBdEJZLGtFQUEyQiIsImZpbGUiOiJhcGkvdHlwZXMvQW5ub3RhdGlvbkFkZEZyb21CdWxrQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFDdWVQb2ludExpc3RSZXNwb25zZSB9IGZyb20gJy4vS2FsdHVyYUN1ZVBvaW50TGlzdFJlc3BvbnNlJztcblxuaW1wb3J0IHsgS2FsdHVyYVVwbG9hZFJlcXVlc3QsIEthbHR1cmFVcGxvYWRSZXF1ZXN0QXJncyB9IGZyb20gJy4uL2thbHR1cmEtdXBsb2FkLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEFubm90YXRpb25BZGRGcm9tQnVsa0FjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVVwbG9hZFJlcXVlc3RBcmdzIHtcbiAgICBmaWxlRGF0YSA6IEZpbGU7XG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICdhbm5vdGF0aW9uJyBhY3Rpb24gJ2FkZEZyb21CdWxrJy5cbiAqXG4gKiBVc2FnZTogQWxsb3dzIHlvdSB0byBhZGQgbXVsdGlwbGUgY3VlIHBvaW50cyBvYmplY3RzIGJ5IHVwbG9hZGluZyBYTUwgdGhhdCBjb250YWlucyBtdWx0aXBsZSBjdWUgcG9pbnQgZGVmaW5pdGlvbnNcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhQ3VlUG9pbnRMaXN0UmVzcG9uc2VcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVVwbG9hZFJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIEFubm90YXRpb25BZGRGcm9tQnVsa0FjdGlvbiBleHRlbmRzIEthbHR1cmFVcGxvYWRSZXF1ZXN0PEthbHR1cmFDdWVQb2ludExpc3RSZXNwb25zZT4ge1xuXG4gICAgZmlsZURhdGEgOiBGaWxlO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YSA6IEFubm90YXRpb25BZGRGcm9tQnVsa0FjdGlvbkFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhLCB7cmVzcG9uc2VUeXBlIDogJ28nLCByZXNwb25zZVN1YlR5cGUgOiAnS2FsdHVyYUN1ZVBvaW50TGlzdFJlc3BvbnNlJywgcmVzcG9uc2VDb25zdHJ1Y3RvciA6IEthbHR1cmFDdWVQb2ludExpc3RSZXNwb25zZSAgfSk7XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIHNlcnZpY2UgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnYW5ub3RhdGlvbl9hbm5vdGF0aW9uJyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnYWRkRnJvbUJ1bGsnIH0sXG5cdFx0XHRcdGZpbGVEYXRhIDogeyB0eXBlIDogJ2YnIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
