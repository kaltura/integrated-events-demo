"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.EmailIngestionProfileAddAction = void 0;
var tslib_1 = require("tslib");
var KalturaEmailIngestionProfile_1 = require("./KalturaEmailIngestionProfile");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'EmailIngestionProfile' action 'add'.
 *
 * Usage: EmailIngestionProfile Add action allows you to add a EmailIngestionProfile to Kaltura DB
 *
 * Server response type:         KalturaEmailIngestionProfile
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var EmailIngestionProfileAddAction = /** @class */ (function (_super) {
    tslib_1.__extends(EmailIngestionProfileAddAction, _super);
    function EmailIngestionProfileAddAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaEmailIngestionProfile', responseConstructor: KalturaEmailIngestionProfile_1.KalturaEmailIngestionProfile }) || this;
    }
    EmailIngestionProfileAddAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'emailingestionprofile' },
            action: { type: 'c', default: 'add' },
            EmailIP: { type: 'o', subTypeConstructor: KalturaEmailIngestionProfile_1.KalturaEmailIngestionProfile, subType: 'KalturaEmailIngestionProfile' }
        });
        return result;
    };
    return EmailIngestionProfileAddAction;
}(kaltura_request_1.KalturaRequest));
exports.EmailIngestionProfileAddAction = EmailIngestionProfileAddAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9FbWFpbEluZ2VzdGlvblByb2ZpbGVBZGRBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLCtFQUE4RTtBQUU5RSxzREFBd0U7QUFNeEU7Ozs7Ozs7OztHQVNHO0FBQ0g7SUFBb0QsMERBQTRDO0lBSTVGLHdDQUFZLElBQXlDO2VBRWpELGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLDhCQUE4QixFQUFFLG1CQUFtQixFQUFHLDJEQUE0QixFQUFHLENBQUM7SUFDN0ksQ0FBQztJQUVTLHFEQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLHVCQUF1QixFQUFFO1lBQ3ZFLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLEtBQUssRUFBRTtZQUN4QyxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLDJEQUE0QixFQUFFLE9BQU8sRUFBRyw4QkFBOEIsRUFBRTtTQUM1RyxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wscUNBQUM7QUFBRCxDQXRCQSxBQXNCQyxDQXRCbUQsZ0NBQWMsR0FzQmpFO0FBdEJZLHdFQUE4QiIsImZpbGUiOiJhcGkvdHlwZXMvRW1haWxJbmdlc3Rpb25Qcm9maWxlQWRkQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcbmltcG9ydCB7IEthbHR1cmFFbWFpbEluZ2VzdGlvblByb2ZpbGUgfSBmcm9tICcuL0thbHR1cmFFbWFpbEluZ2VzdGlvblByb2ZpbGUnO1xuXG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBFbWFpbEluZ2VzdGlvblByb2ZpbGVBZGRBY3Rpb25BcmdzICBleHRlbmRzIEthbHR1cmFSZXF1ZXN0QXJncyB7XG4gICAgRW1haWxJUCA6IEthbHR1cmFFbWFpbEluZ2VzdGlvblByb2ZpbGU7XG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICdFbWFpbEluZ2VzdGlvblByb2ZpbGUnIGFjdGlvbiAnYWRkJy5cbiAqXG4gKiBVc2FnZTogRW1haWxJbmdlc3Rpb25Qcm9maWxlIEFkZCBhY3Rpb24gYWxsb3dzIHlvdSB0byBhZGQgYSBFbWFpbEluZ2VzdGlvblByb2ZpbGUgdG8gS2FsdHVyYSBEQlxuICpcbiAqIFNlcnZlciByZXNwb25zZSB0eXBlOiAgICAgICAgIEthbHR1cmFFbWFpbEluZ2VzdGlvblByb2ZpbGVcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIEVtYWlsSW5nZXN0aW9uUHJvZmlsZUFkZEFjdGlvbiBleHRlbmRzIEthbHR1cmFSZXF1ZXN0PEthbHR1cmFFbWFpbEluZ2VzdGlvblByb2ZpbGU+IHtcblxuICAgIEVtYWlsSVAgOiBLYWx0dXJhRW1haWxJbmdlc3Rpb25Qcm9maWxlO1xuXG4gICAgY29uc3RydWN0b3IoZGF0YSA6IEVtYWlsSW5nZXN0aW9uUHJvZmlsZUFkZEFjdGlvbkFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhLCB7cmVzcG9uc2VUeXBlIDogJ28nLCByZXNwb25zZVN1YlR5cGUgOiAnS2FsdHVyYUVtYWlsSW5nZXN0aW9uUHJvZmlsZScsIHJlc3BvbnNlQ29uc3RydWN0b3IgOiBLYWx0dXJhRW1haWxJbmdlc3Rpb25Qcm9maWxlICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdlbWFpbGluZ2VzdGlvbnByb2ZpbGUnIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdhZGQnIH0sXG5cdFx0XHRcdEVtYWlsSVAgOiB7IHR5cGUgOiAnbycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFFbWFpbEluZ2VzdGlvblByb2ZpbGUsIHN1YlR5cGUgOiAnS2FsdHVyYUVtYWlsSW5nZXN0aW9uUHJvZmlsZScgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuIl19
