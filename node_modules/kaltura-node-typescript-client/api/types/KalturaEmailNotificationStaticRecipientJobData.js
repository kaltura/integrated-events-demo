"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaEmailNotificationStaticRecipientJobData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaKeyValue_1 = require("./KalturaKeyValue");
var KalturaEmailNotificationRecipientJobData_1 = require("./KalturaEmailNotificationRecipientJobData");
var KalturaEmailNotificationStaticRecipientJobData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaEmailNotificationStaticRecipientJobData, _super);
    function KalturaEmailNotificationStaticRecipientJobData(data) {
        var _this = _super.call(this, data) || this;
        if (typeof _this.emailRecipients === 'undefined')
            _this.emailRecipients = [];
        return _this;
    }
    KalturaEmailNotificationStaticRecipientJobData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaEmailNotificationStaticRecipientJobData' },
            emailRecipients: { type: 'a', subTypeConstructor: KalturaKeyValue_1.KalturaKeyValue, subType: 'KalturaKeyValue' }
        });
        return result;
    };
    return KalturaEmailNotificationStaticRecipientJobData;
}(KalturaEmailNotificationRecipientJobData_1.KalturaEmailNotificationRecipientJobData));
exports.KalturaEmailNotificationStaticRecipientJobData = KalturaEmailNotificationStaticRecipientJobData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaEmailNotificationStaticRecipientJobData', KalturaEmailNotificationStaticRecipientJobData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhRW1haWxOb3RpZmljYXRpb25TdGF0aWNSZWNpcGllbnRKb2JEYXRhLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFFQSxrRUFBK0Q7QUFDL0QscURBQW9EO0FBQ3BELHVHQUFvSjtBQU9wSjtJQUFvRSwwRUFBd0M7SUFJeEcsd0RBQVksSUFBMEQ7UUFBdEUsWUFFSSxrQkFBTSxJQUFJLENBQUMsU0FFZDtRQURHLElBQUksT0FBTyxLQUFJLENBQUMsZUFBZSxLQUFLLFdBQVc7WUFBRSxLQUFJLENBQUMsZUFBZSxHQUFHLEVBQUUsQ0FBQzs7SUFDL0UsQ0FBQztJQUVTLHFFQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLFVBQVUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLGdEQUFnRCxFQUFFO1lBQ25HLGVBQWUsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsaUNBQWUsRUFBRSxPQUFPLEVBQUcsaUJBQWlCLEVBQUU7U0FDMUYsQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLHFEQUFDO0FBQUQsQ0F0QkEsQUFzQkMsQ0F0Qm1FLG1GQUF3QyxHQXNCM0c7QUF0Qlksd0dBQThDO0FBd0IzRCwyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsZ0RBQWdELEVBQUMsOENBQThDLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYUVtYWlsTm90aWZpY2F0aW9uU3RhdGljUmVjaXBpZW50Sm9iRGF0YS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFLZXlWYWx1ZSB9IGZyb20gJy4vS2FsdHVyYUtleVZhbHVlJztcbmltcG9ydCB7IEthbHR1cmFFbWFpbE5vdGlmaWNhdGlvblJlY2lwaWVudEpvYkRhdGEsIEthbHR1cmFFbWFpbE5vdGlmaWNhdGlvblJlY2lwaWVudEpvYkRhdGFBcmdzIH0gZnJvbSAnLi9LYWx0dXJhRW1haWxOb3RpZmljYXRpb25SZWNpcGllbnRKb2JEYXRhJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhRW1haWxOb3RpZmljYXRpb25TdGF0aWNSZWNpcGllbnRKb2JEYXRhQXJncyAgZXh0ZW5kcyBLYWx0dXJhRW1haWxOb3RpZmljYXRpb25SZWNpcGllbnRKb2JEYXRhQXJncyB7XG4gICAgZW1haWxSZWNpcGllbnRzPyA6IEthbHR1cmFLZXlWYWx1ZVtdO1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhRW1haWxOb3RpZmljYXRpb25TdGF0aWNSZWNpcGllbnRKb2JEYXRhIGV4dGVuZHMgS2FsdHVyYUVtYWlsTm90aWZpY2F0aW9uUmVjaXBpZW50Sm9iRGF0YSB7XG5cbiAgICBlbWFpbFJlY2lwaWVudHMgOiBLYWx0dXJhS2V5VmFsdWVbXTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYUVtYWlsTm90aWZpY2F0aW9uU3RhdGljUmVjaXBpZW50Sm9iRGF0YUFyZ3MpXG4gICAge1xuICAgICAgICBzdXBlcihkYXRhKTtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmVtYWlsUmVjaXBpZW50cyA9PT0gJ3VuZGVmaW5lZCcpIHRoaXMuZW1haWxSZWNpcGllbnRzID0gW107XG4gICAgfVxuXG4gICAgcHJvdGVjdGVkIF9nZXRNZXRhZGF0YSgpIDogS2FsdHVyYU9iamVjdE1ldGFkYXRhXG4gICAge1xuICAgICAgICBjb25zdCByZXN1bHQgPSBzdXBlci5fZ2V0TWV0YWRhdGEoKTtcbiAgICAgICAgT2JqZWN0LmFzc2lnbihcbiAgICAgICAgICAgIHJlc3VsdC5wcm9wZXJ0aWVzLFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIG9iamVjdFR5cGUgOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnS2FsdHVyYUVtYWlsTm90aWZpY2F0aW9uU3RhdGljUmVjaXBpZW50Sm9iRGF0YScgfSxcblx0XHRcdFx0ZW1haWxSZWNpcGllbnRzIDogeyB0eXBlIDogJ2EnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhS2V5VmFsdWUsIHN1YlR5cGUgOiAnS2FsdHVyYUtleVZhbHVlJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG5LYWx0dXJhVHlwZXNGYWN0b3J5LnJlZ2lzdGVyVHlwZSgnS2FsdHVyYUVtYWlsTm90aWZpY2F0aW9uU3RhdGljUmVjaXBpZW50Sm9iRGF0YScsS2FsdHVyYUVtYWlsTm90aWZpY2F0aW9uU3RhdGljUmVjaXBpZW50Sm9iRGF0YSk7XG4iXX0=
