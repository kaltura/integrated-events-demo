"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ESearchSearchEntryAction = void 0;
var tslib_1 = require("tslib");
var KalturaESearchEntryResponse_1 = require("./KalturaESearchEntryResponse");
var KalturaESearchEntryParams_1 = require("./KalturaESearchEntryParams");
var KalturaPager_1 = require("./KalturaPager");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'eSearch' action 'searchEntry'.
 *
 *
 *
 * Server response type:         KalturaESearchEntryResponse
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var ESearchSearchEntryAction = /** @class */ (function (_super) {
    tslib_1.__extends(ESearchSearchEntryAction, _super);
    function ESearchSearchEntryAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaESearchEntryResponse', responseConstructor: KalturaESearchEntryResponse_1.KalturaESearchEntryResponse }) || this;
    }
    ESearchSearchEntryAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'elasticsearch_esearch' },
            action: { type: 'c', default: 'searchEntry' },
            searchParams: { type: 'o', subTypeConstructor: KalturaESearchEntryParams_1.KalturaESearchEntryParams, subType: 'KalturaESearchEntryParams' },
            pager: { type: 'o', subTypeConstructor: KalturaPager_1.KalturaPager, subType: 'KalturaPager' }
        });
        return result;
    };
    return ESearchSearchEntryAction;
}(kaltura_request_1.KalturaRequest));
exports.ESearchSearchEntryAction = ESearchSearchEntryAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9FU2VhcmNoU2VhcmNoRW50cnlBY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLDZFQUE0RTtBQUU1RSx5RUFBd0U7QUFDeEUsK0NBQThDO0FBQzlDLHNEQUF3RTtBQU94RTs7Ozs7Ozs7O0dBU0c7QUFDSDtJQUE4QyxvREFBMkM7SUFLckYsa0NBQVksSUFBbUM7ZUFFM0Msa0JBQU0sSUFBSSxFQUFFLEVBQUMsWUFBWSxFQUFHLEdBQUcsRUFBRSxlQUFlLEVBQUcsNkJBQTZCLEVBQUUsbUJBQW1CLEVBQUcseURBQTJCLEVBQUcsQ0FBQztJQUMzSSxDQUFDO0lBRVMsK0NBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsdUJBQXVCLEVBQUU7WUFDdkUsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsYUFBYSxFQUFFO1lBQ2hELFlBQVksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcscURBQXlCLEVBQUUsT0FBTyxFQUFHLDJCQUEyQixFQUFFO1lBQ3BILEtBQUssRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsa0JBQWtCLEVBQUcsMkJBQVksRUFBRSxPQUFPLEVBQUcsY0FBYyxFQUFFO1NBQzFFLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCwrQkFBQztBQUFELENBeEJBLEFBd0JDLENBeEI2QyxnQ0FBYyxHQXdCM0Q7QUF4QlksNERBQXdCIiwiZmlsZSI6ImFwaS90eXBlcy9FU2VhcmNoU2VhcmNoRW50cnlBY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYUVTZWFyY2hFbnRyeVJlc3BvbnNlIH0gZnJvbSAnLi9LYWx0dXJhRVNlYXJjaEVudHJ5UmVzcG9uc2UnO1xuXG5pbXBvcnQgeyBLYWx0dXJhRVNlYXJjaEVudHJ5UGFyYW1zIH0gZnJvbSAnLi9LYWx0dXJhRVNlYXJjaEVudHJ5UGFyYW1zJztcbmltcG9ydCB7IEthbHR1cmFQYWdlciB9IGZyb20gJy4vS2FsdHVyYVBhZ2VyJztcbmltcG9ydCB7IEthbHR1cmFSZXF1ZXN0LCBLYWx0dXJhUmVxdWVzdEFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLXJlcXVlc3QnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEVTZWFyY2hTZWFyY2hFbnRyeUFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBzZWFyY2hQYXJhbXMgOiBLYWx0dXJhRVNlYXJjaEVudHJ5UGFyYW1zO1xuXHRwYWdlcj8gOiBLYWx0dXJhUGFnZXI7XG59XG5cbi8qKlxuICogQnVpbGQgcmVxdWVzdCBwYXlsb2FkIGZvciBzZXJ2aWNlICdlU2VhcmNoJyBhY3Rpb24gJ3NlYXJjaEVudHJ5Jy5cbiAqXG4gKiBcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhRVNlYXJjaEVudHJ5UmVzcG9uc2VcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIEVTZWFyY2hTZWFyY2hFbnRyeUFjdGlvbiBleHRlbmRzIEthbHR1cmFSZXF1ZXN0PEthbHR1cmFFU2VhcmNoRW50cnlSZXNwb25zZT4ge1xuXG4gICAgc2VhcmNoUGFyYW1zIDogS2FsdHVyYUVTZWFyY2hFbnRyeVBhcmFtcztcblx0cGFnZXIgOiBLYWx0dXJhUGFnZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhIDogRVNlYXJjaFNlYXJjaEVudHJ5QWN0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEsIHtyZXNwb25zZVR5cGUgOiAnbycsIHJlc3BvbnNlU3ViVHlwZSA6ICdLYWx0dXJhRVNlYXJjaEVudHJ5UmVzcG9uc2UnLCByZXNwb25zZUNvbnN0cnVjdG9yIDogS2FsdHVyYUVTZWFyY2hFbnRyeVJlc3BvbnNlICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdlbGFzdGljc2VhcmNoX2VzZWFyY2gnIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdzZWFyY2hFbnRyeScgfSxcblx0XHRcdFx0c2VhcmNoUGFyYW1zIDogeyB0eXBlIDogJ28nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhRVNlYXJjaEVudHJ5UGFyYW1zLCBzdWJUeXBlIDogJ0thbHR1cmFFU2VhcmNoRW50cnlQYXJhbXMnIH0sXG5cdFx0XHRcdHBhZ2VyIDogeyB0eXBlIDogJ28nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhUGFnZXIsIHN1YlR5cGUgOiAnS2FsdHVyYVBhZ2VyJyB9XG4gICAgICAgICAgICB9XG4gICAgICAgICk7XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxufVxuXG4iXX0=
