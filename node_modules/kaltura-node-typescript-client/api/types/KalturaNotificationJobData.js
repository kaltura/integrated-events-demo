"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaNotificationJobData = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaNotificationType_1 = require("./KalturaNotificationType");
var KalturaNotificationStatus_1 = require("./KalturaNotificationStatus");
var KalturaNotificationObjectType_1 = require("./KalturaNotificationObjectType");
var KalturaJobData_1 = require("./KalturaJobData");
var KalturaNotificationJobData = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaNotificationJobData, _super);
    function KalturaNotificationJobData(data) {
        return _super.call(this, data) || this;
    }
    KalturaNotificationJobData.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaNotificationJobData' },
            userId: { type: 's' },
            type: { type: 'en', subTypeConstructor: KalturaNotificationType_1.KalturaNotificationType, subType: 'KalturaNotificationType' },
            typeAsString: { type: 's' },
            objectId: { type: 's' },
            status: { type: 'en', subTypeConstructor: KalturaNotificationStatus_1.KalturaNotificationStatus, subType: 'KalturaNotificationStatus' },
            data: { type: 's' },
            numberOfAttempts: { type: 'n' },
            notificationResult: { type: 's' },
            objType: { type: 'en', subTypeConstructor: KalturaNotificationObjectType_1.KalturaNotificationObjectType, subType: 'KalturaNotificationObjectType' }
        });
        return result;
    };
    return KalturaNotificationJobData;
}(KalturaJobData_1.KalturaJobData));
exports.KalturaNotificationJobData = KalturaNotificationJobData;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaNotificationJobData', KalturaNotificationJobData);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhTm90aWZpY2F0aW9uSm9iRGF0YS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsa0VBQStEO0FBQy9ELHFFQUFvRTtBQUNwRSx5RUFBd0U7QUFDeEUsaUZBQWdGO0FBQ2hGLG1EQUFzRTtBQWV0RTtJQUFnRCxzREFBYztJQVkxRCxvQ0FBWSxJQUFzQztlQUU5QyxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMsaURBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsNEJBQTRCLEVBQUU7WUFDL0UsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN2QixJQUFJLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLGlEQUF1QixFQUFFLE9BQU8sRUFBRyx5QkFBeUIsRUFBRTtZQUN6RyxZQUFZLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzdCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsTUFBTSxFQUFHLEVBQUUsSUFBSSxFQUFHLElBQUksRUFBRSxrQkFBa0IsRUFBRyxxREFBeUIsRUFBRSxPQUFPLEVBQUcsMkJBQTJCLEVBQUU7WUFDL0csSUFBSSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNyQixnQkFBZ0IsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDakMsa0JBQWtCLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ25DLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcsNkRBQTZCLEVBQUUsT0FBTyxFQUFHLCtCQUErQixFQUFFO1NBQy9HLENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxpQ0FBQztBQUFELENBckNBLEFBcUNDLENBckMrQywrQkFBYyxHQXFDN0Q7QUFyQ1ksZ0VBQTBCO0FBdUN2QywyQ0FBbUIsQ0FBQyxZQUFZLENBQUMsNEJBQTRCLEVBQUMsMEJBQTBCLENBQUMsQ0FBQyIsImZpbGUiOiJhcGkvdHlwZXMvS2FsdHVyYU5vdGlmaWNhdGlvbkpvYkRhdGEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVR5cGVzRmFjdG9yeSB9IGZyb20gJy4uL2thbHR1cmEtdHlwZXMtZmFjdG9yeSc7XG5pbXBvcnQgeyBLYWx0dXJhTm90aWZpY2F0aW9uVHlwZSB9IGZyb20gJy4vS2FsdHVyYU5vdGlmaWNhdGlvblR5cGUnO1xuaW1wb3J0IHsgS2FsdHVyYU5vdGlmaWNhdGlvblN0YXR1cyB9IGZyb20gJy4vS2FsdHVyYU5vdGlmaWNhdGlvblN0YXR1cyc7XG5pbXBvcnQgeyBLYWx0dXJhTm90aWZpY2F0aW9uT2JqZWN0VHlwZSB9IGZyb20gJy4vS2FsdHVyYU5vdGlmaWNhdGlvbk9iamVjdFR5cGUnO1xuaW1wb3J0IHsgS2FsdHVyYUpvYkRhdGEsIEthbHR1cmFKb2JEYXRhQXJncyB9IGZyb20gJy4vS2FsdHVyYUpvYkRhdGEnO1xuXG5leHBvcnQgaW50ZXJmYWNlIEthbHR1cmFOb3RpZmljYXRpb25Kb2JEYXRhQXJncyAgZXh0ZW5kcyBLYWx0dXJhSm9iRGF0YUFyZ3Mge1xuICAgIHVzZXJJZD8gOiBzdHJpbmc7XG5cdHR5cGU/IDogS2FsdHVyYU5vdGlmaWNhdGlvblR5cGU7XG5cdHR5cGVBc1N0cmluZz8gOiBzdHJpbmc7XG5cdG9iamVjdElkPyA6IHN0cmluZztcblx0c3RhdHVzPyA6IEthbHR1cmFOb3RpZmljYXRpb25TdGF0dXM7XG5cdGRhdGE/IDogc3RyaW5nO1xuXHRudW1iZXJPZkF0dGVtcHRzPyA6IG51bWJlcjtcblx0bm90aWZpY2F0aW9uUmVzdWx0PyA6IHN0cmluZztcblx0b2JqVHlwZT8gOiBLYWx0dXJhTm90aWZpY2F0aW9uT2JqZWN0VHlwZTtcbn1cblxuXG5leHBvcnQgY2xhc3MgS2FsdHVyYU5vdGlmaWNhdGlvbkpvYkRhdGEgZXh0ZW5kcyBLYWx0dXJhSm9iRGF0YSB7XG5cbiAgICB1c2VySWQgOiBzdHJpbmc7XG5cdHR5cGUgOiBLYWx0dXJhTm90aWZpY2F0aW9uVHlwZTtcblx0dHlwZUFzU3RyaW5nIDogc3RyaW5nO1xuXHRvYmplY3RJZCA6IHN0cmluZztcblx0c3RhdHVzIDogS2FsdHVyYU5vdGlmaWNhdGlvblN0YXR1cztcblx0ZGF0YSA6IHN0cmluZztcblx0bnVtYmVyT2ZBdHRlbXB0cyA6IG51bWJlcjtcblx0bm90aWZpY2F0aW9uUmVzdWx0IDogc3RyaW5nO1xuXHRvYmpUeXBlIDogS2FsdHVyYU5vdGlmaWNhdGlvbk9iamVjdFR5cGU7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IEthbHR1cmFOb3RpZmljYXRpb25Kb2JEYXRhQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFOb3RpZmljYXRpb25Kb2JEYXRhJyB9LFxuXHRcdFx0XHR1c2VySWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0dHlwZSA6IHsgdHlwZSA6ICdlbicsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFOb3RpZmljYXRpb25UeXBlLCBzdWJUeXBlIDogJ0thbHR1cmFOb3RpZmljYXRpb25UeXBlJyB9LFxuXHRcdFx0XHR0eXBlQXNTdHJpbmcgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0b2JqZWN0SWQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0c3RhdHVzIDogeyB0eXBlIDogJ2VuJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYU5vdGlmaWNhdGlvblN0YXR1cywgc3ViVHlwZSA6ICdLYWx0dXJhTm90aWZpY2F0aW9uU3RhdHVzJyB9LFxuXHRcdFx0XHRkYXRhIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdG51bWJlck9mQXR0ZW1wdHMgOiB7IHR5cGUgOiAnbicgfSxcblx0XHRcdFx0bm90aWZpY2F0aW9uUmVzdWx0IDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdG9ialR5cGUgOiB7IHR5cGUgOiAnZW4nLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhTm90aWZpY2F0aW9uT2JqZWN0VHlwZSwgc3ViVHlwZSA6ICdLYWx0dXJhTm90aWZpY2F0aW9uT2JqZWN0VHlwZScgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFOb3RpZmljYXRpb25Kb2JEYXRhJyxLYWx0dXJhTm90aWZpY2F0aW9uSm9iRGF0YSk7XG4iXX0=
