"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.WebexVendorSubmitRegistrationAction = void 0;
var tslib_1 = require("tslib");
var KalturaWebexAPIIntegrationSetting_1 = require("./KalturaWebexAPIIntegrationSetting");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'webexVendor' action 'submitRegistration'.
 *
 *
 *
 * Server response type:         string
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var WebexVendorSubmitRegistrationAction = /** @class */ (function (_super) {
    tslib_1.__extends(WebexVendorSubmitRegistrationAction, _super);
    function WebexVendorSubmitRegistrationAction(data) {
        return _super.call(this, data, { responseType: 's', responseSubType: '', responseConstructor: null }) || this;
    }
    WebexVendorSubmitRegistrationAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'webexapidropfolder_webexvendor' },
            action: { type: 'c', default: 'submitRegistration' },
            accountId: { type: 's' },
            integrationSetting: { type: 'o', subTypeConstructor: KalturaWebexAPIIntegrationSetting_1.KalturaWebexAPIIntegrationSetting, subType: 'KalturaWebexAPIIntegrationSetting' }
        });
        return result;
    };
    return WebexVendorSubmitRegistrationAction;
}(kaltura_request_1.KalturaRequest));
exports.WebexVendorSubmitRegistrationAction = WebexVendorSubmitRegistrationAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9XZWJleFZlbmRvclN1Ym1pdFJlZ2lzdHJhdGlvbkFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBSUEseUZBQXdGO0FBQ3hGLHNEQUF3RTtBQU94RTs7Ozs7Ozs7O0dBU0c7QUFDSDtJQUF5RCwrREFBc0I7SUFLM0UsNkNBQVksSUFBOEM7ZUFFdEQsa0JBQU0sSUFBSSxFQUFFLEVBQUMsWUFBWSxFQUFHLEdBQUcsRUFBRSxlQUFlLEVBQUcsRUFBRSxFQUFFLG1CQUFtQixFQUFHLElBQUksRUFBRSxDQUFDO0lBQ3hGLENBQUM7SUFFUywwREFBWSxHQUF0QjtRQUVJLElBQU0sTUFBTSxHQUFHLGlCQUFNLFlBQVksV0FBRSxDQUFDO1FBQ3BDLE1BQU0sQ0FBQyxNQUFNLENBQ1QsTUFBTSxDQUFDLFVBQVUsRUFDakI7WUFDSSxPQUFPLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxnQ0FBZ0MsRUFBRTtZQUNoRixNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLE9BQU8sRUFBRyxvQkFBb0IsRUFBRTtZQUN2RCxTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzFCLGtCQUFrQixFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxrQkFBa0IsRUFBRyxxRUFBaUMsRUFBRSxPQUFPLEVBQUcsbUNBQW1DLEVBQUU7U0FDakksQ0FDSixDQUFDO1FBQ0YsT0FBTyxNQUFNLENBQUM7SUFDbEIsQ0FBQztJQUNMLDBDQUFDO0FBQUQsQ0F4QkEsQUF3QkMsQ0F4QndELGdDQUFjLEdBd0J0RTtBQXhCWSxrRkFBbUMiLCJmaWxlIjoiYXBpL3R5cGVzL1dlYmV4VmVuZG9yU3VibWl0UmVnaXN0cmF0aW9uQWN0aW9uLmpzIiwic291cmNlc0NvbnRlbnQiOlsiXG5pbXBvcnQgeyBLYWx0dXJhT2JqZWN0TWV0YWRhdGEgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcblxuXG5pbXBvcnQgeyBLYWx0dXJhV2ViZXhBUElJbnRlZ3JhdGlvblNldHRpbmcgfSBmcm9tICcuL0thbHR1cmFXZWJleEFQSUludGVncmF0aW9uU2V0dGluZyc7XG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBXZWJleFZlbmRvclN1Ym1pdFJlZ2lzdHJhdGlvbkFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBhY2NvdW50SWQgOiBzdHJpbmc7XG5cdGludGVncmF0aW9uU2V0dGluZyA6IEthbHR1cmFXZWJleEFQSUludGVncmF0aW9uU2V0dGluZztcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ3dlYmV4VmVuZG9yJyBhY3Rpb24gJ3N1Ym1pdFJlZ2lzdHJhdGlvbicuXG4gKlxuICogXG4gKlxuICogU2VydmVyIHJlc3BvbnNlIHR5cGU6ICAgICAgICAgc3RyaW5nXG4gKiBTZXJ2ZXIgZmFpbHVyZSByZXNwb25zZSB0eXBlOiBLYWx0dXJhQVBJRXhjZXB0aW9uXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIEthbHR1cmFSZXF1ZXN0XG4gKi9cbmV4cG9ydCBjbGFzcyBXZWJleFZlbmRvclN1Ym1pdFJlZ2lzdHJhdGlvbkFjdGlvbiBleHRlbmRzIEthbHR1cmFSZXF1ZXN0PHN0cmluZz4ge1xuXG4gICAgYWNjb3VudElkIDogc3RyaW5nO1xuXHRpbnRlZ3JhdGlvblNldHRpbmcgOiBLYWx0dXJhV2ViZXhBUElJbnRlZ3JhdGlvblNldHRpbmc7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhIDogV2ViZXhWZW5kb3JTdWJtaXRSZWdpc3RyYXRpb25BY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdzJywgcmVzcG9uc2VTdWJUeXBlIDogJycsIHJlc3BvbnNlQ29uc3RydWN0b3IgOiBudWxsIH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ3dlYmV4YXBpZHJvcGZvbGRlcl93ZWJleHZlbmRvcicgfSxcblx0XHRcdFx0YWN0aW9uIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ3N1Ym1pdFJlZ2lzdHJhdGlvbicgfSxcblx0XHRcdFx0YWNjb3VudElkIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGludGVncmF0aW9uU2V0dGluZyA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVdlYmV4QVBJSW50ZWdyYXRpb25TZXR0aW5nLCBzdWJUeXBlIDogJ0thbHR1cmFXZWJleEFQSUludGVncmF0aW9uU2V0dGluZycgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuIl19
