"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.SearchHistoryListAction = void 0;
var tslib_1 = require("tslib");
var KalturaESearchHistoryListResponse_1 = require("./KalturaESearchHistoryListResponse");
var KalturaESearchHistoryFilter_1 = require("./KalturaESearchHistoryFilter");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'searchHistory' action 'list'.
 *
 *
 *
 * Server response type:         KalturaESearchHistoryListResponse
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var SearchHistoryListAction = /** @class */ (function (_super) {
    tslib_1.__extends(SearchHistoryListAction, _super);
    function SearchHistoryListAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaESearchHistoryListResponse', responseConstructor: KalturaESearchHistoryListResponse_1.KalturaESearchHistoryListResponse }) || this;
    }
    SearchHistoryListAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'searchhistory_searchhistory' },
            action: { type: 'c', default: 'list' },
            filter: { type: 'o', subTypeConstructor: KalturaESearchHistoryFilter_1.KalturaESearchHistoryFilter, subType: 'KalturaESearchHistoryFilter' }
        });
        return result;
    };
    return SearchHistoryListAction;
}(kaltura_request_1.KalturaRequest));
exports.SearchHistoryListAction = SearchHistoryListAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9TZWFyY2hIaXN0b3J5TGlzdEFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEseUZBQXdGO0FBRXhGLDZFQUE0RTtBQUM1RSxzREFBd0U7QUFNeEU7Ozs7Ozs7OztHQVNHO0FBQ0g7SUFBNkMsbURBQWlEO0lBSTFGLGlDQUFZLElBQW1DO2VBRTNDLGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLG1DQUFtQyxFQUFFLG1CQUFtQixFQUFHLHFFQUFpQyxFQUFHLENBQUM7SUFDdkosQ0FBQztJQUVTLDhDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLDZCQUE2QixFQUFFO1lBQzdFLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLE1BQU0sRUFBRTtZQUN6QyxNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLHlEQUEyQixFQUFFLE9BQU8sRUFBRyw2QkFBNkIsRUFBRTtTQUN6RyxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsOEJBQUM7QUFBRCxDQXRCQSxBQXNCQyxDQXRCNEMsZ0NBQWMsR0FzQjFEO0FBdEJZLDBEQUF1QiIsImZpbGUiOiJhcGkvdHlwZXMvU2VhcmNoSGlzdG9yeUxpc3RBY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYUVTZWFyY2hIaXN0b3J5TGlzdFJlc3BvbnNlIH0gZnJvbSAnLi9LYWx0dXJhRVNlYXJjaEhpc3RvcnlMaXN0UmVzcG9uc2UnO1xuXG5pbXBvcnQgeyBLYWx0dXJhRVNlYXJjaEhpc3RvcnlGaWx0ZXIgfSBmcm9tICcuL0thbHR1cmFFU2VhcmNoSGlzdG9yeUZpbHRlcic7XG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBTZWFyY2hIaXN0b3J5TGlzdEFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBmaWx0ZXI/IDogS2FsdHVyYUVTZWFyY2hIaXN0b3J5RmlsdGVyO1xufVxuXG4vKipcbiAqIEJ1aWxkIHJlcXVlc3QgcGF5bG9hZCBmb3Igc2VydmljZSAnc2VhcmNoSGlzdG9yeScgYWN0aW9uICdsaXN0Jy5cbiAqXG4gKiBcbiAqXG4gKiBTZXJ2ZXIgcmVzcG9uc2UgdHlwZTogICAgICAgICBLYWx0dXJhRVNlYXJjaEhpc3RvcnlMaXN0UmVzcG9uc2VcbiAqIFNlcnZlciBmYWlsdXJlIHJlc3BvbnNlIHR5cGU6IEthbHR1cmFBUElFeGNlcHRpb25cbiAqIEBjbGFzc1xuICogQGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RcbiAqL1xuZXhwb3J0IGNsYXNzIFNlYXJjaEhpc3RvcnlMaXN0QWN0aW9uIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3Q8S2FsdHVyYUVTZWFyY2hIaXN0b3J5TGlzdFJlc3BvbnNlPiB7XG5cbiAgICBmaWx0ZXIgOiBLYWx0dXJhRVNlYXJjaEhpc3RvcnlGaWx0ZXI7XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhPyA6IFNlYXJjaEhpc3RvcnlMaXN0QWN0aW9uQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEsIHtyZXNwb25zZVR5cGUgOiAnbycsIHJlc3BvbnNlU3ViVHlwZSA6ICdLYWx0dXJhRVNlYXJjaEhpc3RvcnlMaXN0UmVzcG9uc2UnLCByZXNwb25zZUNvbnN0cnVjdG9yIDogS2FsdHVyYUVTZWFyY2hIaXN0b3J5TGlzdFJlc3BvbnNlICB9KTtcbiAgICB9XG5cbiAgICBwcm90ZWN0ZWQgX2dldE1ldGFkYXRhKCkgOiBLYWx0dXJhT2JqZWN0TWV0YWRhdGFcbiAgICB7XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHN1cGVyLl9nZXRNZXRhZGF0YSgpO1xuICAgICAgICBPYmplY3QuYXNzaWduKFxuICAgICAgICAgICAgcmVzdWx0LnByb3BlcnRpZXMsXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgc2VydmljZSA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdzZWFyY2hoaXN0b3J5X3NlYXJjaGhpc3RvcnknIH0sXG5cdFx0XHRcdGFjdGlvbiA6IHsgdHlwZSA6ICdjJywgZGVmYXVsdCA6ICdsaXN0JyB9LFxuXHRcdFx0XHRmaWx0ZXIgOiB7IHR5cGUgOiAnbycsIHN1YlR5cGVDb25zdHJ1Y3RvciA6IEthbHR1cmFFU2VhcmNoSGlzdG9yeUZpbHRlciwgc3ViVHlwZSA6ICdLYWx0dXJhRVNlYXJjaEhpc3RvcnlGaWx0ZXInIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgKTtcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICB9XG59XG5cbiJdfQ==
