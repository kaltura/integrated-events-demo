"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.PermissionItemAddAction = void 0;
var tslib_1 = require("tslib");
var KalturaPermissionItem_1 = require("./KalturaPermissionItem");
var kaltura_request_1 = require("../kaltura-request");
/**
 * Build request payload for service 'permissionItem' action 'add'.
 *
 * Usage: Adds a new permission item object to the account.
 * This action is available only to Kaltura system administrators
 *
 * Server response type:         KalturaPermissionItem
 * Server failure response type: KalturaAPIException
 * @class
 * @extends KalturaRequest
 */
var PermissionItemAddAction = /** @class */ (function (_super) {
    tslib_1.__extends(PermissionItemAddAction, _super);
    function PermissionItemAddAction(data) {
        return _super.call(this, data, { responseType: 'o', responseSubType: 'KalturaPermissionItem', responseConstructor: KalturaPermissionItem_1.KalturaPermissionItem }) || this;
    }
    PermissionItemAddAction.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            service: { type: 'c', default: 'permissionitem' },
            action: { type: 'c', default: 'add' },
            permissionItem: { type: 'o', subTypeConstructor: KalturaPermissionItem_1.KalturaPermissionItem, subType: 'KalturaPermissionItem' }
        });
        return result;
    };
    return PermissionItemAddAction;
}(kaltura_request_1.KalturaRequest));
exports.PermissionItemAddAction = PermissionItemAddAction;

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9QZXJtaXNzaW9uSXRlbUFkZEFjdGlvbi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBRUEsaUVBQWdFO0FBRWhFLHNEQUF3RTtBQU14RTs7Ozs7Ozs7OztHQVVHO0FBQ0g7SUFBNkMsbURBQXFDO0lBSTlFLGlDQUFZLElBQWtDO2VBRTFDLGtCQUFNLElBQUksRUFBRSxFQUFDLFlBQVksRUFBRyxHQUFHLEVBQUUsZUFBZSxFQUFHLHVCQUF1QixFQUFFLG1CQUFtQixFQUFHLDZDQUFxQixFQUFHLENBQUM7SUFDL0gsQ0FBQztJQUVTLDhDQUFZLEdBQXRCO1FBRUksSUFBTSxNQUFNLEdBQUcsaUJBQU0sWUFBWSxXQUFFLENBQUM7UUFDcEMsTUFBTSxDQUFDLE1BQU0sQ0FDVCxNQUFNLENBQUMsVUFBVSxFQUNqQjtZQUNJLE9BQU8sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLGdCQUFnQixFQUFFO1lBQ2hFLE1BQU0sRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUUsT0FBTyxFQUFHLEtBQUssRUFBRTtZQUN4QyxjQUFjLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFLGtCQUFrQixFQUFHLDZDQUFxQixFQUFFLE9BQU8sRUFBRyx1QkFBdUIsRUFBRTtTQUNyRyxDQUNKLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsOEJBQUM7QUFBRCxDQXRCQSxBQXNCQyxDQXRCNEMsZ0NBQWMsR0FzQjFEO0FBdEJZLDBEQUF1QiIsImZpbGUiOiJhcGkvdHlwZXMvUGVybWlzc2lvbkl0ZW1BZGRBY3Rpb24uanMiLCJzb3VyY2VzQ29udGVudCI6WyJcbmltcG9ydCB7IEthbHR1cmFPYmplY3RNZXRhZGF0YSB9IGZyb20gJy4uL2thbHR1cmEtb2JqZWN0LWJhc2UnO1xuaW1wb3J0IHsgS2FsdHVyYVBlcm1pc3Npb25JdGVtIH0gZnJvbSAnLi9LYWx0dXJhUGVybWlzc2lvbkl0ZW0nO1xuXG5pbXBvcnQgeyBLYWx0dXJhUmVxdWVzdCwgS2FsdHVyYVJlcXVlc3RBcmdzIH0gZnJvbSAnLi4va2FsdHVyYS1yZXF1ZXN0JztcblxuZXhwb3J0IGludGVyZmFjZSBQZXJtaXNzaW9uSXRlbUFkZEFjdGlvbkFyZ3MgIGV4dGVuZHMgS2FsdHVyYVJlcXVlc3RBcmdzIHtcbiAgICBwZXJtaXNzaW9uSXRlbSA6IEthbHR1cmFQZXJtaXNzaW9uSXRlbTtcbn1cblxuLyoqXG4gKiBCdWlsZCByZXF1ZXN0IHBheWxvYWQgZm9yIHNlcnZpY2UgJ3Blcm1pc3Npb25JdGVtJyBhY3Rpb24gJ2FkZCcuXG4gKlxuICogVXNhZ2U6IEFkZHMgYSBuZXcgcGVybWlzc2lvbiBpdGVtIG9iamVjdCB0byB0aGUgYWNjb3VudC5cbiAqIFRoaXMgYWN0aW9uIGlzIGF2YWlsYWJsZSBvbmx5IHRvIEthbHR1cmEgc3lzdGVtIGFkbWluaXN0cmF0b3JzXG4gKlxuICogU2VydmVyIHJlc3BvbnNlIHR5cGU6ICAgICAgICAgS2FsdHVyYVBlcm1pc3Npb25JdGVtXG4gKiBTZXJ2ZXIgZmFpbHVyZSByZXNwb25zZSB0eXBlOiBLYWx0dXJhQVBJRXhjZXB0aW9uXG4gKiBAY2xhc3NcbiAqIEBleHRlbmRzIEthbHR1cmFSZXF1ZXN0XG4gKi9cbmV4cG9ydCBjbGFzcyBQZXJtaXNzaW9uSXRlbUFkZEFjdGlvbiBleHRlbmRzIEthbHR1cmFSZXF1ZXN0PEthbHR1cmFQZXJtaXNzaW9uSXRlbT4ge1xuXG4gICAgcGVybWlzc2lvbkl0ZW0gOiBLYWx0dXJhUGVybWlzc2lvbkl0ZW07XG5cbiAgICBjb25zdHJ1Y3RvcihkYXRhIDogUGVybWlzc2lvbkl0ZW1BZGRBY3Rpb25BcmdzKVxuICAgIHtcbiAgICAgICAgc3VwZXIoZGF0YSwge3Jlc3BvbnNlVHlwZSA6ICdvJywgcmVzcG9uc2VTdWJUeXBlIDogJ0thbHR1cmFQZXJtaXNzaW9uSXRlbScsIHJlc3BvbnNlQ29uc3RydWN0b3IgOiBLYWx0dXJhUGVybWlzc2lvbkl0ZW0gIH0pO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBzZXJ2aWNlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ3Blcm1pc3Npb25pdGVtJyB9LFxuXHRcdFx0XHRhY3Rpb24gOiB7IHR5cGUgOiAnYycsIGRlZmF1bHQgOiAnYWRkJyB9LFxuXHRcdFx0XHRwZXJtaXNzaW9uSXRlbSA6IHsgdHlwZSA6ICdvJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVBlcm1pc3Npb25JdGVtLCBzdWJUeXBlIDogJ0thbHR1cmFQZXJtaXNzaW9uSXRlbScgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuIl19
