"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.KalturaScheduleEventRecurrence = void 0;
var tslib_1 = require("tslib");
var kaltura_types_factory_1 = require("../kaltura-types-factory");
var KalturaScheduleEventRecurrenceFrequency_1 = require("./KalturaScheduleEventRecurrenceFrequency");
var KalturaScheduleEventRecurrenceDay_1 = require("./KalturaScheduleEventRecurrenceDay");
var kaltura_object_base_1 = require("../kaltura-object-base");
var KalturaScheduleEventRecurrence = /** @class */ (function (_super) {
    tslib_1.__extends(KalturaScheduleEventRecurrence, _super);
    function KalturaScheduleEventRecurrence(data) {
        return _super.call(this, data) || this;
    }
    KalturaScheduleEventRecurrence.prototype._getMetadata = function () {
        var result = _super.prototype._getMetadata.call(this);
        Object.assign(result.properties, {
            objectType: { type: 'c', default: 'KalturaScheduleEventRecurrence' },
            name: { type: 's' },
            frequency: { type: 'es', subTypeConstructor: KalturaScheduleEventRecurrenceFrequency_1.KalturaScheduleEventRecurrenceFrequency, subType: 'KalturaScheduleEventRecurrenceFrequency' },
            until: { type: 'd' },
            timeZone: { type: 's' },
            count: { type: 'n' },
            interval: { type: 'n' },
            bySecond: { type: 's' },
            byMinute: { type: 's' },
            byHour: { type: 's' },
            byDay: { type: 's' },
            byMonthDay: { type: 's' },
            byYearDay: { type: 's' },
            byWeekNumber: { type: 's' },
            byMonth: { type: 's' },
            byOffset: { type: 's' },
            weekStartDay: { type: 'es', subTypeConstructor: KalturaScheduleEventRecurrenceDay_1.KalturaScheduleEventRecurrenceDay, subType: 'KalturaScheduleEventRecurrenceDay' }
        });
        return result;
    };
    return KalturaScheduleEventRecurrence;
}(kaltura_object_base_1.KalturaObjectBase));
exports.KalturaScheduleEventRecurrence = KalturaScheduleEventRecurrence;
kaltura_types_factory_1.KalturaTypesFactory.registerType('KalturaScheduleEventRecurrence', KalturaScheduleEventRecurrence);

//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwaS90eXBlcy9LYWx0dXJhU2NoZWR1bGVFdmVudFJlY3VycmVuY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUVBLGtFQUErRDtBQUMvRCxxR0FBb0c7QUFDcEcseUZBQXdGO0FBQ3hGLDhEQUFrRjtBQXNCbEY7SUFBb0QsMERBQWlCO0lBbUJqRSx3Q0FBWSxJQUEwQztlQUVsRCxrQkFBTSxJQUFJLENBQUM7SUFDZixDQUFDO0lBRVMscURBQVksR0FBdEI7UUFFSSxJQUFNLE1BQU0sR0FBRyxpQkFBTSxZQUFZLFdBQUUsQ0FBQztRQUNwQyxNQUFNLENBQUMsTUFBTSxDQUNULE1BQU0sQ0FBQyxVQUFVLEVBQ2pCO1lBQ0ksVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRSxPQUFPLEVBQUcsZ0NBQWdDLEVBQUU7WUFDbkYsSUFBSSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUNyQixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsSUFBSSxFQUFFLGtCQUFrQixFQUFHLGlGQUF1QyxFQUFFLE9BQU8sRUFBRyx5Q0FBeUMsRUFBRTtZQUM5SSxLQUFLLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3RCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsS0FBSyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN0QixRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3pCLFFBQVEsRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDekIsUUFBUSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN6QixNQUFNLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3ZCLEtBQUssRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDdEIsVUFBVSxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUMzQixTQUFTLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQzFCLFlBQVksRUFBRyxFQUFFLElBQUksRUFBRyxHQUFHLEVBQUU7WUFDN0IsT0FBTyxFQUFHLEVBQUUsSUFBSSxFQUFHLEdBQUcsRUFBRTtZQUN4QixRQUFRLEVBQUcsRUFBRSxJQUFJLEVBQUcsR0FBRyxFQUFFO1lBQ3pCLFlBQVksRUFBRyxFQUFFLElBQUksRUFBRyxJQUFJLEVBQUUsa0JBQWtCLEVBQUcscUVBQWlDLEVBQUUsT0FBTyxFQUFHLG1DQUFtQyxFQUFFO1NBQzVILENBQ0osQ0FBQztRQUNGLE9BQU8sTUFBTSxDQUFDO0lBQ2xCLENBQUM7SUFDTCxxQ0FBQztBQUFELENBbkRBLEFBbURDLENBbkRtRCx1Q0FBaUIsR0FtRHBFO0FBbkRZLHdFQUE4QjtBQXFEM0MsMkNBQW1CLENBQUMsWUFBWSxDQUFDLGdDQUFnQyxFQUFDLDhCQUE4QixDQUFDLENBQUMiLCJmaWxlIjoiYXBpL3R5cGVzL0thbHR1cmFTY2hlZHVsZUV2ZW50UmVjdXJyZW5jZS5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxuaW1wb3J0IHsgS2FsdHVyYU9iamVjdE1ldGFkYXRhIH0gZnJvbSAnLi4va2FsdHVyYS1vYmplY3QtYmFzZSc7XG5pbXBvcnQgeyBLYWx0dXJhVHlwZXNGYWN0b3J5IH0gZnJvbSAnLi4va2FsdHVyYS10eXBlcy1mYWN0b3J5JztcbmltcG9ydCB7IEthbHR1cmFTY2hlZHVsZUV2ZW50UmVjdXJyZW5jZUZyZXF1ZW5jeSB9IGZyb20gJy4vS2FsdHVyYVNjaGVkdWxlRXZlbnRSZWN1cnJlbmNlRnJlcXVlbmN5JztcbmltcG9ydCB7IEthbHR1cmFTY2hlZHVsZUV2ZW50UmVjdXJyZW5jZURheSB9IGZyb20gJy4vS2FsdHVyYVNjaGVkdWxlRXZlbnRSZWN1cnJlbmNlRGF5JztcbmltcG9ydCB7IEthbHR1cmFPYmplY3RCYXNlLCBLYWx0dXJhT2JqZWN0QmFzZUFyZ3MgfSBmcm9tICcuLi9rYWx0dXJhLW9iamVjdC1iYXNlJztcblxuZXhwb3J0IGludGVyZmFjZSBLYWx0dXJhU2NoZWR1bGVFdmVudFJlY3VycmVuY2VBcmdzICBleHRlbmRzIEthbHR1cmFPYmplY3RCYXNlQXJncyB7XG4gICAgbmFtZT8gOiBzdHJpbmc7XG5cdGZyZXF1ZW5jeT8gOiBLYWx0dXJhU2NoZWR1bGVFdmVudFJlY3VycmVuY2VGcmVxdWVuY3k7XG5cdHVudGlsPyA6IERhdGU7XG5cdHRpbWVab25lPyA6IHN0cmluZztcblx0Y291bnQ/IDogbnVtYmVyO1xuXHRpbnRlcnZhbD8gOiBudW1iZXI7XG5cdGJ5U2Vjb25kPyA6IHN0cmluZztcblx0YnlNaW51dGU/IDogc3RyaW5nO1xuXHRieUhvdXI/IDogc3RyaW5nO1xuXHRieURheT8gOiBzdHJpbmc7XG5cdGJ5TW9udGhEYXk/IDogc3RyaW5nO1xuXHRieVllYXJEYXk/IDogc3RyaW5nO1xuXHRieVdlZWtOdW1iZXI/IDogc3RyaW5nO1xuXHRieU1vbnRoPyA6IHN0cmluZztcblx0YnlPZmZzZXQ/IDogc3RyaW5nO1xuXHR3ZWVrU3RhcnREYXk/IDogS2FsdHVyYVNjaGVkdWxlRXZlbnRSZWN1cnJlbmNlRGF5O1xufVxuXG5cbmV4cG9ydCBjbGFzcyBLYWx0dXJhU2NoZWR1bGVFdmVudFJlY3VycmVuY2UgZXh0ZW5kcyBLYWx0dXJhT2JqZWN0QmFzZSB7XG5cbiAgICBuYW1lIDogc3RyaW5nO1xuXHRmcmVxdWVuY3kgOiBLYWx0dXJhU2NoZWR1bGVFdmVudFJlY3VycmVuY2VGcmVxdWVuY3k7XG5cdHVudGlsIDogRGF0ZTtcblx0dGltZVpvbmUgOiBzdHJpbmc7XG5cdGNvdW50IDogbnVtYmVyO1xuXHRpbnRlcnZhbCA6IG51bWJlcjtcblx0YnlTZWNvbmQgOiBzdHJpbmc7XG5cdGJ5TWludXRlIDogc3RyaW5nO1xuXHRieUhvdXIgOiBzdHJpbmc7XG5cdGJ5RGF5IDogc3RyaW5nO1xuXHRieU1vbnRoRGF5IDogc3RyaW5nO1xuXHRieVllYXJEYXkgOiBzdHJpbmc7XG5cdGJ5V2Vla051bWJlciA6IHN0cmluZztcblx0YnlNb250aCA6IHN0cmluZztcblx0YnlPZmZzZXQgOiBzdHJpbmc7XG5cdHdlZWtTdGFydERheSA6IEthbHR1cmFTY2hlZHVsZUV2ZW50UmVjdXJyZW5jZURheTtcblxuICAgIGNvbnN0cnVjdG9yKGRhdGE/IDogS2FsdHVyYVNjaGVkdWxlRXZlbnRSZWN1cnJlbmNlQXJncylcbiAgICB7XG4gICAgICAgIHN1cGVyKGRhdGEpO1xuICAgIH1cblxuICAgIHByb3RlY3RlZCBfZ2V0TWV0YWRhdGEoKSA6IEthbHR1cmFPYmplY3RNZXRhZGF0YVxuICAgIHtcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gc3VwZXIuX2dldE1ldGFkYXRhKCk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24oXG4gICAgICAgICAgICByZXN1bHQucHJvcGVydGllcyxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBvYmplY3RUeXBlIDogeyB0eXBlIDogJ2MnLCBkZWZhdWx0IDogJ0thbHR1cmFTY2hlZHVsZUV2ZW50UmVjdXJyZW5jZScgfSxcblx0XHRcdFx0bmFtZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRmcmVxdWVuY3kgOiB7IHR5cGUgOiAnZXMnLCBzdWJUeXBlQ29uc3RydWN0b3IgOiBLYWx0dXJhU2NoZWR1bGVFdmVudFJlY3VycmVuY2VGcmVxdWVuY3ksIHN1YlR5cGUgOiAnS2FsdHVyYVNjaGVkdWxlRXZlbnRSZWN1cnJlbmNlRnJlcXVlbmN5JyB9LFxuXHRcdFx0XHR1bnRpbCA6IHsgdHlwZSA6ICdkJyB9LFxuXHRcdFx0XHR0aW1lWm9uZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRjb3VudCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRpbnRlcnZhbCA6IHsgdHlwZSA6ICduJyB9LFxuXHRcdFx0XHRieVNlY29uZCA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRieU1pbnV0ZSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRieUhvdXIgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0YnlEYXkgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0YnlNb250aERheSA6IHsgdHlwZSA6ICdzJyB9LFxuXHRcdFx0XHRieVllYXJEYXkgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0YnlXZWVrTnVtYmVyIDogeyB0eXBlIDogJ3MnIH0sXG5cdFx0XHRcdGJ5TW9udGggOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0YnlPZmZzZXQgOiB7IHR5cGUgOiAncycgfSxcblx0XHRcdFx0d2Vla1N0YXJ0RGF5IDogeyB0eXBlIDogJ2VzJywgc3ViVHlwZUNvbnN0cnVjdG9yIDogS2FsdHVyYVNjaGVkdWxlRXZlbnRSZWN1cnJlbmNlRGF5LCBzdWJUeXBlIDogJ0thbHR1cmFTY2hlZHVsZUV2ZW50UmVjdXJyZW5jZURheScgfVxuICAgICAgICAgICAgfVxuICAgICAgICApO1xuICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH1cbn1cblxuS2FsdHVyYVR5cGVzRmFjdG9yeS5yZWdpc3RlclR5cGUoJ0thbHR1cmFTY2hlZHVsZUV2ZW50UmVjdXJyZW5jZScsS2FsdHVyYVNjaGVkdWxlRXZlbnRSZWN1cnJlbmNlKTtcbiJdfQ==
